<?php
 namespace Alipay\Key; use Alipay\Exception\AlipayInvalidKeyException; use Alipay\Exception\AlipayOpenSslException; abstract class AlipayKey implements \Serializable { protected $resource; public static function create($key) { $instance = new static(); $instance->load($key); return $instance; } protected function __construct() { } public function __destruct() { $this->release(); } public function __clone() { $key = $this->asString(); $this->resource = null; $this->load($key); } protected function load($certificate) { if ($this->isLoaded()) { throw new AlipayInvalidKeyException('Resource of key has already been initialized'); } if (is_file($certificate)) { $certificate = 'file://' . $certificate; } $this->resource = static::getKey($certificate); } public function isLoaded() { return $this->resource !== null && is_resource($this->resource); } protected function release() { if ($this->isLoaded()) { @openssl_free_key($this->resource); } $this->resource = null; } public function asResource() { return $this->resource; } public function asString() { return static::toString($this->resource); } public static function fromResource($resource) { $instance = new static(); $instance->resource = $resource; return $instance; } public static function toString($resource) { throw new AlipayOpenSslException(); } public static function getKey($certificate) { throw new AlipayInvalidKeyException(openssl_error_string() . " ($certificate)"); } public function serialize() { return $this->asString(); } public function unserialize($data) { $this->load($data); } } 