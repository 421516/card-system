<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp85ba11) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp5780b9 = Geetest\API::verify($sp85ba11->post('geetest_challenge'), $sp85ba11->post('geetest_validate'), $sp85ba11->post('geetest_seccode')); if (!$sp5780b9) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $spfed6d4 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $sp65e297 = $sp85ba11->post('type', ''); if ($sp65e297 === 'cookie') { $sp96c129 = Cookie::get('customer'); if (strlen($sp96c129) !== 32) { return Response::success(); } $spfed6d4->where('customer', $sp96c129); } elseif ($sp65e297 === 'order_no') { $sp64a7d9 = $sp85ba11->post('order_no', ''); if (strlen($sp64a7d9) !== 19) { return Response::success(); } $spfed6d4->where('order_no', $sp64a7d9); } elseif ($sp65e297 === 'email') { $sp68ce3d = $sp85ba11->post('email', ''); if (strlen($sp68ce3d) < 6) { return Response::success(); } $spfed6d4->where('email', $sp68ce3d); } else { return Response::fail('请选择查询类型'); } $sp0ba550 = $spfed6d4->orderBy('id', 'DESC')->get(array('id', 'created_at', 'order_no', 'email', 'status', 'count', 'paid')); $spe8d4ae = ''; return Response::success(array('list' => $sp0ba550, 'msg' => count($sp0ba550) ? $spe8d4ae : '')); } }