<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp2d83a6) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp46dd86 = Geetest\API::verify($sp2d83a6->post('geetest_challenge'), $sp2d83a6->post('geetest_validate'), $sp2d83a6->post('geetest_seccode')); if (!$sp46dd86) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $spedc15a = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $spcbde7f = $sp2d83a6->post('type', ''); if ($spcbde7f === 'cookie') { $sp04bdf6 = Cookie::get('customer'); if (strlen($sp04bdf6) !== 32) { return Response::success(); } $spedc15a->where('customer', $sp04bdf6); } elseif ($spcbde7f === 'order_no') { $sp2e5c77 = $sp2d83a6->post('order_no', ''); if (strlen($sp2e5c77) !== 19) { return Response::success(); } $spedc15a->where('order_no', $sp2e5c77); } elseif ($spcbde7f === 'email') { $sp2866eb = $sp2d83a6->post('email', ''); if (strlen($sp2866eb) < 6) { return Response::success(); } $spedc15a->where('email', $sp2866eb); } else { return Response::fail('请选择查询类型'); } $sp8ea0e0 = $spedc15a->with(array('card_orders.card' => function (Relation $spedc15a) { $spedc15a->select(array('id', 'card')); }))->orderBy('id', 'DESC')->get(array('id', 'created_at', 'order_no', 'email', 'status', 'count', 'paid')); $sp72ddc3 = ''; return Response::success(array('list' => $sp8ea0e0, 'msg' => count($sp8ea0e0) ? $sp72ddc3 : '')); } }