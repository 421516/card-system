<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $spdd9f33) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $sp123706 = Geetest\API::verify($spdd9f33->post('geetest_challenge'), $spdd9f33->post('geetest_validate'), $spdd9f33->post('geetest_seccode')); if (!$sp123706) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp26c3c2 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $sp9d3dc0 = $spdd9f33->post('type', ''); if ($sp9d3dc0 === 'cookie') { $spf3ee87 = Cookie::get('customer'); if (strlen($spf3ee87) !== 32) { return Response::success(); } $sp26c3c2->where('customer', $spf3ee87); } elseif ($sp9d3dc0 === 'order_no') { $sp2c969b = $spdd9f33->post('order_no', ''); if (strlen($sp2c969b) !== 19) { return Response::success(); } $sp26c3c2->where('order_no', $sp2c969b); } elseif ($sp9d3dc0 === 'email') { $sp9188d2 = $spdd9f33->post('email', ''); if (strlen($sp9188d2) < 6) { return Response::success(); } $sp26c3c2->where('email', $sp9188d2); } else { return Response::fail('请选择查询类型'); } $spec1114 = $sp26c3c2->with(array('card_orders.card' => function (Relation $sp26c3c2) { $sp26c3c2->select(array('id', 'card')); }))->orderBy('id', 'DESC')->get(array('id', 'created_at', 'order_no', 'email', 'status', 'count', 'paid')); $spc26424 = ''; return Response::success(array('list' => $spec1114, 'msg' => count($spec1114) ? $spc26424 : '')); } }