<?php
namespace App\Http\Controllers\Shop; use Carbon\Carbon; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; use App\Library\Geetest; use Illuminate\Support\Facades\Cookie; class Order extends Controller { function get(Request $sp845342) { if ((int) \App\System::_get('vcode_shop_search') === 1) { $spec9b7c = Geetest\API::verify($sp845342->post('geetest_challenge'), $sp845342->post('geetest_validate'), $sp845342->post('geetest_seccode')); if (!$spec9b7c) { return Response::fail('系统无法接受您的验证结果，请刷新页面后重试。'); } } $sp3eff46 = \App\Order::where('created_at', '>=', (new Carbon())->addDay(-30)); $sp0eab44 = $sp845342->post('type', ''); if ($sp0eab44 === 'cookie') { $spf10c9d = Cookie::get('customer'); if (strlen($spf10c9d) !== 32) { return Response::success(); } $sp3eff46->where('customer', $spf10c9d); } elseif ($sp0eab44 === 'order_no') { $spae7e02 = $sp845342->post('order_no', ''); if (strlen($spae7e02) !== 19) { return Response::success(); } $sp3eff46->where('order_no', $spae7e02); } elseif ($sp0eab44 === 'email') { $sp77dac0 = $sp845342->post('email', ''); if (strlen($sp77dac0) < 6) { return Response::success(); } $sp3eff46->where('email', $sp77dac0); } else { return Response::fail('请选择查询类型'); } $spd1b01a = $sp3eff46->with(array('card_orders.card' => function (Relation $sp3eff46) { $sp3eff46->select(array('id', 'card')); }))->orderBy('id', 'DESC')->get(array('id', 'created_at', 'order_no', 'email', 'status', 'count', 'paid')); $sp57d42f = ''; return Response::success(array('list' => $spd1b01a, 'msg' => count($spd1b01a) ? $sp57d42f : '')); } }