<?php
namespace App\Http\Controllers\Shop; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Product extends Controller { function get(Request $sp2d83a6) { $spd8dba1 = (int) $sp2d83a6->post('category_id'); if (!$spd8dba1) { return Response::forbidden('请选择商品分类'); } $sp58b2cb = \App\Category::where('id', $spd8dba1)->first(); if (!$sp58b2cb) { return Response::forbidden('商品分类未找到'); } if ($sp58b2cb->password_open && $sp2d83a6->post('password') !== $sp58b2cb->password) { return Response::fail('分类密码输入错误'); } $spf297da = \App\Product::where('category_id', $spd8dba1)->where('enabled', 1)->with(array('cards' => function (Relation $spedc15a) { $spedc15a->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->orderBy('sort')->get(); foreach ($spf297da as $spb0ecc4) { $spb0ecc4->setAttribute('count', count($spb0ecc4->cards) ? $spb0ecc4->cards[0]->count : 0); $spb0ecc4->setVisible(array('id', 'name', 'description', 'count', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); } return Response::success($spf297da); } function verifyPassword(Request $sp2d83a6) { $spd09702 = (int) $sp2d83a6->post('product_id'); if (!$spd09702) { return Response::forbidden('请选择商品'); } $spb0ecc4 = \App\Product::where('id', $spd09702)->first(); if (!$spb0ecc4) { return Response::forbidden('商品未找到'); } if ($spb0ecc4->password_open && $sp2d83a6->post('password') !== $spb0ecc4->password) { return Response::fail('商品密码输入错误'); } return Response::success(); } }