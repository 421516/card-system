<?php
namespace App\Http\Controllers\Shop; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Product extends Controller { function get(Request $sp0fc69c) { $sp3c5594 = (int) $sp0fc69c->post('category_id'); if (!$sp3c5594) { return Response::forbidden('请选择商品分类'); } $sp67f4a3 = \App\Category::where('id', $sp3c5594)->first(); if (!$sp67f4a3) { return Response::forbidden('商品分类未找到'); } if ($sp67f4a3->password_open && $sp0fc69c->post('password') !== $sp67f4a3->password) { return Response::fail('分类密码输入错误'); } $sp8fe2ce = \App\Product::where('category_id', $sp3c5594)->where('enabled', 1)->with(array('cards' => function (Relation $sp3f78ce) { $sp3f78ce->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->orderBy('sort')->get(); foreach ($sp8fe2ce as $spcf7f28) { $spcf7f28->setAttribute('count', count($spcf7f28->cards) ? $spcf7f28->cards[0]->count : 0); $spcf7f28->setVisible(array('id', 'name', 'description', 'count', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); } return Response::success($sp8fe2ce); } function verifyPassword(Request $sp0fc69c) { $spedd229 = (int) $sp0fc69c->post('product_id'); if (!$spedd229) { return Response::forbidden('请选择商品'); } $spcf7f28 = \App\Product::where('id', $spedd229)->first(); if (!$spcf7f28) { return Response::forbidden('商品未找到'); } if ($spcf7f28->password_open && $sp0fc69c->post('password') !== $spcf7f28->password) { return Response::fail('商品密码输入错误'); } return Response::success(); } }