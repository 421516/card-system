<?php
namespace App\Http\Controllers\Shop; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Product extends Controller { function get(Request $spdd9f33) { $sp4a6190 = (int) $spdd9f33->post('category_id'); if (!$sp4a6190) { return Response::forbidden('请选择商品分类'); } $sp8d0209 = \App\Category::where('id', $sp4a6190)->first(); if (!$sp8d0209) { return Response::forbidden('商品分类未找到'); } if ($sp8d0209->password_open && $spdd9f33->post('password') !== $sp8d0209->password) { return Response::fail('分类密码输入错误'); } $sp844231 = \App\Product::where('category_id', $sp4a6190)->where('enabled', 1)->with(array('cards' => function (Relation $sp26c3c2) { $sp26c3c2->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->orderBy('sort')->get(); foreach ($sp844231 as $sp32da29) { $sp32da29->setAttribute('count', count($sp32da29->cards) ? $sp32da29->cards[0]->count : 0); $sp32da29->setVisible(array('id', 'name', 'description', 'count', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); } return Response::success($sp844231); } function verifyPassword(Request $spdd9f33) { $spfafc60 = (int) $spdd9f33->post('product_id'); if (!$spfafc60) { return Response::forbidden('请选择商品'); } $sp32da29 = \App\Product::where('id', $spfafc60)->first(); if (!$sp32da29) { return Response::forbidden('商品未找到'); } if ($sp32da29->password_open && $spdd9f33->post('password') !== $sp32da29->password) { return Response::fail('商品密码输入错误'); } return Response::success(); } }