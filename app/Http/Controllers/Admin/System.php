<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class System extends Controller { private function set(Request $sp845342, $sp9bc51c) { foreach ($sp9bc51c as $spe51eb0) { if ($sp845342->has($spe51eb0)) { \App\System::_set($spe51eb0, $sp845342->post($spe51eb0)); } } } private function setMoney(Request $sp845342, $sp9bc51c) { foreach ($sp9bc51c as $spe51eb0) { if ($sp845342->has($spe51eb0)) { \App\System::_set($spe51eb0, intval($sp845342->post($spe51eb0) * 100)); } } } private function setInt(Request $sp845342, $sp9bc51c) { foreach ($sp9bc51c as $spe51eb0) { if ($sp845342->has($spe51eb0)) { \App\System::_set($spe51eb0, (int) $sp845342->post($spe51eb0)); } } } function setItem(Request $sp845342) { $spe51eb0 = $sp845342->post('name'); $spffe9f9 = $sp845342->post('value'); if (!$spe51eb0 || !$spffe9f9) { return Response::forbidden(); } \App\System::_set($spe51eb0, $spffe9f9); return Response::success(); } function info(Request $sp845342) { $sp79d2b2 = array('app_name', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_bkg', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'js_tj', 'js_kf'); $sp9ff7e9 = array('shop_inventory'); if ($sp845342->isMethod('GET')) { $sp45b2a0 = array(); foreach ($sp79d2b2 as $spe51eb0) { $sp45b2a0[$spe51eb0] = \App\System::_get($spe51eb0); } foreach ($sp9ff7e9 as $spe51eb0) { $sp45b2a0[$spe51eb0] = (int) \App\System::_get($spe51eb0); } return Response::success($sp45b2a0); } $_POST['app_url'] = Helper::formatUrl($_POST['app_url']); $_POST['app_url_api'] = Helper::formatUrl($_POST['app_url_api']); $this->set($sp845342, $sp79d2b2); $this->setInt($sp845342, $sp9ff7e9); return Response::success(); } function order(Request $sp845342) { $sp9bc51c = array('order_clean_unpay_open', 'order_clean_unpay_day'); if ($sp845342->isMethod('GET')) { $sp45b2a0 = array(); foreach ($sp9bc51c as $spe51eb0) { $sp45b2a0[$spe51eb0] = (int) \App\System::_get($spe51eb0); } return Response::success($sp45b2a0); } $this->setInt($sp845342, $sp9bc51c); return Response::success(); } function vcode(Request $sp845342) { $sp79d2b2 = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $sp9ff7e9 = array('vcode_login', 'vcode_shop_buy', 'vcode_shop_search'); if ($sp845342->isMethod('GET')) { $sp45b2a0 = array(); foreach ($sp79d2b2 as $spe51eb0) { $sp45b2a0[$spe51eb0] = \App\System::_get($spe51eb0); } foreach ($sp9ff7e9 as $spe51eb0) { $sp45b2a0[$spe51eb0] = (int) \App\System::_get($spe51eb0); } return Response::success($sp45b2a0); } $this->set($sp845342, $sp79d2b2); $this->setInt($sp845342, $sp9ff7e9); return Response::success(); } function email(Request $sp845342) { $sp79d2b2 = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $sp9ff7e9 = array('mail_send_order'); if ($sp845342->isMethod('GET')) { $sp45b2a0 = array(); foreach ($sp79d2b2 as $spe51eb0) { $sp45b2a0[$spe51eb0] = \App\System::_get($spe51eb0); } foreach ($sp9ff7e9 as $spe51eb0) { $sp45b2a0[$spe51eb0] = (int) \App\System::_get($spe51eb0); } return Response::success($sp45b2a0); } $this->set($sp845342, $sp79d2b2); $this->setInt($sp845342, $sp9ff7e9); return Response::success(); } function storage(Request $sp845342) { $sp79d2b2 = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $sp9ff7e9 = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($sp845342->isMethod('GET')) { $sp45b2a0 = array(); foreach ($sp79d2b2 as $spe51eb0) { $sp45b2a0[$spe51eb0] = \App\System::_get($spe51eb0); } foreach ($sp9ff7e9 as $spe51eb0) { $sp45b2a0[$spe51eb0] = (int) \App\System::_get($spe51eb0); } return Response::success($sp45b2a0); } $this->set($sp845342, $sp79d2b2); $this->set($sp845342, $sp9ff7e9); return Response::success(); } function emailTest(Request $sp845342) { $this->validate($sp845342, array('to' => 'required')); $spc8a573 = $sp845342->post('to'); try { $spec9b7c = \Mail::to($spc8a573)->send(new \App\Mail\Test()); return Response::success($spec9b7c); } catch (\Exception $sp805d3e) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $sp805d3e->getMessage()); return Response::fail($sp805d3e->getMessage(), $sp805d3e); } } function orderClean(Request $sp845342) { $this->validate($sp845342, array('day' => 'required|integer|min:1')); $sp071519 = (int) $sp845342->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$sp071519))->delete(); return Response::success(); } }