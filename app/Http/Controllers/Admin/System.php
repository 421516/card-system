<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class System extends Controller { private function set(Request $sp2d83a6, $sp0554e8) { foreach ($sp0554e8 as $sp074e36) { if ($sp2d83a6->has($sp074e36)) { \App\System::_set($sp074e36, $sp2d83a6->post($sp074e36)); } } } private function setMoney(Request $sp2d83a6, $sp0554e8) { foreach ($sp0554e8 as $sp074e36) { if ($sp2d83a6->has($sp074e36)) { \App\System::_set($sp074e36, intval($sp2d83a6->post($sp074e36) * 100)); } } } private function setInt(Request $sp2d83a6, $sp0554e8) { foreach ($sp0554e8 as $sp074e36) { if ($sp2d83a6->has($sp074e36)) { \App\System::_set($sp074e36, (int) $sp2d83a6->post($sp074e36)); } } } function setItem(Request $sp2d83a6) { $sp074e36 = $sp2d83a6->post('name'); $sp308e09 = $sp2d83a6->post('value'); if (!$sp074e36 || !$sp308e09) { return Response::forbidden(); } \App\System::_set($sp074e36, $sp308e09); return Response::success(); } function info(Request $sp2d83a6) { $sp2d343c = array('app_name', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_bkg', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'js_tj', 'js_kf'); $sp02cc05 = array('shop_inventory'); if ($sp2d83a6->isMethod('GET')) { $spd82bcd = array(); foreach ($sp2d343c as $sp074e36) { $spd82bcd[$sp074e36] = \App\System::_get($sp074e36); } foreach ($sp02cc05 as $sp074e36) { $spd82bcd[$sp074e36] = (int) \App\System::_get($sp074e36); } return Response::success($spd82bcd); } $_POST['app_url'] = Helper::formatUrl($_POST['app_url']); $_POST['app_url_api'] = Helper::formatUrl($_POST['app_url_api']); $this->set($sp2d83a6, $sp2d343c); $this->setInt($sp2d83a6, $sp02cc05); return Response::success(); } function order(Request $sp2d83a6) { $sp0554e8 = array('order_clean_unpay_open', 'order_clean_unpay_day'); if ($sp2d83a6->isMethod('GET')) { $spd82bcd = array(); foreach ($sp0554e8 as $sp074e36) { $spd82bcd[$sp074e36] = (int) \App\System::_get($sp074e36); } return Response::success($spd82bcd); } $this->setInt($sp2d83a6, $sp0554e8); return Response::success(); } function vcode(Request $sp2d83a6) { $sp2d343c = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $sp02cc05 = array('vcode_login', 'vcode_shop_buy', 'vcode_shop_search'); if ($sp2d83a6->isMethod('GET')) { $spd82bcd = array(); foreach ($sp2d343c as $sp074e36) { $spd82bcd[$sp074e36] = \App\System::_get($sp074e36); } foreach ($sp02cc05 as $sp074e36) { $spd82bcd[$sp074e36] = (int) \App\System::_get($sp074e36); } return Response::success($spd82bcd); } $this->set($sp2d83a6, $sp2d343c); $this->setInt($sp2d83a6, $sp02cc05); return Response::success(); } function email(Request $sp2d83a6) { $sp2d343c = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $sp02cc05 = array('mail_send_order'); if ($sp2d83a6->isMethod('GET')) { $spd82bcd = array(); foreach ($sp2d343c as $sp074e36) { $spd82bcd[$sp074e36] = \App\System::_get($sp074e36); } foreach ($sp02cc05 as $sp074e36) { $spd82bcd[$sp074e36] = (int) \App\System::_get($sp074e36); } return Response::success($spd82bcd); } $this->set($sp2d83a6, $sp2d343c); $this->setInt($sp2d83a6, $sp02cc05); return Response::success(); } function storage(Request $sp2d83a6) { $sp2d343c = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $sp02cc05 = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($sp2d83a6->isMethod('GET')) { $spd82bcd = array(); foreach ($sp2d343c as $sp074e36) { $spd82bcd[$sp074e36] = \App\System::_get($sp074e36); } foreach ($sp02cc05 as $sp074e36) { $spd82bcd[$sp074e36] = (int) \App\System::_get($sp074e36); } return Response::success($spd82bcd); } $this->set($sp2d83a6, $sp2d343c); $this->set($sp2d83a6, $sp02cc05); return Response::success(); } function emailTest(Request $sp2d83a6) { $this->validate($sp2d83a6, array('to' => 'required')); $sp708919 = $sp2d83a6->post('to'); try { $sp46dd86 = \Mail::to($sp708919)->send(new \App\Mail\Test()); return Response::success($sp46dd86); } catch (\Exception $spfda1c7) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $spfda1c7->getMessage()); return Response::fail($spfda1c7->getMessage(), $spfda1c7); } } function orderClean(Request $sp2d83a6) { $this->validate($sp2d83a6, array('day' => 'required|integer|min:1')); $sp08cfa6 = (int) $sp2d83a6->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$sp08cfa6))->delete(); return Response::success(); } }