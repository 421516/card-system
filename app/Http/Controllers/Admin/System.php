<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class System extends Controller { private function set(Request $spdd9f33, $spc0dca2) { foreach ($spc0dca2 as $spa8020b) { if ($spdd9f33->has($spa8020b)) { \App\System::_set($spa8020b, $spdd9f33->post($spa8020b)); } } } private function setMoney(Request $spdd9f33, $spc0dca2) { foreach ($spc0dca2 as $spa8020b) { if ($spdd9f33->has($spa8020b)) { \App\System::_set($spa8020b, intval($spdd9f33->post($spa8020b) * 100)); } } } private function setInt(Request $spdd9f33, $spc0dca2) { foreach ($spc0dca2 as $spa8020b) { if ($spdd9f33->has($spa8020b)) { \App\System::_set($spa8020b, (int) $spdd9f33->post($spa8020b)); } } } function setItem(Request $spdd9f33) { $spa8020b = $spdd9f33->post('name'); $spd0bf21 = $spdd9f33->post('value'); if (!$spa8020b || !$spd0bf21) { return Response::forbidden(); } \App\System::_set($spa8020b, $spd0bf21); return Response::success(); } function info(Request $spdd9f33) { $sp4c5a17 = array('app_name', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_bkg', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'js_tj', 'js_kf'); $sp1deab4 = array('shop_inventory'); if ($spdd9f33->isMethod('GET')) { $sp4d5cc2 = array(); foreach ($sp4c5a17 as $spa8020b) { $sp4d5cc2[$spa8020b] = \App\System::_get($spa8020b); } foreach ($sp1deab4 as $spa8020b) { $sp4d5cc2[$spa8020b] = (int) \App\System::_get($spa8020b); } return Response::success($sp4d5cc2); } $_POST['app_url'] = Helper::formatUrl($_POST['app_url']); $_POST['app_url_api'] = Helper::formatUrl($_POST['app_url_api']); $this->set($spdd9f33, $sp4c5a17); $this->setInt($spdd9f33, $sp1deab4); return Response::success(); } function order(Request $spdd9f33) { $spc0dca2 = array('order_clean_unpay_open', 'order_clean_unpay_day'); if ($spdd9f33->isMethod('GET')) { $sp4d5cc2 = array(); foreach ($spc0dca2 as $spa8020b) { $sp4d5cc2[$spa8020b] = (int) \App\System::_get($spa8020b); } return Response::success($sp4d5cc2); } $this->setInt($spdd9f33, $spc0dca2); return Response::success(); } function vcode(Request $spdd9f33) { $sp4c5a17 = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $sp1deab4 = array('vcode_login', 'vcode_shop_buy', 'vcode_shop_search'); if ($spdd9f33->isMethod('GET')) { $sp4d5cc2 = array(); foreach ($sp4c5a17 as $spa8020b) { $sp4d5cc2[$spa8020b] = \App\System::_get($spa8020b); } foreach ($sp1deab4 as $spa8020b) { $sp4d5cc2[$spa8020b] = (int) \App\System::_get($spa8020b); } return Response::success($sp4d5cc2); } $this->set($spdd9f33, $sp4c5a17); $this->setInt($spdd9f33, $sp1deab4); return Response::success(); } function email(Request $spdd9f33) { $sp4c5a17 = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $sp1deab4 = array('mail_send_order'); if ($spdd9f33->isMethod('GET')) { $sp4d5cc2 = array(); foreach ($sp4c5a17 as $spa8020b) { $sp4d5cc2[$spa8020b] = \App\System::_get($spa8020b); } foreach ($sp1deab4 as $spa8020b) { $sp4d5cc2[$spa8020b] = (int) \App\System::_get($spa8020b); } return Response::success($sp4d5cc2); } $this->set($spdd9f33, $sp4c5a17); $this->setInt($spdd9f33, $sp1deab4); return Response::success(); } function storage(Request $spdd9f33) { $sp4c5a17 = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $sp1deab4 = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($spdd9f33->isMethod('GET')) { $sp4d5cc2 = array(); foreach ($sp4c5a17 as $spa8020b) { $sp4d5cc2[$spa8020b] = \App\System::_get($spa8020b); } foreach ($sp1deab4 as $spa8020b) { $sp4d5cc2[$spa8020b] = (int) \App\System::_get($spa8020b); } return Response::success($sp4d5cc2); } $this->set($spdd9f33, $sp4c5a17); $this->set($spdd9f33, $sp1deab4); return Response::success(); } function emailTest(Request $spdd9f33) { $this->validate($spdd9f33, array('to' => 'required')); $sp51f133 = $spdd9f33->post('to'); try { $sp123706 = \Mail::to($sp51f133)->send(new \App\Mail\Test()); return Response::success($sp123706); } catch (\Exception $sp9e5801) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $sp9e5801->getMessage()); return Response::fail($sp9e5801->getMessage(), $sp9e5801); } } function orderClean(Request $spdd9f33) { $this->validate($spdd9f33, array('day' => 'required|integer|min:1')); $sp96acf1 = (int) $spdd9f33->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$sp96acf1))->delete(); return Response::success(); } }