<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Mail; class System extends Controller { private function set(Request $sp85ba11, $sp9ec76c) { foreach ($sp9ec76c as $spb0d9eb) { if ($sp85ba11->has($spb0d9eb)) { \App\System::_set($spb0d9eb, $sp85ba11->post($spb0d9eb)); } } } private function setMoney(Request $sp85ba11, $sp9ec76c) { foreach ($sp9ec76c as $spb0d9eb) { if ($sp85ba11->has($spb0d9eb)) { \App\System::_set($spb0d9eb, (int) round($sp85ba11->post($spb0d9eb) * 100)); } } } private function setInt(Request $sp85ba11, $sp9ec76c) { foreach ($sp9ec76c as $spb0d9eb) { if ($sp85ba11->has($spb0d9eb)) { \App\System::_set($spb0d9eb, (int) $sp85ba11->post($spb0d9eb)); } } } function setItem(Request $sp85ba11) { $spb0d9eb = $sp85ba11->post('name'); $sp67821d = $sp85ba11->post('value'); if (!$spb0d9eb || !$sp67821d) { return Response::forbidden(); } \App\System::_set($spb0d9eb, $sp67821d); return Response::success(); } function info(Request $sp85ba11) { $spfd8163 = array('app_name', 'app_title', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'js_tj', 'js_kf'); $sp7f7301 = array('shop_inventory'); if ($sp85ba11->isMethod('GET')) { $spa9e109 = array(); foreach ($spfd8163 as $spb0d9eb) { $spa9e109[$spb0d9eb] = \App\System::_get($spb0d9eb); } foreach ($sp7f7301 as $spb0d9eb) { $spa9e109[$spb0d9eb] = (int) \App\System::_get($spb0d9eb); } return Response::success($spa9e109); } $sp11a0e0 = array('app_url' => Helper::format_url($_POST['app_url']), 'app_url_api' => Helper::format_url($_POST['app_url_api'])); $sp85ba11->merge($sp11a0e0); $this->set($sp85ba11, $spfd8163); $this->setInt($sp85ba11, $sp7f7301); return Response::success(); } function theme(Request $sp85ba11) { if ($sp85ba11->isMethod('GET')) { \App\ShopTheme::freshList(); return Response::success(array('themes' => \App\ShopTheme::get(), 'default' => \App\ShopTheme::defaultTheme()->name)); } $sp1f6382 = $sp85ba11->post('shop_theme'); if (!\App\ShopTheme::whereName($sp1f6382)->exists()) { return Response::fail(); } \App\System::_set('shop_theme_default', $sp1f6382); \App\ShopTheme::each(function (\App\ShopTheme $sp1b3a33) use($sp85ba11) { if ($sp1b3a33->name === 'Material') { $sp1b3a33->config = array('list_type' => $sp85ba11->post('shop_theme_material_list_type'), 'background' => $sp85ba11->post('shop_theme_material_background')); $sp1b3a33->saveOrFail(); } if ($sp1b3a33->name === 'Classic') { $sp1b3a33->config = array('list_type' => $sp85ba11->post('shop_theme_classic_list_type')); $sp1b3a33->saveOrFail(); } }); return Response::success(); } function order(Request $sp85ba11) { $sp9ec76c = array('order_clean_unpay_open', 'order_clean_unpay_day'); if ($sp85ba11->isMethod('GET')) { $spa9e109 = array(); foreach ($sp9ec76c as $spb0d9eb) { $spa9e109[$spb0d9eb] = (int) \App\System::_get($spb0d9eb); } return Response::success($spa9e109); } $this->setInt($sp85ba11, $sp9ec76c); return Response::success(); } function vcode(Request $sp85ba11) { $spfd8163 = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $sp7f7301 = array('vcode_login', 'vcode_shop_buy', 'vcode_shop_search'); if ($sp85ba11->isMethod('GET')) { $spa9e109 = array(); foreach ($spfd8163 as $spb0d9eb) { $spa9e109[$spb0d9eb] = \App\System::_get($spb0d9eb); } foreach ($sp7f7301 as $spb0d9eb) { $spa9e109[$spb0d9eb] = (int) \App\System::_get($spb0d9eb); } return Response::success($spa9e109); } $this->set($sp85ba11, $spfd8163); $this->setInt($sp85ba11, $sp7f7301); return Response::success(); } function email(Request $sp85ba11) { $spfd8163 = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $sp7f7301 = array('mail_send_order'); if ($sp85ba11->isMethod('GET')) { $spa9e109 = array(); foreach ($spfd8163 as $spb0d9eb) { $spa9e109[$spb0d9eb] = \App\System::_get($spb0d9eb); } foreach ($sp7f7301 as $spb0d9eb) { $spa9e109[$spb0d9eb] = (int) \App\System::_get($spb0d9eb); } return Response::success($spa9e109); } $this->set($sp85ba11, $spfd8163); $this->setInt($sp85ba11, $sp7f7301); return Response::success(); } function storage(Request $sp85ba11) { $spfd8163 = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $sp7f7301 = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($sp85ba11->isMethod('GET')) { $spa9e109 = array(); foreach ($spfd8163 as $spb0d9eb) { $spa9e109[$spb0d9eb] = \App\System::_get($spb0d9eb); } foreach ($sp7f7301 as $spb0d9eb) { $spa9e109[$spb0d9eb] = (int) \App\System::_get($spb0d9eb); } return Response::success($spa9e109); } $this->set($sp85ba11, $spfd8163); $this->set($sp85ba11, $sp7f7301); return Response::success(); } function emailTest(Request $sp85ba11) { $this->validate($sp85ba11, array('to' => 'required')); $sp9a0678 = $sp85ba11->post('to'); try { $sp5780b9 = Mail::to($sp9a0678)->send(new \App\Mail\Test()); return Response::success($sp5780b9); } catch (\Throwable $sp1b3a33) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $sp1b3a33->getMessage()); return Response::fail($sp1b3a33->getMessage(), $sp1b3a33); } } function orderClean(Request $sp85ba11) { $this->validate($sp85ba11, array('day' => 'required|integer|min:1')); $spea7665 = (int) $sp85ba11->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$spea7665))->delete(); return Response::success(); } }