<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use App\Library\Response; use App\Library\WeChatMessage; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class System extends Controller { private function set(Request $sp0fc69c, $sp28c340) { foreach ($sp28c340 as $spb44bf2) { if ($sp0fc69c->has($spb44bf2)) { \App\System::_set($spb44bf2, $sp0fc69c->post($spb44bf2)); } } } private function setMoney(Request $sp0fc69c, $sp28c340) { foreach ($sp28c340 as $spb44bf2) { if ($sp0fc69c->has($spb44bf2)) { \App\System::_set($spb44bf2, intval($sp0fc69c->post($spb44bf2) * 100)); } } } private function setInt(Request $sp0fc69c, $sp28c340) { foreach ($sp28c340 as $spb44bf2) { if ($sp0fc69c->has($spb44bf2)) { \App\System::_set($spb44bf2, (int) $sp0fc69c->post($spb44bf2)); } } } function setItem(Request $sp0fc69c) { $spb44bf2 = $sp0fc69c->post('name'); $spb66e06 = $sp0fc69c->post('value'); if (!$spb44bf2 || !$spb66e06) { return Response::forbidden(); } \App\System::_set($spb44bf2, $spb66e06); return Response::success(); } function info(Request $sp0fc69c) { $sp609a25 = array('app_name', 'app_url', 'app_url_api', 'keywords', 'description', 'shop_bkg', 'shop_ann', 'shop_ann_pop', 'shop_qq', 'js_tj', 'js_kf'); $sp3eb147 = array('shop_inventory'); if ($sp0fc69c->isMethod('GET')) { $sp8abf69 = array(); foreach ($sp609a25 as $spb44bf2) { $sp8abf69[$spb44bf2] = \App\System::_get($spb44bf2); } foreach ($sp3eb147 as $spb44bf2) { $sp8abf69[$spb44bf2] = (int) \App\System::_get($spb44bf2); } return Response::success($sp8abf69); } $_POST['app_url'] = Helper::formatUrl($_POST['app_url']); $_POST['app_url_api'] = Helper::formatUrl($_POST['app_url_api']); $this->set($sp0fc69c, $sp609a25); $this->setInt($sp0fc69c, $sp3eb147); return Response::success(); } function order(Request $sp0fc69c) { $sp28c340 = array('order_clean_unpay_open', 'order_clean_unpay_day'); if ($sp0fc69c->isMethod('GET')) { $sp8abf69 = array(); foreach ($sp28c340 as $spb44bf2) { $sp8abf69[$spb44bf2] = (int) \App\System::_get($spb44bf2); } return Response::success($sp8abf69); } $this->setInt($sp0fc69c, $sp28c340); return Response::success(); } function vcode(Request $sp0fc69c) { $sp609a25 = array('vcode_driver', 'vcode_geetest_id', 'vcode_geetest_key'); $sp3eb147 = array('vcode_login', 'vcode_shop_buy', 'vcode_shop_search'); if ($sp0fc69c->isMethod('GET')) { $sp8abf69 = array(); foreach ($sp609a25 as $spb44bf2) { $sp8abf69[$spb44bf2] = \App\System::_get($spb44bf2); } foreach ($sp3eb147 as $spb44bf2) { $sp8abf69[$spb44bf2] = (int) \App\System::_get($spb44bf2); } return Response::success($sp8abf69); } $this->set($sp0fc69c, $sp609a25); $this->setInt($sp0fc69c, $sp3eb147); return Response::success(); } function email(Request $sp0fc69c) { $sp609a25 = array('mail_driver', 'mail_smtp_host', 'mail_smtp_port', 'mail_smtp_username', 'mail_smtp_password', 'mail_smtp_from_address', 'mail_smtp_from_name', 'mail_smtp_encryption', 'sendcloud_user', 'sendcloud_key'); $sp3eb147 = array('mail_send_order'); if ($sp0fc69c->isMethod('GET')) { $sp8abf69 = array(); foreach ($sp609a25 as $spb44bf2) { $sp8abf69[$spb44bf2] = \App\System::_get($spb44bf2); } foreach ($sp3eb147 as $spb44bf2) { $sp8abf69[$spb44bf2] = (int) \App\System::_get($spb44bf2); } return Response::success($sp8abf69); } $this->set($sp0fc69c, $sp609a25); $this->setInt($sp0fc69c, $sp3eb147); return Response::success(); } function storage(Request $sp0fc69c) { $sp609a25 = array('storage_driver', 'storage_s3_access_key', 'storage_s3_secret_key', 'storage_s3_region', 'storage_s3_bucket', 'storage_oss_access_key', 'storage_oss_secret_key', 'storage_oss_bucket', 'storage_oss_endpoint', 'storage_oss_cdn_domain', 'storage_qiniu_domains_default', 'storage_qiniu_domains_https', 'storage_qiniu_access_key', 'storage_qiniu_secret_key', 'storage_qiniu_bucket', 'storage_qiniu_notify_url'); $sp3eb147 = array('storage_oss_is_ssl', 'storage_oss_is_cname'); if ($sp0fc69c->isMethod('GET')) { $sp8abf69 = array(); foreach ($sp609a25 as $spb44bf2) { $sp8abf69[$spb44bf2] = \App\System::_get($spb44bf2); } foreach ($sp3eb147 as $spb44bf2) { $sp8abf69[$spb44bf2] = (int) \App\System::_get($spb44bf2); } return Response::success($sp8abf69); } $this->set($sp0fc69c, $sp609a25); $this->set($sp0fc69c, $sp3eb147); return Response::success(); } function emailTest(Request $sp0fc69c) { $this->validate($sp0fc69c, array('to' => 'required')); $sp6db8f9 = $sp0fc69c->post('to'); try { $spc8aebe = \Mail::to($sp6db8f9)->send(new \App\Mail\Test()); return Response::success($spc8aebe); } catch (\Exception $sp2a4a9a) { \App\Library\LogHelper::setLogFile('mail'); \Log::error('Mail Test Exception:' . $sp2a4a9a->getMessage()); return Response::fail($sp2a4a9a->getMessage(), $sp2a4a9a); } } function orderClean(Request $sp0fc69c) { $this->validate($sp0fc69c, array('day' => 'required|integer|min:1')); $sp4cd8b1 = (int) $sp0fc69c->post('day'); \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new \Carbon\Carbon())->addDays(-$sp4cd8b1))->delete(); return Response::success(); } }