<?php
namespace App\Http\Controllers\Admin; use App\Library\Helper; use Carbon\Carbon; use function foo\func; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use App\Library\Response; class Pay extends Controller { function get(Request $sp85ba11) { $spfed6d4 = \App\Pay::orderBy('sort'); $sp58a2b5 = $sp85ba11->post('enabled'); if (strlen($sp58a2b5)) { $spfed6d4->whereIn('enabled', explode(',', $sp58a2b5)); } $sp707db4 = $sp85ba11->post('search', false); $sp56c021 = $sp85ba11->post('val', false); if ($sp707db4 && $sp56c021) { if ($sp707db4 == 'simple') { return Response::success($spfed6d4->get(array('id', 'name'))); } elseif ($sp707db4 == 'id') { $spfed6d4->where('id', $sp56c021); } else { $spfed6d4->where($sp707db4, 'like', '%' . $sp56c021 . '%'); } } $sp0ba550 = $spfed6d4->get(); return Response::success($sp0ba550); } function stat(Request $sp85ba11) { $this->validate($sp85ba11, array('day' => 'required|integer|between:1,30')); $spea7665 = (int) $sp85ba11->input('day'); if ($spea7665 === 30) { $sp91d6ff = Carbon::now()->addMonths(-1); } else { $sp91d6ff = Carbon::now()->addDays(-$spea7665); } $sp0ba550 = $this->authQuery($sp85ba11, \App\Order::class)->where(function ($spfed6d4) { $spfed6d4->where('status', \App\Order::STATUS_PAID)->orWhere('status', \App\Order::STATUS_SUCCESS); })->where('paid_at', '>=', $sp91d6ff)->with(array('pay' => function ($spfed6d4) { $spfed6d4->select(array('id', 'name')); }))->groupBy('pay_id')->selectRaw('`pay_id`,COUNT(*) as "count",SUM(`paid`) as "sum"')->get()->toArray(); $sp5780b9 = array(); foreach ($sp0ba550 as $sp33ef93) { if (isset($sp33ef93['pay']) && isset($sp33ef93['pay']['name'])) { $sp58db12 = $sp33ef93['pay']['name']; } else { $sp58db12 = '未知方式#' . $sp33ef93['pay_id']; } $sp5780b9[$sp58db12] = array((int) $sp33ef93['count'], (int) $sp33ef93['sum']); } return Response::success($sp5780b9); } function edit(Request $sp85ba11) { $this->validate($sp85ba11, array('id' => 'required|integer', 'name' => 'required|string', 'img' => 'required|string', 'driver' => 'required|string', 'way' => 'required|string', 'config' => 'required|string')); $spf46c5d = (int) $sp85ba11->post('id'); $spb0d9eb = $sp85ba11->post('name'); $sp4724bc = $sp85ba11->post('img'); $spa07064 = $sp85ba11->post('comment'); $sp38e57e = $sp85ba11->post('driver'); $sp32e1ed = $sp85ba11->post('way'); $spa9e109 = $sp85ba11->post('config'); $sp58a2b5 = (int) $sp85ba11->post('enabled'); $spb09730 = \App\Pay::find($spf46c5d); if (!$spb09730) { $spb09730 = new \App\Pay(); } $spb09730->name = $spb0d9eb; $spb09730->img = $sp4724bc; $spb09730->comment = $spa07064; $spb09730->driver = $sp38e57e; $spb09730->way = $sp32e1ed; $spb09730->config = $spa9e109; $spb09730->enabled = $sp58a2b5; $spb09730->fee_system = $sp85ba11->post('fee_system'); $spb09730->saveOrFail(); return Response::success(); } function comment(Request $sp85ba11) { $this->validate($sp85ba11, array('id' => 'required|integer')); $spf46c5d = (int) $sp85ba11->post('id'); $spb09730 = \App\Pay::findOrFail($spf46c5d); $spb09730->comment = $sp85ba11->post('comment'); $spb09730->save(); return Response::success(); } function sort(Request $sp85ba11) { $this->validate($sp85ba11, array('id' => 'required|integer')); $spf46c5d = (int) $sp85ba11->post('id'); $spb09730 = \App\Pay::findOrFail($spf46c5d); $spb09730->sort = (int) $sp85ba11->post('sort', 1000); $spb09730->save(); return Response::success(); } function fee_system(Request $sp85ba11) { $this->validate($sp85ba11, array('id' => 'required|integer')); $spf46c5d = (int) $sp85ba11->post('id'); $spb09730 = \App\Pay::findOrFail($spf46c5d); $spb09730->fee_system = $sp85ba11->post('fee_system'); $spb09730->saveOrFail(); return Response::success(); } function enable(Request $sp85ba11) { $this->validate($sp85ba11, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,3')); $sp92c7fe = $sp85ba11->post('ids'); $sp58a2b5 = (int) $sp85ba11->post('enabled'); \App\Pay::whereIn('id', explode(',', $sp92c7fe))->update(array('enabled' => $sp58a2b5)); return Response::success(); } function delete(Request $sp85ba11) { $this->validate($sp85ba11, array('id' => 'required|integer')); $spf46c5d = (int) $sp85ba11->post('id'); \App\Pay::whereId($spf46c5d)->delete(); return Response::success(); } }