<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $sp85ba11) { $spfed6d4 = $this->authQuery($sp85ba11, \App\Coupon::class)->with(array('category' => function ($spfed6d4) { $spfed6d4->select(array('id', 'name')); }))->with(array('product' => function ($spfed6d4) { $spfed6d4->select(array('id', 'name')); })); $sp707db4 = $sp85ba11->post('search', false); $sp56c021 = $sp85ba11->post('val', false); if ($sp707db4 && $sp56c021) { if ($sp707db4 == 'id') { $spfed6d4->where('id', $sp56c021); } else { $spfed6d4->where($sp707db4, 'like', '%' . $sp56c021 . '%'); } } $sp7bb93d = (int) $sp85ba11->post('category_id'); $sp16cfd7 = $sp85ba11->post('product_id', -1); if ($sp7bb93d > 0) { if ($sp16cfd7 > 0) { $spfed6d4->where('product_id', $sp16cfd7); } else { $spfed6d4->where('category_id', $sp7bb93d); } } $sp7a1202 = $sp85ba11->post('status'); if (strlen($sp7a1202)) { $spfed6d4->whereIn('status', explode(',', $sp7a1202)); } $sp65e297 = $sp85ba11->post('type'); if (strlen($sp65e297)) { $spfed6d4->whereIn('type', explode(',', $sp65e297)); } $spfed6d4->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $spefc91a = $sp85ba11->post('current_page', 1); $sp179110 = $sp85ba11->post('per_page', 20); $sp0ba550 = $spfed6d4->paginate($sp179110, array('*'), 'page', $spefc91a); return Response::success($sp0ba550); } function create(Request $sp85ba11) { $sp03e375 = $sp85ba11->post('count', 0); $sp65e297 = (int) $sp85ba11->post('type', \App\Coupon::TYPE_ONETIME); $sp220169 = $sp85ba11->post('expire_at'); $sp17be39 = (int) $sp85ba11->post('discount_val'); $sp9037f9 = (int) $sp85ba11->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp979fa8 = $sp85ba11->post('remark'); if ($sp9037f9 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp17be39 < 1 || $sp17be39 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp9037f9 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp17be39 < 1 || $sp17be39 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp7bb93d = (int) $sp85ba11->post('category_id', -1); $sp16cfd7 = (int) $sp85ba11->post('product_id', -1); if ($sp65e297 === \App\Coupon::TYPE_REPEAT) { $spba1aa5 = $sp85ba11->post('coupon'); if (!$spba1aa5) { $spba1aa5 = strtoupper(str_random()); } $sp3c3171 = new \App\Coupon(); $sp3c3171->user_id = $this->getUserIdOrFail($sp85ba11); $sp3c3171->category_id = $sp7bb93d; $sp3c3171->product_id = $sp16cfd7; $sp3c3171->coupon = $spba1aa5; $sp3c3171->type = $sp65e297; $sp3c3171->discount_val = $sp17be39; $sp3c3171->discount_type = $sp9037f9; $sp3c3171->count_all = (int) $sp85ba11->post('count_all', 1); if ($sp3c3171->count_all < 1 || $sp3c3171->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp3c3171->expire_at = $sp220169; $sp3c3171->saveOrFail(); return Response::success(array($sp3c3171->coupon)); } elseif ($sp65e297 === \App\Coupon::TYPE_ONETIME) { if (!$sp03e375) { return Response::forbidden('请输入生成数量'); } if ($sp03e375 > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp2b6ed8 = array(); $spa54047 = array(); $spaef809 = $this->getUserIdOrFail($sp85ba11); $sp0a5813 = Carbon::now(); for ($sp747316 = 0; $sp747316 < $sp03e375; $sp747316++) { $sp3c3171 = strtoupper(str_random()); $spa54047[] = $sp3c3171; $sp2b6ed8[] = array('user_id' => $spaef809, 'coupon' => $sp3c3171, 'category_id' => $sp7bb93d, 'product_id' => $sp16cfd7, 'type' => $sp65e297, 'discount_val' => $sp17be39, 'discount_type' => $sp9037f9, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp979fa8, 'created_at' => $sp0a5813, 'expire_at' => $sp220169); } \App\Coupon::insert($sp2b6ed8); return Response::success($spa54047); } else { return Response::forbidden('unknown type: ' . $sp65e297); } } function edit(Request $sp85ba11) { $spf46c5d = (int) $sp85ba11->post('id'); $spba1aa5 = $sp85ba11->post('coupon'); $sp7bb93d = (int) $sp85ba11->post('category_id', -1); $sp16cfd7 = (int) $sp85ba11->post('product_id', -1); $sp220169 = $sp85ba11->post('expire_at', NULL); $sp7a1202 = (int) $sp85ba11->post('status', \App\Coupon::STATUS_NORMAL); $sp65e297 = (int) $sp85ba11->post('type', \App\Coupon::TYPE_ONETIME); $sp17be39 = (int) $sp85ba11->post('discount_val'); $sp9037f9 = (int) $sp85ba11->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($sp9037f9 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp17be39 < 1 || $sp17be39 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp9037f9 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp17be39 < 1 || $sp17be39 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp3c3171 = $this->authQuery($sp85ba11, \App\Coupon::class)->find($spf46c5d); if ($sp3c3171) { $sp3c3171->coupon = $spba1aa5; $sp3c3171->category_id = $sp7bb93d; $sp3c3171->product_id = $sp16cfd7; $sp3c3171->status = $sp7a1202; $sp3c3171->type = $sp65e297; $sp3c3171->discount_val = $sp17be39; $sp3c3171->discount_type = $sp9037f9; if ($sp65e297 === \App\Coupon::TYPE_REPEAT) { $sp3c3171->count_all = (int) $sp85ba11->post('count_all', 1); if ($sp3c3171->count_all < 1 || $sp3c3171->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp220169) { $sp3c3171->expire_at = $sp220169; } $sp3c3171->saveOrFail(); } else { $sp540ea9 = explode('
', $spba1aa5); for ($sp747316 = 0; $sp747316 < count($sp540ea9); $sp747316++) { $sp9cbe2c = str_replace('', '', trim($sp540ea9[$sp747316])); $sp3c3171 = new \App\Coupon(); $sp3c3171->coupon = $sp9cbe2c; $sp3c3171->category_id = $sp7bb93d; $sp3c3171->product_id = $sp16cfd7; $sp3c3171->status = $sp7a1202; $sp3c3171->type = $sp65e297; $sp3c3171->discount_val = $sp17be39; $sp3c3171->discount_type = $sp9037f9; $sp540ea9[$sp747316] = $sp3c3171; } \App\Product::find($sp16cfd7)->coupons()->saveMany($sp540ea9); } return Response::success(); } function enable(Request $sp85ba11) { $this->validate($sp85ba11, array('ids' => 'required|string', 'enabled' => 'required|integer|between:0,1')); $sp92c7fe = $sp85ba11->post('ids'); $sp58a2b5 = (int) $sp85ba11->post('enabled'); $this->authQuery($sp85ba11, \App\Coupon::class)->whereIn('id', explode(',', $sp92c7fe))->update(array('enabled' => $sp58a2b5)); return Response::success(); } function delete(Request $sp85ba11) { $this->validate($sp85ba11, array('ids' => 'required|string')); $sp92c7fe = $sp85ba11->post('ids'); $this->authQuery($sp85ba11, \App\Coupon::class)->whereIn('id', explode(',', $sp92c7fe))->delete(); return Response::success(); } }