<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use Carbon\Carbon; use Illuminate\Http\Request; use App\Http\Controllers\Controller; class Coupon extends Controller { function get(Request $sp0fc69c) { $sp3f78ce = $this->authQuery($sp0fc69c, \App\Coupon::class)->with(array('category' => function ($sp3f78ce) { $sp3f78ce->select(array('id', 'name')); }))->with(array('product' => function ($sp3f78ce) { $sp3f78ce->select(array('id', 'name')); })); $sp5c7997 = $sp0fc69c->post('search', false); $sp5f3104 = $sp0fc69c->post('val', false); if ($sp5c7997 && $sp5f3104) { if ($sp5c7997 == 'id') { $sp3f78ce->where('id', $sp5f3104); } else { $sp3f78ce->where($sp5c7997, 'like', '%' . $sp5f3104 . '%'); } } $sp3c5594 = (int) $sp0fc69c->post('category_id'); $spedd229 = $sp0fc69c->post('product_id', -1); if ($sp3c5594 > 0) { if ($spedd229 > 0) { $sp3f78ce->where('product_id', $spedd229); } else { $sp3f78ce->where('category_id', $sp3c5594); } } $sp1a65a5 = $sp0fc69c->post('status'); if (strlen($sp1a65a5)) { $sp3f78ce->whereIn('status', explode(',', $sp1a65a5)); } $spdb2534 = $sp0fc69c->post('type'); if (strlen($spdb2534)) { $sp3f78ce->whereIn('type', explode(',', $spdb2534)); } $sp3f78ce->orderByRaw('expire_at DESC,category_id,product_id,type,status'); $sp73a73e = $sp0fc69c->post('current_page', 1); $spfc5387 = $sp0fc69c->post('per_page', 20); $sp36eb9c = $sp3f78ce->paginate($spfc5387, array('*'), 'page', $sp73a73e); return Response::success($sp36eb9c); } function create(Request $sp0fc69c) { $sp1f1cf0 = $sp0fc69c->post('count', 0); $spdb2534 = (int) $sp0fc69c->post('type', \App\Coupon::TYPE_ONETIME); $sp47850c = $sp0fc69c->post('expire_at'); $sp1f3c02 = (int) $sp0fc69c->post('discount_val'); $sp1a5d31 = (int) $sp0fc69c->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); $sp0c1c5d = $sp0fc69c->post('remark'); if ($sp1a5d31 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp1f3c02 < 1 || $sp1f3c02 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp1a5d31 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp1f3c02 < 1 || $sp1f3c02 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp3c5594 = (int) $sp0fc69c->post('category_id', -1); $spedd229 = (int) $sp0fc69c->post('product_id', -1); if ($spdb2534 === \App\Coupon::TYPE_REPEAT) { $sp08578a = $sp0fc69c->post('coupon'); if (!$sp08578a) { $sp08578a = strtoupper(str_random()); } $sp356855 = new \App\Coupon(); $sp356855->user_id = $this->getUserIdOrFail($sp0fc69c); $sp356855->category_id = $sp3c5594; $sp356855->product_id = $spedd229; $sp356855->coupon = $sp08578a; $sp356855->type = $spdb2534; $sp356855->discount_val = $sp1f3c02; $sp356855->discount_type = $sp1a5d31; $sp356855->count_all = (int) $sp0fc69c->post('count_all', 1); if ($sp356855->count_all < 1 || $sp356855->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } $sp356855->expire_at = $sp47850c; $sp356855->saveOrFail(); return Response::success(array($sp356855->coupon)); } elseif ($spdb2534 === \App\Coupon::TYPE_ONETIME) { if (!$sp1f1cf0) { return Response::forbidden('请输入生成数量'); } if ($sp1f1cf0 > 100) { return Response::forbidden('每次生成不能大于100张'); } $sp144bbf = array(); $sp70dbb2 = array(); $sp5670aa = $this->getUserIdOrFail($sp0fc69c); $speca77d = Carbon::now(); for ($sp1b7341 = 0; $sp1b7341 < $sp1f1cf0; $sp1b7341++) { $sp356855 = strtoupper(str_random()); $sp70dbb2[] = $sp356855; $sp144bbf[] = array('user_id' => $sp5670aa, 'coupon' => $sp356855, 'category_id' => $sp3c5594, 'product_id' => $spedd229, 'type' => $spdb2534, 'discount_val' => $sp1f3c02, 'discount_type' => $sp1a5d31, 'status' => \App\Coupon::STATUS_NORMAL, 'remark' => $sp0c1c5d, 'created_at' => $speca77d, 'expire_at' => $sp47850c); } \App\Coupon::insert($sp144bbf); return Response::success($sp70dbb2); } else { return Response::forbidden('unknown type: ' . $spdb2534); } } function edit(Request $sp0fc69c) { $spfc3b4d = (int) $sp0fc69c->post('id'); $sp08578a = $sp0fc69c->post('coupon'); $sp3c5594 = (int) $sp0fc69c->post('category_id', -1); $spedd229 = (int) $sp0fc69c->post('product_id', -1); $sp47850c = $sp0fc69c->post('expire_at', NULL); $sp1a65a5 = (int) $sp0fc69c->post('status', \App\Coupon::STATUS_NORMAL); $spdb2534 = (int) $sp0fc69c->post('type', \App\Coupon::TYPE_ONETIME); $sp1f3c02 = (int) $sp0fc69c->post('discount_val'); $sp1a5d31 = (int) $sp0fc69c->post('discount_type', \App\Coupon::DISCOUNT_TYPE_AMOUNT); if ($sp1a5d31 === \App\Coupon::DISCOUNT_TYPE_AMOUNT) { if ($sp1f3c02 < 1 || $sp1f3c02 > 1000000000) { return Response::fail('优惠券面额需要在0.01-10000000之间'); } } if ($sp1a5d31 === \App\Coupon::DISCOUNT_TYPE_PERCENT) { if ($sp1f3c02 < 1 || $sp1f3c02 > 100) { return Response::fail('优惠券面额需要在1-100之间'); } } $sp356855 = $this->authQuery($sp0fc69c, \App\Coupon::class)->find($spfc3b4d); if ($sp356855) { $sp356855->coupon = $sp08578a; $sp356855->category_id = $sp3c5594; $sp356855->product_id = $spedd229; $sp356855->status = $sp1a65a5; $sp356855->type = $spdb2534; $sp356855->discount_val = $sp1f3c02; $sp356855->discount_type = $sp1a5d31; if ($spdb2534 === \App\Coupon::TYPE_REPEAT) { $sp356855->count_all = (int) $sp0fc69c->post('count_all', 1); if ($sp356855->count_all < 1 || $sp356855->count_all > 10000000) { return Response::fail('可用次数不能超过10000000'); } } if ($sp47850c) { $sp356855->expire_at = $sp47850c; } $sp356855->saveOrFail(); } else { $sp55f729 = explode('
', $sp08578a); for ($sp1b7341 = 0; $sp1b7341 < count($sp55f729); $sp1b7341++) { $spd79afe = str_replace('', '', trim($sp55f729[$sp1b7341])); $sp356855 = new \App\Coupon(); $sp356855->coupon = $spd79afe; $sp356855->category_id = $sp3c5594; $sp356855->product_id = $spedd229; $sp356855->status = $sp1a65a5; $sp356855->type = $spdb2534; $sp356855->discount_val = $sp1f3c02; $sp356855->discount_type = $sp1a5d31; $sp55f729[$sp1b7341] = $sp356855; } \App\Product::find($spedd229)->coupons()->saveMany($sp55f729); } return Response::success(); } function enable(Request $sp0fc69c) { $spf179c6 = $sp0fc69c->post('ids', ''); if (strlen($spf179c6) < 1) { return Response::forbidden(); } $spbca6ef = (int) $sp0fc69c->post('enabled'); $this->authQuery($sp0fc69c, \App\Coupon::class)->whereIn('id', explode(',', $spf179c6))->update(array('enabled' => $spbca6ef)); return Response::success(); } function delete(Request $sp0fc69c) { $spf179c6 = $sp0fc69c->post('ids', ''); if (strlen($spf179c6) < 1) { return Response::forbidden(); } $this->authQuery($sp0fc69c, \App\Coupon::class)->whereIn('id', explode(',', $spf179c6))->delete(); return Response::success(); } }