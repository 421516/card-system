<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($spbef20a, $spfedf4e, $spfd069b, $spbd928e = false) { if (!$spbef20a || !in_array(strtolower($spbef20a->extension()), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($spbef20a->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp3c8c72 = $spbef20a->store($spfd069b, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp805d3e) { \Log::error('File.uploadImg folder:' . $spfd069b . ', error:' . $sp805d3e->getMessage(), array('exception' => $sp805d3e)); if (config('app.debug')) { return Response::fail($sp805d3e->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp3c8c72) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spcda0d1 = System::_get('storage_driver'); $sp7a0d0d = Storage::disk($spcda0d1)->url($sp3c8c72); $sp2a72bd = \App\File::insertGetId(array('user_id' => $spfedf4e, 'driver' => $spcda0d1, 'path' => $sp3c8c72, 'url' => $sp7a0d0d)); if ($sp2a72bd < 1) { Storage::disk($spcda0d1)->delete($sp3c8c72); return Response::fail('数据库繁忙，请稍后再试'); } $spec9b7c = array('id' => $sp2a72bd, 'url' => $sp7a0d0d, 'name' => pathinfo($sp3c8c72, PATHINFO_BASENAME)); if ($spbd928e) { return $spec9b7c; } return Response::success($spec9b7c); } function upload_merchant(Request $sp845342) { $sp7b4336 = $this->getUser($sp845342); if ($sp7b4336 === null) { return Response::forbidden('无效的用户'); } $spbef20a = $sp845342->file('file'); return $this->uploadImg($spbef20a, $sp7b4336->id, \App\File::getProductFolder()); } public function renderImage(Request $sp845342, $sp967c60) { if (str_contains($sp967c60, '..') || str_contains($sp967c60, './') || str_contains($sp967c60, '.\\') || !starts_with($sp967c60, 'images/')) { $spf213bb = file_get_contents(public_path('images/illegal.jpg')); } else { $sp967c60 = str_replace('\\', '/', $sp967c60); $spbef20a = \App\File::wherePath($sp967c60)->first(); if ($spbef20a) { $spcda0d1 = $spbef20a->driver; } else { $spcda0d1 = System::_get('storage_driver'); } if (!in_array($spcda0d1, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $spf213bb = Storage::disk($spcda0d1)->get($sp967c60); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp805d3e) { \Log::error('File.renderImage error: ' . $sp805d3e->getMessage(), array('exception' => $sp805d3e)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp967c60)); die($spf213bb); } function renderQRCode(Request $sp845342, $sp2a72bd) { $spbef20a = \App\File::find($sp2a72bd); if ($spbef20a == null || !$this->isAdmin() && $spbef20a->user_id !== Auth::id()) { return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } return response()->redirectTo($spbef20a->url); } }