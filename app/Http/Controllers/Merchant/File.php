<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp4adaf0, $spc52aea, $spd301df, $sp66b9a9 = false) { if (!$sp4adaf0 || !in_array(strtolower($sp4adaf0->extension()), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp4adaf0->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spdc50fb = $sp4adaf0->store($spd301df, array('disk' => System::_get('storage_driver'))); } catch (\Exception $spfda1c7) { \Log::error('File.uploadImg folder:' . $spd301df . ', error:' . $spfda1c7->getMessage(), array('exception' => $spfda1c7)); if (config('app.debug')) { return Response::fail($spfda1c7->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spdc50fb) { return Response::fail('系统保存文件出错, 请稍后再试'); } $spa6384d = System::_get('storage_driver'); $sp833b34 = Storage::disk($spa6384d)->url($spdc50fb); $spf02ef1 = \App\File::insertGetId(array('user_id' => $spc52aea, 'driver' => $spa6384d, 'path' => $spdc50fb, 'url' => $sp833b34)); if ($spf02ef1 < 1) { Storage::disk($spa6384d)->delete($spdc50fb); return Response::fail('数据库繁忙，请稍后再试'); } $sp46dd86 = array('id' => $spf02ef1, 'url' => $sp833b34, 'name' => pathinfo($spdc50fb, PATHINFO_BASENAME)); if ($sp66b9a9) { return $sp46dd86; } return Response::success($sp46dd86); } function upload_merchant(Request $sp2d83a6) { $spc6e0c5 = $this->getUser($sp2d83a6); if ($spc6e0c5 === null) { return Response::forbidden('无效的用户'); } $sp4adaf0 = $sp2d83a6->file('file'); return $this->uploadImg($sp4adaf0, $spc6e0c5->id, \App\File::getProductFolder()); } public function renderImage(Request $sp2d83a6, $sp379793) { if (str_contains($sp379793, '..') || str_contains($sp379793, './') || str_contains($sp379793, '.\\') || !starts_with($sp379793, 'images/')) { $sp8c24e7 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp379793 = str_replace('\\', '/', $sp379793); $sp4adaf0 = \App\File::wherePath($sp379793)->first(); if ($sp4adaf0) { $spa6384d = $sp4adaf0->driver; } else { $spa6384d = System::_get('storage_driver'); } if (!in_array($spa6384d, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp8c24e7 = Storage::disk($spa6384d)->get($sp379793); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $spfda1c7) { \Log::error('File.renderImage error: ' . $spfda1c7->getMessage(), array('exception' => $spfda1c7)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp379793)); die($sp8c24e7); } function renderQRCode(Request $sp2d83a6, $spf02ef1) { $sp4adaf0 = \App\File::find($spf02ef1); if ($sp4adaf0 == null || !$this->isAdmin() && $sp4adaf0->user_id !== Auth::id()) { return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } return response()->redirectTo($sp4adaf0->url); } }