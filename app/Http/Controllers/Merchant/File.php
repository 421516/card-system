<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp88bc5b, $spc7622d, $sp3e05b9, $sp93ea76 = false) { if (!$sp88bc5b || !in_array(strtolower($sp88bc5b->extension()), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp88bc5b->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp78ff39 = $sp88bc5b->store($sp3e05b9, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp9e5801) { \Log::error('File.uploadImg folder:' . $sp3e05b9 . ', error:' . $sp9e5801->getMessage(), array('exception' => $sp9e5801)); if (config('app.debug')) { return Response::fail($sp9e5801->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp78ff39) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp3f9daa = System::_get('storage_driver'); $sp78f833 = Storage::disk($sp3f9daa)->url($sp78ff39); $sp8e6c71 = \App\File::insertGetId(array('user_id' => $spc7622d, 'driver' => $sp3f9daa, 'path' => $sp78ff39, 'url' => $sp78f833)); if ($sp8e6c71 < 1) { Storage::disk($sp3f9daa)->delete($sp78ff39); return Response::fail('数据库繁忙，请稍后再试'); } $sp123706 = array('id' => $sp8e6c71, 'url' => $sp78f833, 'name' => pathinfo($sp78ff39, PATHINFO_BASENAME)); if ($sp93ea76) { return $sp123706; } return Response::success($sp123706); } function upload_merchant(Request $spdd9f33) { $spa80d08 = $this->getUser($spdd9f33); if ($spa80d08 === null) { return Response::forbidden('无效的用户'); } $sp88bc5b = $spdd9f33->file('file'); return $this->uploadImg($sp88bc5b, $spa80d08->id, \App\File::getProductFolder()); } public function renderImage(Request $spdd9f33, $sp8572d9) { if (str_contains($sp8572d9, '..') || str_contains($sp8572d9, './') || str_contains($sp8572d9, '.\\') || !starts_with($sp8572d9, 'images/')) { $sp172686 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp8572d9 = str_replace('\\', '/', $sp8572d9); $sp88bc5b = \App\File::wherePath($sp8572d9)->first(); if ($sp88bc5b) { $sp3f9daa = $sp88bc5b->driver; } else { $sp3f9daa = System::_get('storage_driver'); } if (!in_array($sp3f9daa, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp172686 = Storage::disk($sp3f9daa)->get($sp8572d9); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp9e5801) { \Log::error('File.renderImage error: ' . $sp9e5801->getMessage(), array('exception' => $sp9e5801)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp8572d9)); die($sp172686); } function renderQRCode(Request $spdd9f33, $sp8e6c71) { $sp88bc5b = \App\File::find($sp8e6c71); if ($sp88bc5b == null || !$this->isAdmin() && $sp88bc5b->user_id !== Auth::id()) { return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } return response()->redirectTo($sp88bc5b->url); } }