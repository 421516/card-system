<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($sp81e22c, $sp5670aa, $sp0aada4, $spa53220 = false) { if (!$sp81e22c || !in_array(strtolower($sp81e22c->extension()), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($sp81e22c->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $spcf3029 = $sp81e22c->store($sp0aada4, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp2a4a9a) { \Log::error('File.uploadImg folder:' . $sp0aada4 . ', error:' . $sp2a4a9a->getMessage(), array('exception' => $sp2a4a9a)); if (config('app.debug')) { return Response::fail($sp2a4a9a->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$spcf3029) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp5fbad2 = System::_get('storage_driver'); $spdfc1ea = Storage::disk($sp5fbad2)->url($spcf3029); $spd95ff1 = \App\File::insertGetId(array('user_id' => $sp5670aa, 'driver' => $sp5fbad2, 'path' => $spcf3029, 'url' => $spdfc1ea)); if ($spd95ff1 < 1) { Storage::disk($sp5fbad2)->delete($spcf3029); return Response::fail('数据库繁忙，请稍后再试'); } $spc8aebe = array('id' => $spd95ff1, 'url' => $spdfc1ea, 'name' => pathinfo($spcf3029, PATHINFO_BASENAME)); if ($spa53220) { return $spc8aebe; } return Response::success($spc8aebe); } function upload_merchant(Request $sp0fc69c) { $sp3353ce = $this->getUser($sp0fc69c); if ($sp3353ce === null) { return Response::forbidden('无效的用户'); } $sp81e22c = $sp0fc69c->file('file'); return $this->uploadImg($sp81e22c, $sp3353ce->id, \App\File::getProductFolder()); } public function renderImage(Request $sp0fc69c, $sp29cbd6) { if (str_contains($sp29cbd6, '..') || str_contains($sp29cbd6, './') || str_contains($sp29cbd6, '.\\') || !starts_with($sp29cbd6, 'images/')) { $sp949b86 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp29cbd6 = str_replace('\\', '/', $sp29cbd6); $sp81e22c = \App\File::wherePath($sp29cbd6)->first(); if ($sp81e22c) { $sp5fbad2 = $sp81e22c->driver; } else { $sp5fbad2 = System::_get('storage_driver'); } if (!in_array($sp5fbad2, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp949b86 = Storage::disk($sp5fbad2)->get($sp29cbd6); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp2a4a9a) { \Log::error('File.renderImage error: ' . $sp2a4a9a->getMessage(), array('exception' => $sp2a4a9a)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp29cbd6)); die($sp949b86); } function renderQRCode(Request $sp0fc69c, $spd95ff1) { $sp81e22c = \App\File::find($spd95ff1); if ($sp81e22c == null || !$this->isAdmin() && $sp81e22c->user_id !== Auth::id()) { return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } return response()->redirectTo($sp81e22c->url); } }