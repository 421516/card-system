<?php
namespace App\Http\Controllers\Merchant; use App\Library\Response; use App\System; use function GuzzleHttp\Psr7\mimetype_from_filename; use Illuminate\Http\Request; use App\Http\Controllers\Controller; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Storage; class File extends Controller { public static function uploadImg($spf23d7d, $spaef809, $sp581e71, $spe24da7 = false) { try { $spea5bf7 = $spf23d7d->extension(); } catch (\Throwable $sp1b3a33) { return Response::fail($sp1b3a33->getMessage()); } if (!$spf23d7d || !in_array(strtolower($spea5bf7), array('jpg', 'jpeg', 'png', 'gif'))) { return Response::fail('图片错误, 系统支持jpg/png/gif格式'); } if ($spf23d7d->getSize() > 5 * 1024 * 1024) { return Response::fail('图片不能大于5MB'); } try { $sp4ef8fc = $spf23d7d->store($sp581e71, array('disk' => System::_get('storage_driver'))); } catch (\Exception $sp1b3a33) { \Log::error('File.uploadImg folder:' . $sp581e71 . ', error:' . $sp1b3a33->getMessage(), array('exception' => $sp1b3a33)); if (config('app.debug')) { return Response::fail($sp1b3a33->getMessage()); } else { return Response::fail('上传文件失败, 内部错误, 请联系客服'); } } if (!$sp4ef8fc) { return Response::fail('系统保存文件出错, 请稍后再试'); } $sp38e57e = System::_get('storage_driver'); $sp11a0e0 = Storage::disk($sp38e57e)->url($sp4ef8fc); $spd287e9 = \App\File::insertGetId(array('user_id' => $spaef809, 'driver' => $sp38e57e, 'path' => $sp4ef8fc, 'url' => $sp11a0e0)); if ($spd287e9 < 1) { Storage::disk($sp38e57e)->delete($sp4ef8fc); return Response::fail('数据库繁忙，请稍后再试'); } $sp5780b9 = array('id' => $spd287e9, 'url' => $sp11a0e0, 'name' => pathinfo($sp4ef8fc, PATHINFO_BASENAME)); if ($spe24da7) { return $sp5780b9; } return Response::success($sp5780b9); } function upload_merchant(Request $sp85ba11) { $spb66d5f = $this->getUser($sp85ba11); if ($spb66d5f === null) { return Response::forbidden('无效的用户'); } $spf23d7d = $sp85ba11->file('file'); return $this->uploadImg($spf23d7d, $spb66d5f->id, \App\File::getProductFolder()); } public function renderImage(Request $sp85ba11, $sp3166c0) { if (str_contains($sp3166c0, '..') || str_contains($sp3166c0, './') || str_contains($sp3166c0, '.\\') || !starts_with($sp3166c0, 'images/')) { $sp8afee4 = file_get_contents(public_path('images/illegal.jpg')); } else { $sp3166c0 = str_replace('\\', '/', $sp3166c0); $spf23d7d = \App\File::wherePath($sp3166c0)->first(); if ($spf23d7d) { $sp38e57e = $spf23d7d->driver; } else { $sp38e57e = System::_get('storage_driver'); } if (!in_array($sp38e57e, array('local', 's3', 'oss', 'qiniu'))) { return response()->view('message', array('title' => '404', 'message' => '404 Driver NotFound'), 404); } try { $sp8afee4 = Storage::disk($sp38e57e)->get($sp3166c0); } catch (\Illuminate\Contracts\Filesystem\FileNotFoundException $sp1b3a33) { \Log::error('File.renderImage error: ' . $sp1b3a33->getMessage(), array('exception' => $sp1b3a33)); return response()->view('message', array('title' => '404', 'message' => '404 NotFound'), 404); } } ob_end_clean(); header('Content-Type: ' . mimetype_from_filename($sp3166c0)); die($sp8afee4); } }