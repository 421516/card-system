<?php
namespace App\Http\Controllers; use App\Category; use App\Library\Helper; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($spb66d5f, $sp9a35dc = null, $spf85ebf = null) { $spa9e109 = array('url' => config('app.url'), 'company' => config('app.company'), 'name' => config('app.name'), 'logo' => config('app.logo')); $spa9e109['shop'] = array('name' => config('app.name'), 'qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'inventory' => System::_getInt('shop_inventory')); if ($spf85ebf) { $sp9a35dc->setVisible(array('id', 'name', 'password_open')); if ($sp9a35dc->password_open) { $sp9a35dc->setAttribute('password', $sp9a35dc->getTmpPassword()); $sp9a35dc->addVisible(array('password')); } $spf85ebf->setForShop($spb66d5f); $spa9e109['categories'] = array($sp9a35dc); $spa9e109['product'] = $spf85ebf; $spb0d9eb = $spf85ebf->name . ' - ' . $spa9e109['name']; $spf21874 = $spf85ebf->description; if (@$spf21874[0] === '{') { $sp46107c = array(); preg_match_all('/"insert":"(.+?)"/', $spf21874, $sp46107c); $spf21874 = str_replace('\\n', ' ', @join(' ', $sp46107c[1])); } } elseif ($sp9a35dc) { $sp9a35dc->setVisible(array('id', 'name', 'password_open')); $spa9e109['categories'] = array($sp9a35dc); $spa9e109['product'] = null; $spb0d9eb = $sp9a35dc->name . ' - ' . $spa9e109['name']; $spf21874 = $sp9a35dc->name; } else { $sp71b275 = Category::where('user_id', $spb66d5f->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp71b275 as $sp9a35dc) { $sp9a35dc->setVisible(array('id', 'name', 'password_open')); } $spa9e109['categories'] = $sp71b275; $spb0d9eb = $spa9e109['name']; $spf21874 = $spa9e109['shop']['ann']; if (@$spf21874[0] === '{') { $sp46107c = array(); preg_match_all('/"insert":"(.+?)"/', $spf21874, $sp46107c); $spf21874 = str_replace('\\n', ' ', @join(' ', $sp46107c[1])); } } $spa9e109['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($spa9e109['vcode']['driver'] === 'geetest' && ($spa9e109['vcode'] || $spa9e109['search'])) { $spa9e109['vcode']['geetest'] = Geetest\API::get(); } $spa9e109['pays'] = Pay::whereRaw('enabled&' . (Helper::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $sp96c129 = Cookie::get('customer'); $spfe6fd1 = Cookie::make('customer', strlen($sp96c129) !== 32 ? md5(str_random(16)) : $sp96c129, 43200, null, null, false, false); $sp72feae = null; if (isset($_GET['theme'])) { $sp72feae = \App\ShopTheme::whereName($_GET['theme'])->first(); } if (!$sp72feae) { $sp72feae = \App\ShopTheme::defaultTheme(); } $spa9e109['theme'] = $spb66d5f->theme_config && isset($spb66d5f->theme_config[$sp72feae->name]) ? $spb66d5f->theme_config[$sp72feae->name] : $sp72feae->config; if (isset($spa9e109['theme']['background']) && $spa9e109['theme']['background'] === '内置1') { $spa9e109['theme']['background'] = Helper::b1_rand_background(); } if ($spf85ebf === null) { if (@$spa9e109['theme']['list_type'] === 'list') { foreach ($spa9e109['categories'] as $sp24a8f4) { if (!$sp24a8f4->password_open) { $sp24a8f4->getProductsForShop(); } } } else { if (count($spa9e109['categories']) === 1) { $sp24a8f4 = $spa9e109['categories'][0]; if (!$sp24a8f4->password_open) { $sp24a8f4->getProductsForShop(); } } } } return response()->view('shop_theme.' . $sp72feae->name . '.index', array('name' => $spb0d9eb, 'title' => config('app.title'), 'keywords' => preg_replace('/[、，；。！？]/', ', ', $spb0d9eb), 'description' => $spf21874, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $spa9e109))->cookie($spfe6fd1); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/s/#/record">查询订单</a>')); } public function shop_default(Request $sp85ba11) { $sp28650d = $sp85ba11->get('tab', ''); return response()->redirectTo('/?theme=Material#/record?tab=' . $sp28650d); } public function shop_category($sp0bf31f) { $this->checkIsInMaintain(); $sp9a35dc = Category::whereId(Helper::id_decode($sp0bf31f, Helper::ID_TYPE_CATEGORY))->with('user')->first(); if (!$sp9a35dc && is_numeric($sp9a35dc)) { $sp9a35dc = Category::whereId($sp0bf31f)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$sp9a35dc) { return $this->_shop_404(); } return $this->_shop_render($sp9a35dc->user, $sp9a35dc); } public function shop_product(Request $sp85ba11, $spef6f4b) { $this->checkIsInMaintain(); $spf85ebf = Product::whereId(Helper::id_decode($spef6f4b, Helper::ID_TYPE_PRODUCT))->with(array('user', 'category'))->first(); if (!$spf85ebf && is_numeric($spef6f4b)) { $spf85ebf = Product::whereId($spef6f4b)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category'))->first(); } if (!$spf85ebf || !$spf85ebf->category) { return $this->_shop_404(); } if ($spf85ebf->password_open && $spf85ebf->password !== $sp85ba11->input('p')) { return view('message', array('title' => '当前商品需要密码', 'message' => ($sp85ba11->has('p') ? '密码错误，请重新输入' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } return $this->_shop_render($spf85ebf->user, $spf85ebf->category, $spf85ebf); } public function shop() { $this->checkIsInMaintain(); $spb66d5f = User::firstOrFail(); return $this->_shop_render($spb66d5f); } public function admin() { $spa9e109 = array(); $spa9e109['url'] = config('app.url'); $spa9e109['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => (int) System::_get('vcode_login')); if ($spa9e109['vcode']['driver'] === 'geetest') { $spa9e109['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $spa9e109)); } }