<?php
namespace App\Http\Controllers; use App\Category; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($spa80d08, $sp8d0209 = null, $sp32da29 = null) { $sp4d5cc2 = array('url' => config('app.url'), 'company' => System::_get('company'), 'name' => config('app.name'), 'logo' => System::_get('logo')); $sp4d5cc2['shop'] = array('qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'bkg' => System::_get('shop_bkg'), 'inventory' => System::_getInt('shop_inventory')); if ($sp32da29) { $sp4d5cc2['categories'] = array($sp8d0209); $sp4d5cc2['product'] = $sp32da29; $spa8020b = $sp32da29->name . ' - ' . $sp4d5cc2['name']; $spce927f = array(); preg_match_all('/"insert":"(.+?)"/', $sp32da29->description, $spce927f); $sp1f98ff = str_replace('\\n', ' ', @join(' ', $spce927f[1])); } elseif ($sp8d0209) { $sp4d5cc2['categories'] = array($sp8d0209); $sp4d5cc2['product'] = null; $spa8020b = $sp8d0209->name . ' - ' . $sp4d5cc2['name']; $sp1f98ff = $sp8d0209->name; } else { $spa60abc = Category::where('user_id', $spa80d08->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($spa60abc as $sp8d0209) { $sp8d0209->setVisible(array('id', 'name', 'password_open')); } $sp4d5cc2['categories'] = $spa60abc; $spa8020b = $sp4d5cc2['name']; $sp1f98ff = $sp4d5cc2['shop']['ann']; } $sp4d5cc2['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($sp4d5cc2['vcode']['driver'] === 'geetest') { $sp4d5cc2['vcode']['geetest'] = Geetest\API::get(); } $sp4d5cc2['pays'] = Pay::whereRaw('enabled&' . (self::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $spf3ee87 = Cookie::get('customer'); $sp2aa970 = Cookie::make('customer', strlen($spf3ee87) !== 32 ? md5(str_random(16)) : $spf3ee87, 43200); $spda3189 = $spa80d08->shop_template ? $spa80d08->shop_template->id : 0; return response()->view('shop_template.' . $spda3189 . '.index', array('name' => $spa8020b, 'keywords' => preg_replace('/[、，；。！？]/', ', ', $spa8020b), 'description' => $sp1f98ff, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $sp4d5cc2))->cookie($sp2aa970); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/#/record">查询订单</a>')); } public function shop_user($sped151d) { $this->checkIsInMaintain(); $spa80d08 = User::find(\App\UserDomain::id_decode($sped151d)); if (!$spa80d08) { $spa80d08 = User::where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->find($sped151d); } if (!$spa80d08) { return $this->_shop_404(); } return $this->_shop_render($spa80d08); } public function shop_category($spb7426b) { $this->checkIsInMaintain(); $sp8d0209 = Category::whereId(\App\Category::id_decode($spb7426b))->with('user')->first(); if (!$sp8d0209) { $sp8d0209 = Category::whereId($spb7426b)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$sp8d0209) { return $this->_shop_404(); } $sp8d0209->setVisible(array('id', 'name', 'password_open')); return $this->_shop_render($sp8d0209->user, $sp8d0209); } public function shop_product(Request $spdd9f33, $spe94ee8) { $this->checkIsInMaintain(); $sp32da29 = Product::whereId(\App\Product::id_decode($spe94ee8))->with(array('user', 'category', 'cards' => function (Relation $sp26c3c2) { $sp26c3c2->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); if (!$sp32da29) { $sp32da29 = Product::whereId($spe94ee8)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category', 'cards' => function (Relation $sp26c3c2) { $sp26c3c2->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); } if (!$sp32da29 || !$sp32da29->category) { return $this->_shop_404(); } if ($sp32da29->password_open && $sp32da29->password !== $spdd9f33->input('p')) { return view('message', array('title' => '出错', 'message' => ($spdd9f33->has('p') ? '密码错误' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } $sp32da29->category->setVisible(array('id', 'name', 'password_open')); $sp32da29->setAttribute('count', count($sp32da29->cards) ? $sp32da29->cards[0]->count : 0); $sp32da29->setVisible(array('id', 'name', 'description', 'count', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); return $this->_shop_render($sp32da29->user, $sp32da29->category, $sp32da29); } public function shop() { $this->checkIsInMaintain(); $spa80d08 = User::firstOrFail(); return $this->_shop_render($spa80d08); } public function admin() { $sp4d5cc2 = array(); $sp4d5cc2['url'] = config('app.url'); $sp4d5cc2['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => System::_get('vcode_login')); if ($sp4d5cc2['vcode']['driver'] === 'geetest') { $sp4d5cc2['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $sp4d5cc2)); } }