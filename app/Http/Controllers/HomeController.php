<?php
namespace App\Http\Controllers; use App\Category; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($spc6e0c5, $sp58b2cb = null, $spb0ecc4 = null) { $spd82bcd = array('url' => config('app.url'), 'company' => System::_get('company'), 'name' => config('app.name'), 'logo' => System::_get('logo')); $spd82bcd['shop'] = array('qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'bkg' => System::_get('shop_bkg'), 'inventory' => System::_getInt('shop_inventory')); if ($spb0ecc4) { $spd82bcd['categories'] = array($sp58b2cb); $spd82bcd['product'] = $spb0ecc4; $sp074e36 = $spb0ecc4->name . ' - ' . $spd82bcd['name']; $sp94dec6 = array(); preg_match_all('/"insert":"(.+?)"/', $spb0ecc4->description, $sp94dec6); $sp1fecb5 = str_replace('\\n', ' ', @join(' ', $sp94dec6[1])); } elseif ($sp58b2cb) { $spd82bcd['categories'] = array($sp58b2cb); $spd82bcd['product'] = null; $sp074e36 = $sp58b2cb->name . ' - ' . $spd82bcd['name']; $sp1fecb5 = $sp58b2cb->name; } else { $sp219a0f = Category::where('user_id', $spc6e0c5->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp219a0f as $sp58b2cb) { $sp58b2cb->setVisible(array('id', 'name', 'password_open')); } $spd82bcd['categories'] = $sp219a0f; $sp074e36 = $spd82bcd['name']; $sp1fecb5 = $spd82bcd['shop']['ann']; } $spd82bcd['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($spd82bcd['vcode']['driver'] === 'geetest') { $spd82bcd['vcode']['geetest'] = Geetest\API::get(); } $spd82bcd['pays'] = Pay::whereRaw('enabled&' . (self::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $sp04bdf6 = Cookie::get('customer'); $spe5db61 = Cookie::make('customer', strlen($sp04bdf6) !== 32 ? md5(str_random(16)) : $sp04bdf6, 43200); $sp885f37 = $spc6e0c5->shop_template ? $spc6e0c5->shop_template->id : 0; return response()->view('shop_template.' . $sp885f37 . '.index', array('name' => $sp074e36, 'keywords' => preg_replace('/[、，；。！？]/', ', ', $sp074e36), 'description' => $sp1fecb5, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $spd82bcd))->cookie($spe5db61); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/#/record">查询订单</a>')); } public function shop_user($spd3ea11) { $this->checkIsInMaintain(); $spc6e0c5 = User::find(\App\UserDomain::id_decode($spd3ea11)); if (!$spc6e0c5) { $spc6e0c5 = User::where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->find($spd3ea11); } if (!$spc6e0c5) { return $this->_shop_404(); } return $this->_shop_render($spc6e0c5); } public function shop_category($sp89eb70) { $this->checkIsInMaintain(); $sp58b2cb = Category::whereId(\App\Category::id_decode($sp89eb70))->with('user')->first(); if (!$sp58b2cb) { $sp58b2cb = Category::whereId($sp89eb70)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$sp58b2cb) { return $this->_shop_404(); } $sp58b2cb->setVisible(array('id', 'name', 'password_open')); return $this->_shop_render($sp58b2cb->user, $sp58b2cb); } public function shop_product(Request $sp2d83a6, $sp108b7b) { $this->checkIsInMaintain(); $spb0ecc4 = Product::whereId(\App\Product::id_decode($sp108b7b))->with(array('user', 'category', 'cards' => function (Relation $spedc15a) { $spedc15a->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); if (!$spb0ecc4) { $spb0ecc4 = Product::whereId($sp108b7b)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category', 'cards' => function (Relation $spedc15a) { $spedc15a->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); } if (!$spb0ecc4 || !$spb0ecc4->category) { return $this->_shop_404(); } if ($spb0ecc4->password_open && $spb0ecc4->password !== $sp2d83a6->input('p')) { return view('message', array('title' => '出错', 'message' => ($sp2d83a6->has('p') ? '密码错误' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } $spb0ecc4->category->setVisible(array('id', 'name', 'password_open')); $spb0ecc4->setAttribute('count', count($spb0ecc4->cards) ? $spb0ecc4->cards[0]->count : 0); $spb0ecc4->setVisible(array('id', 'name', 'description', 'count', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); return $this->_shop_render($spb0ecc4->user, $spb0ecc4->category, $spb0ecc4); } public function shop() { $this->checkIsInMaintain(); $spc6e0c5 = User::firstOrFail(); return $this->_shop_render($spc6e0c5); } public function admin() { $spd82bcd = array(); $spd82bcd['url'] = config('app.url'); $spd82bcd['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => System::_get('vcode_login')); if ($spd82bcd['vcode']['driver'] === 'geetest') { $spd82bcd['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $spd82bcd)); } }