<?php
namespace App\Http\Controllers; use App\Category; use App\Pay; use App\Product; use App\System; use App\User; use App\UserDomain; use Illuminate\Database\Eloquent\Relations\Relation; use Illuminate\Http\Request; use App\Library\Geetest; use Illuminate\Support\Facades\Auth; use Illuminate\Support\Facades\Cookie; class HomeController extends Controller { private function _shop_render($sp3353ce, $sp67f4a3 = null, $spcf7f28 = null) { $sp8abf69 = array('url' => config('app.url'), 'company' => System::_get('company'), 'name' => config('app.name'), 'logo' => System::_get('logo')); $sp8abf69['shop'] = array('qq' => System::_get('shop_qq'), 'ann' => System::_get('shop_ann'), 'ann_pop' => System::_get('shop_ann_pop'), 'bkg' => System::_get('shop_bkg'), 'inventory' => System::_getInt('shop_inventory')); if ($spcf7f28) { $sp8abf69['categories'] = array($sp67f4a3); $sp8abf69['product'] = $spcf7f28; $spb44bf2 = $spcf7f28->name . ' - ' . $sp8abf69['name']; $spcdd36a = array(); preg_match_all('/"insert":"(.+?)"/', $spcf7f28->description, $spcdd36a); $spc94de5 = str_replace('\\n', ' ', @join(' ', $spcdd36a[1])); } elseif ($sp67f4a3) { $sp8abf69['categories'] = array($sp67f4a3); $sp8abf69['product'] = null; $spb44bf2 = $sp67f4a3->name . ' - ' . $sp8abf69['name']; $spc94de5 = $sp67f4a3->name; } else { $sp8df091 = Category::where('user_id', $sp3353ce->id)->orderBy('sort')->where('enabled', 1)->get(); foreach ($sp8df091 as $sp67f4a3) { $sp67f4a3->setVisible(array('id', 'name', 'password_open')); } $sp8abf69['categories'] = $sp8df091; $spb44bf2 = $sp8abf69['name']; $spc94de5 = $sp8abf69['shop']['ann']; } $sp8abf69['vcode'] = array('driver' => System::_get('vcode_driver'), 'buy' => (int) System::_get('vcode_shop_buy'), 'search' => (int) System::_get('vcode_shop_search')); if ($sp8abf69['vcode']['driver'] === 'geetest') { $sp8abf69['vcode']['geetest'] = Geetest\API::get(); } $sp8abf69['pays'] = Pay::whereRaw('enabled&' . (self::is_mobile() ? Pay::ENABLED_MOBILE : Pay::ENABLED_PC) . '!=0')->orderBy('sort')->get(array('id', 'name', 'img')); $spd1c19c = Cookie::get('customer'); $spe5644b = Cookie::make('customer', strlen($spd1c19c) !== 32 ? md5(str_random(16)) : $spd1c19c, 43200); $sp84ef08 = $sp3353ce->shop_template ? $sp3353ce->shop_template->id : 0; return response()->view('shop_template.' . $sp84ef08 . '.index', array('name' => $spb44bf2, 'keywords' => preg_replace('/[、，；。！？]/', ', ', $spb44bf2), 'description' => $spc94de5, 'js_tj' => System::_get('js_tj'), 'js_kf' => System::_get('js_kf'), 'config' => $sp8abf69))->cookie($spe5644b); } private function _shop_404() { $this->checkIsInMaintain(); return view('message', array('title' => '404 NotFound', 'message' => '该链接不存在<br>
<a style="font-size: 18px" href="/#/record">查询订单</a>')); } public function shop_user($sp25142e) { $this->checkIsInMaintain(); $sp3353ce = User::find(\App\UserDomain::id_decode($sp25142e)); if (!$sp3353ce) { $sp3353ce = User::where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->find($sp25142e); } if (!$sp3353ce) { return $this->_shop_404(); } return $this->_shop_render($sp3353ce); } public function shop_category($sp84fe5d) { $this->checkIsInMaintain(); $sp67f4a3 = Category::whereId(\App\Category::id_decode($sp84fe5d))->with('user')->first(); if (!$sp67f4a3) { $sp67f4a3 = Category::whereId($sp84fe5d)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with('user')->first(); } if (!$sp67f4a3) { return $this->_shop_404(); } $sp67f4a3->setVisible(array('id', 'name', 'password_open')); return $this->_shop_render($sp67f4a3->user, $sp67f4a3); } public function shop_product(Request $sp0fc69c, $sp4f2164) { $this->checkIsInMaintain(); $spcf7f28 = Product::whereId(\App\Product::id_decode($sp4f2164))->with(array('user', 'category', 'cards' => function (Relation $sp3f78ce) { $sp3f78ce->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); if (!$spcf7f28) { $spcf7f28 = Product::whereId($sp4f2164)->where('created_at', '<', \Carbon\Carbon::createFromDate(2019, 1, 1))->with(array('user', 'category', 'cards' => function (Relation $sp3f78ce) { $sp3f78ce->whereRaw('`count_all`>`count_sold`')->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count`')->groupBy('product_id'); }))->first(); } if (!$spcf7f28 || !$spcf7f28->category) { return $this->_shop_404(); } if ($spcf7f28->password_open && $spcf7f28->password !== $sp0fc69c->input('p')) { return view('message', array('title' => '出错', 'message' => ($sp0fc69c->has('p') ? '密码错误' : '请输入密码') . '<br>
<div style="font-size: 14px">
<input id="password" type="password" style="display: block; margin: 8px 0 8px 0">
<button onclick="location.href=location.href.split(\'?\')[0]+\'?p=\'+encodeURI(document.getElementById(\'password\').value)">确认</button>
</div>
')); } $spcf7f28->category->setVisible(array('id', 'name', 'password_open')); $spcf7f28->setAttribute('count', count($spcf7f28->cards) ? $spcf7f28->cards[0]->count : 0); $spcf7f28->setVisible(array('id', 'name', 'description', 'count', 'buy_min', 'buy_max', 'support_coupon', 'password_open', 'price', 'price_whole')); return $this->_shop_render($spcf7f28->user, $spcf7f28->category, $spcf7f28); } public function shop() { $this->checkIsInMaintain(); $sp3353ce = User::firstOrFail(); return $this->_shop_render($sp3353ce); } public function admin() { $sp8abf69 = array(); $sp8abf69['url'] = config('app.url'); $sp8abf69['vcode'] = array('driver' => System::_get('vcode_driver'), 'login' => System::_get('vcode_login')); if ($sp8abf69['vcode']['driver'] === 'geetest') { $sp8abf69['vcode']['geetest'] = Geetest\API::get(); } return view('admin', array('config' => $sp8abf69)); } }