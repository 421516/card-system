<?php
namespace App; use Illuminate\Database\Eloquent\Model; use Illuminate\Database\Eloquent\SoftDeletes; use Illuminate\Support\Facades\DB; class Card extends Model { protected $guarded = array(); use SoftDeletes; protected $dates = array('deleted_at'); const STATUS_NORMAL = 0; const STATUS_SOLD = 1; const STATUS_USED = 2; const TYPE_ONETIME = 0; const TYPE_REPEAT = 1; function orders() { return $this->hasMany(Order::class); } function product() { return $this->belongsTo(Product::class); } public static function add_cards($spaef809, $sp16cfd7, $sp65e297, $sp7a1202, $spddad3d, $sp1f3120) { DB::statement('call add_cards(?,?,?,?,?,?)', array($spaef809, $sp16cfd7, $sp65e297, $sp7a1202, $spddad3d, (int) $sp1f3120)); } public static function _trash($spfed6d4) { DB::transaction(function () use($spfed6d4) { $sp24a8f4 = clone $spfed6d4; $sp24a8f4->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp3d0e34) { foreach ($sp3d0e34 as $sp610a40) { $spf85ebf = \App\Product::where('id', $sp610a40->product_id)->lockForUpdate()->first(); if ($spf85ebf) { $spf85ebf->count_all -= $sp610a40->count_left; $spf85ebf->saveOrFail(); } } }); $spfed6d4->delete(); return true; }); } public static function _restore($spfed6d4) { DB::transaction(function () use($spfed6d4) { $sp24a8f4 = clone $spfed6d4; $sp24a8f4->selectRaw('`product_id`,SUM(`count_all`-`count_sold`) as `count_left`')->groupBy('product_id')->orderByRaw('`product_id`')->chunk(100, function ($sp3d0e34) { foreach ($sp3d0e34 as $sp610a40) { $spf85ebf = \App\Product::where('id', $sp610a40->product_id)->lockForUpdate()->first(); if ($spf85ebf) { $spf85ebf->count_all += $sp610a40->count_left; $spf85ebf->saveOrFail(); } } }); $spfed6d4->restore(); return true; }); } }