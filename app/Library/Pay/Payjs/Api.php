<?php
namespace App\Library\Pay\Payjs; use App\Library\Pay\ApiInterface; require_once __DIR__ . '/sdk/Payjs.php'; use Xhat\Payjs\Payjs; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; public function __construct($spf46c5d) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spf46c5d; $this->url_return = SYS_URL . '/pay/return/' . $spf46c5d; } function goPay($spa9e109, $sp206d07, $sp89af34, $sp92f0c1, $sp28f24f) { if (!isset($spa9e109['mchid'])) { throw new \Exception('请填写mchid'); } if (!isset($spa9e109['key'])) { throw new \Exception('请填写key'); } $sp80da71 = new Payjs($spa9e109); $sp651d92 = strtolower($spa9e109['payway']); $sp29e0c7 = array('total_fee' => $sp28f24f, 'out_trade_no' => $sp206d07, 'body' => $sp206d07, 'notify_url' => $this->url_notify, 'callback_url' => SYS_URL . '/pay/result/' . $sp206d07); if ($sp651d92 === 'native') { $sp60fe53 = $sp80da71->native($sp29e0c7); if (@(int) $sp60fe53['return_code'] !== 1) { die('<h1>支付渠道出错: ' . $sp60fe53['msg'] . '</h1>'); } header('location: /qrcode/pay/' . $sp206d07 . '/payjs/' . base64_encode($sp60fe53['code_url'])); } elseif ($sp651d92 === 'cashier') { $sp60fe53 = $sp80da71->cashier($sp29e0c7); header('Location: ' . $sp60fe53); } else { die('<h1>请填写支付方式</h1>'); } echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; die; } function verify($spa9e109, $spf8927a) { $spf53f48 = isset($spa9e109['isNotify']) && $spa9e109['isNotify']; $sp80da71 = new Payjs($spa9e109); if ($spf53f48) { $sp9610ab = $sp80da71->checkSign($_POST); echo $sp9610ab ? 'success' : 'fail'; } else { $sp9610ab = false; } if ($sp9610ab) { $sp206d07 = $_REQUEST['out_trade_no']; $spbc3979 = $_REQUEST['total_fee']; $sp6a465f = $_REQUEST['payjs_order_id']; $spf8927a($sp206d07, $spbc3979, $sp6a465f); return true; } return false; } }