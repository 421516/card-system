<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Client { private static $requestUrl = 'https://open.youzan.com/api/oauthentry/'; private $accessToken; public function __construct($sp1c441b) { if ('' == $sp1c441b) { throw new Exception('access_token不能为空'); } $this->accessToken = $sp1c441b; } public function get($sp4a290e, $spc906d7, $spb9d69c = array()) { return $this->parseResponse(Http::get($this->url($sp4a290e, $spc906d7), $this->buildRequestParams($sp4a290e, $spb9d69c))); } public function post($sp4a290e, $spc906d7, $spb9d69c = array(), $sp996c6f = array()) { return $this->parseResponse(Http::post($this->url($sp4a290e, $spc906d7), $this->buildRequestParams($sp4a290e, $spb9d69c), $sp996c6f)); } public function url($sp4a290e, $spc906d7) { $spfa6b0e = explode('.', $sp4a290e); $sp4a290e = '/' . $spc906d7 . '/' . $spfa6b0e[count($spfa6b0e) - 1]; array_pop($spfa6b0e); $sp4a290e = implode('.', $spfa6b0e) . $sp4a290e; $spdfc1ea = self::$requestUrl . $sp4a290e; return $spdfc1ea; } private function parseResponse($sp522ba8) { $sp1835de = json_decode($sp522ba8, true); if (null === $sp1835de) { throw new Exception('response invalid, data: ' . $sp522ba8); } return $sp1835de; } private function buildRequestParams($sp4a290e, $sp04ce15) { if (!is_array($sp04ce15)) { $sp04ce15 = array(); } $spe95c4a = $this->getCommonParams($this->accessToken, $sp4a290e); foreach ($sp04ce15 as $spa8af52 => $sp651922) { if (isset($spe95c4a[$spa8af52])) { throw new Exception('参数名冲突'); } $spe95c4a[$spa8af52] = $sp651922; } return $spe95c4a; } private function getCommonParams($sp1c441b, $sp4a290e) { $spb9d69c = array(); $spb9d69c[Protocol::TOKEN_KEY] = $sp1c441b; $spb9d69c[Protocol::METHOD_KEY] = $sp4a290e; return $spb9d69c; } }