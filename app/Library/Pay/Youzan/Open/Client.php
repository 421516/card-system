<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Client { private static $requestUrl = 'https://open.youzan.com/api/oauthentry/'; private $accessToken; public function __construct($spddf33d) { if ('' == $spddf33d) { throw new Exception('access_token不能为空'); } $this->accessToken = $spddf33d; } public function get($sp090f2c, $sp0aeaff, $sp20678b = array()) { return $this->parseResponse(Http::get($this->url($sp090f2c, $sp0aeaff), $this->buildRequestParams($sp090f2c, $sp20678b))); } public function post($sp090f2c, $sp0aeaff, $sp20678b = array(), $sp97b131 = array()) { return $this->parseResponse(Http::post($this->url($sp090f2c, $sp0aeaff), $this->buildRequestParams($sp090f2c, $sp20678b), $sp97b131)); } public function url($sp090f2c, $sp0aeaff) { $spce7490 = explode('.', $sp090f2c); $sp090f2c = '/' . $sp0aeaff . '/' . $spce7490[count($spce7490) - 1]; array_pop($spce7490); $sp090f2c = implode('.', $spce7490) . $sp090f2c; $sp11a0e0 = self::$requestUrl . $sp090f2c; return $sp11a0e0; } private function parseResponse($spd0f9f8) { $sp29e0c7 = json_decode($spd0f9f8, true); if (null === $sp29e0c7) { throw new Exception('response invalid, data: ' . $spd0f9f8); } return $sp29e0c7; } private function buildRequestParams($sp090f2c, $sp3a7bea) { if (!is_array($sp3a7bea)) { $sp3a7bea = array(); } $sp384eef = $this->getCommonParams($this->accessToken, $sp090f2c); foreach ($sp3a7bea as $sp614732 => $sp154f6e) { if (isset($sp384eef[$sp614732])) { throw new Exception('参数名冲突'); } $sp384eef[$sp614732] = $sp154f6e; } return $sp384eef; } private function getCommonParams($spddf33d, $sp090f2c) { $sp20678b = array(); $sp20678b[Protocol::TOKEN_KEY] = $spddf33d; $sp20678b[Protocol::METHOD_KEY] = $sp090f2c; return $sp20678b; } }