<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Client { private static $requestUrl = 'https://open.youzan.com/api/oauthentry/'; private $accessToken; public function __construct($spfab834) { if ('' == $spfab834) { throw new Exception('access_token不能为空'); } $this->accessToken = $spfab834; } public function get($spc24a77, $spa5b6f4, $sp31ee10 = array()) { return $this->parseResponse(Http::get($this->url($spc24a77, $spa5b6f4), $this->buildRequestParams($spc24a77, $sp31ee10))); } public function post($spc24a77, $spa5b6f4, $sp31ee10 = array(), $sp03b3ca = array()) { return $this->parseResponse(Http::post($this->url($spc24a77, $spa5b6f4), $this->buildRequestParams($spc24a77, $sp31ee10), $sp03b3ca)); } public function url($spc24a77, $spa5b6f4) { $sp639ab0 = explode('.', $spc24a77); $spc24a77 = '/' . $spa5b6f4 . '/' . $sp639ab0[count($sp639ab0) - 1]; array_pop($sp639ab0); $spc24a77 = implode('.', $sp639ab0) . $spc24a77; $sp833b34 = self::$requestUrl . $spc24a77; return $sp833b34; } private function parseResponse($spcf353a) { $sp94131d = json_decode($spcf353a, true); if (null === $sp94131d) { throw new Exception('response invalid, data: ' . $spcf353a); } return $sp94131d; } private function buildRequestParams($spc24a77, $spb11fdc) { if (!is_array($spb11fdc)) { $spb11fdc = array(); } $sp8b8b60 = $this->getCommonParams($this->accessToken, $spc24a77); foreach ($spb11fdc as $spf169bd => $spb83a69) { if (isset($sp8b8b60[$spf169bd])) { throw new Exception('参数名冲突'); } $sp8b8b60[$spf169bd] = $spb83a69; } return $sp8b8b60; } private function getCommonParams($spfab834, $spc24a77) { $sp31ee10 = array(); $sp31ee10[Protocol::TOKEN_KEY] = $spfab834; $sp31ee10[Protocol::METHOD_KEY] = $spc24a77; return $sp31ee10; } }