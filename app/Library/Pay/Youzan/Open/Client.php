<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Client { private static $requestUrl = 'https://open.youzan.com/api/oauthentry/'; private $accessToken; public function __construct($sp8ef764) { if ('' == $sp8ef764) { throw new Exception('access_token不能为空'); } $this->accessToken = $sp8ef764; } public function get($spf9cb1e, $spad1878, $sp50fc45 = array()) { return $this->parseResponse(Http::get($this->url($spf9cb1e, $spad1878), $this->buildRequestParams($spf9cb1e, $sp50fc45))); } public function post($spf9cb1e, $spad1878, $sp50fc45 = array(), $sp2e7205 = array()) { return $this->parseResponse(Http::post($this->url($spf9cb1e, $spad1878), $this->buildRequestParams($spf9cb1e, $sp50fc45), $sp2e7205)); } public function url($spf9cb1e, $spad1878) { $spa2435c = explode('.', $spf9cb1e); $spf9cb1e = '/' . $spad1878 . '/' . $spa2435c[count($spa2435c) - 1]; array_pop($spa2435c); $spf9cb1e = implode('.', $spa2435c) . $spf9cb1e; $sp78f833 = self::$requestUrl . $spf9cb1e; return $sp78f833; } private function parseResponse($speec45f) { $sp151100 = json_decode($speec45f, true); if (null === $sp151100) { throw new Exception('response invalid, data: ' . $speec45f); } return $sp151100; } private function buildRequestParams($spf9cb1e, $sp2bfd7e) { if (!is_array($sp2bfd7e)) { $sp2bfd7e = array(); } $sp31d7c1 = $this->getCommonParams($this->accessToken, $spf9cb1e); foreach ($sp2bfd7e as $sp08a7aa => $sp99652d) { if (isset($sp31d7c1[$sp08a7aa])) { throw new Exception('参数名冲突'); } $sp31d7c1[$sp08a7aa] = $sp99652d; } return $sp31d7c1; } private function getCommonParams($sp8ef764, $spf9cb1e) { $sp50fc45 = array(); $sp50fc45[Protocol::TOKEN_KEY] = $sp8ef764; $sp50fc45[Protocol::METHOD_KEY] = $spf9cb1e; return $sp50fc45; } }