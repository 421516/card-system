<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Token { private $clientId; private $clientSecret; private $accessToken; private $refreshToken; private static $requestUrl = 'https://open.youzan.com/oauth/token'; public function __construct($sp4e66ac, $spf3a703, $spddf33d = null, $spe3af6c = null) { $this->clientId = $sp4e66ac; $this->clientSecret = $spf3a703; $this->accessToken = $spddf33d; $this->refreshToken = $spe3af6c; } public function getToken($sp65e297, $sp9ceab1 = array()) { $sp20678b = array(); $sp20678b['client_id'] = $this->clientId; $sp20678b['client_secret'] = $this->clientSecret; if ($sp65e297 === 'oauth') { $sp20678b['grant_type'] = 'authorization_code'; $sp20678b['code'] = $sp9ceab1['code']; $sp20678b['redirect_uri'] = $sp9ceab1['redirect_uri']; } elseif ($sp65e297 === 'refresh_token') { $sp20678b['grant_type'] = 'refresh_token'; $sp20678b['refresh_token'] = $sp9ceab1['refresh_token']; } elseif ($sp65e297 === 'self') { $sp20678b['grant_type'] = 'silent'; $sp20678b['kdt_id'] = $sp9ceab1['kdt_id']; } elseif ($sp65e297 === 'platform_init') { $sp20678b['grant_type'] = 'authorize_platform'; } elseif ($sp65e297 === 'platform') { $sp20678b['grant_type'] = 'authorize_platform'; $sp20678b['kdt_id'] = $sp9ceab1['kdt_id']; } return $this->parseResponse(Http::post(self::$requestUrl, $sp20678b)); } private function parseResponse($spd0f9f8) { $sp29e0c7 = json_decode($spd0f9f8, true); if (null === $sp29e0c7) { throw new Exception('response invalid, data: ' . $spd0f9f8); } return $sp29e0c7; } }