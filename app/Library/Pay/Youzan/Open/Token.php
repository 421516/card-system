<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Token { private $clientId; private $clientSecret; private $accessToken; private $refreshToken; private static $requestUrl = 'https://open.youzan.com/oauth/token'; public function __construct($sp117b5d, $sp7a1ff6, $sp49c28b = null, $sp2ea58c = null) { $this->clientId = $sp117b5d; $this->clientSecret = $sp7a1ff6; $this->accessToken = $sp49c28b; $this->refreshToken = $sp2ea58c; } public function getToken($sp0eab44, $spca929e = array()) { $spf44b7f = array(); $spf44b7f['client_id'] = $this->clientId; $spf44b7f['client_secret'] = $this->clientSecret; if ($sp0eab44 === 'oauth') { $spf44b7f['grant_type'] = 'authorization_code'; $spf44b7f['code'] = $spca929e['code']; $spf44b7f['redirect_uri'] = $spca929e['redirect_uri']; } elseif ($sp0eab44 === 'refresh_token') { $spf44b7f['grant_type'] = 'refresh_token'; $spf44b7f['refresh_token'] = $spca929e['refresh_token']; } elseif ($sp0eab44 === 'self') { $spf44b7f['grant_type'] = 'silent'; $spf44b7f['kdt_id'] = $spca929e['kdt_id']; } elseif ($sp0eab44 === 'platform_init') { $spf44b7f['grant_type'] = 'authorize_platform'; } elseif ($sp0eab44 === 'platform') { $spf44b7f['grant_type'] = 'authorize_platform'; $spf44b7f['kdt_id'] = $spca929e['kdt_id']; } return $this->parseResponse(Http::post(self::$requestUrl, $spf44b7f)); } private function parseResponse($sp81b572) { $sp38c5ae = json_decode($sp81b572, true); if (null === $sp38c5ae) { throw new Exception('response invalid, data: ' . $sp81b572); } return $sp38c5ae; } }