<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Token { private $clientId; private $clientSecret; private $accessToken; private $refreshToken; private static $requestUrl = 'https://open.youzan.com/oauth/token'; public function __construct($sp6b3794, $sp856649, $sp1c441b = null, $sp018578 = null) { $this->clientId = $sp6b3794; $this->clientSecret = $sp856649; $this->accessToken = $sp1c441b; $this->refreshToken = $sp018578; } public function getToken($spdb2534, $spf872de = array()) { $spb9d69c = array(); $spb9d69c['client_id'] = $this->clientId; $spb9d69c['client_secret'] = $this->clientSecret; if ($spdb2534 === 'oauth') { $spb9d69c['grant_type'] = 'authorization_code'; $spb9d69c['code'] = $spf872de['code']; $spb9d69c['redirect_uri'] = $spf872de['redirect_uri']; } elseif ($spdb2534 === 'refresh_token') { $spb9d69c['grant_type'] = 'refresh_token'; $spb9d69c['refresh_token'] = $spf872de['refresh_token']; } elseif ($spdb2534 === 'self') { $spb9d69c['grant_type'] = 'silent'; $spb9d69c['kdt_id'] = $spf872de['kdt_id']; } elseif ($spdb2534 === 'platform_init') { $spb9d69c['grant_type'] = 'authorize_platform'; } elseif ($spdb2534 === 'platform') { $spb9d69c['grant_type'] = 'authorize_platform'; $spb9d69c['kdt_id'] = $spf872de['kdt_id']; } return $this->parseResponse(Http::post(self::$requestUrl, $spb9d69c)); } private function parseResponse($sp522ba8) { $sp1835de = json_decode($sp522ba8, true); if (null === $sp1835de) { throw new Exception('response invalid, data: ' . $sp522ba8); } return $sp1835de; } }