<?php
namespace App\Library\Pay\Youzan\Open; use Exception; class Token { private $clientId; private $clientSecret; private $accessToken; private $refreshToken; private static $requestUrl = 'https://open.youzan.com/oauth/token'; public function __construct($spe0b5ac, $sp8937ab, $sp8ef764 = null, $sp88bd1e = null) { $this->clientId = $spe0b5ac; $this->clientSecret = $sp8937ab; $this->accessToken = $sp8ef764; $this->refreshToken = $sp88bd1e; } public function getToken($sp9d3dc0, $sp200c8e = array()) { $sp50fc45 = array(); $sp50fc45['client_id'] = $this->clientId; $sp50fc45['client_secret'] = $this->clientSecret; if ($sp9d3dc0 === 'oauth') { $sp50fc45['grant_type'] = 'authorization_code'; $sp50fc45['code'] = $sp200c8e['code']; $sp50fc45['redirect_uri'] = $sp200c8e['redirect_uri']; } elseif ($sp9d3dc0 === 'refresh_token') { $sp50fc45['grant_type'] = 'refresh_token'; $sp50fc45['refresh_token'] = $sp200c8e['refresh_token']; } elseif ($sp9d3dc0 === 'self') { $sp50fc45['grant_type'] = 'silent'; $sp50fc45['kdt_id'] = $sp200c8e['kdt_id']; } elseif ($sp9d3dc0 === 'platform_init') { $sp50fc45['grant_type'] = 'authorize_platform'; } elseif ($sp9d3dc0 === 'platform') { $sp50fc45['grant_type'] = 'authorize_platform'; $sp50fc45['kdt_id'] = $sp200c8e['kdt_id']; } return $this->parseResponse(Http::post(self::$requestUrl, $sp50fc45)); } private function parseResponse($speec45f) { $sp151100 = json_decode($speec45f, true); if (null === $sp151100) { throw new Exception('response invalid, data: ' . $speec45f); } return $sp151100; } }