<?php
namespace App\Library\Pay\Youzan\Open; class Protocol { const SIGN_KEY = 'sign'; const VERSION_KEY = 'v'; const APP_ID_KEY = 'app_id'; const METHOD_KEY = 'method'; const FORMAT_KEY = 'format'; const TOKEN_KEY = 'access_token'; const TIMESTAMP_KEY = 'timestamp'; const SIGN_METHOD_KEY = 'sign_method'; const ALLOWED_DEVIATE_SECONDS = 600; const ERR_SYSTEM = -1; const ERR_INVALID_APP_ID = 40001; const ERR_INVALID_APP = 40002; const ERR_INVALID_TIMESTAMP = 40003; const ERR_EMPTY_SIGNATURE = 40004; const ERR_INVALID_SIGNATURE = 40005; const ERR_INVALID_METHOD_NAME = 40006; const ERR_INVALID_METHOD = 40007; const ERR_INVALID_TEAM = 40008; const ERR_PARAMETER = 41000; const ERR_LOGIC = 50000; public static function sign($spa7e761, $sp50fc45, $spf9cb1e = 'md5') { if (!is_array($sp50fc45)) { $sp50fc45 = array(); } ksort($sp50fc45); $sp3dccb7 = ''; foreach ($sp50fc45 as $sp08a7aa => $sp99652d) { $sp3dccb7 .= $sp08a7aa . $sp99652d; } return self::hash($spf9cb1e, $spa7e761 . $sp3dccb7 . $spa7e761); } private static function hash($spf9cb1e, $sp3dccb7) { switch ($spf9cb1e) { case 'md5': default: $spb7f9c9 = md5($sp3dccb7); break; } return $spb7f9c9; } public static function allowedSignMethods() { return array('md5'); } public static function allowedFormat() { return array('json'); } }