<?php
namespace App\Library\Pay\Youzan\Open; class Protocol { const SIGN_KEY = 'sign'; const VERSION_KEY = 'v'; const APP_ID_KEY = 'app_id'; const METHOD_KEY = 'method'; const FORMAT_KEY = 'format'; const TOKEN_KEY = 'access_token'; const TIMESTAMP_KEY = 'timestamp'; const SIGN_METHOD_KEY = 'sign_method'; const ALLOWED_DEVIATE_SECONDS = 600; const ERR_SYSTEM = -1; const ERR_INVALID_APP_ID = 40001; const ERR_INVALID_APP = 40002; const ERR_INVALID_TIMESTAMP = 40003; const ERR_EMPTY_SIGNATURE = 40004; const ERR_INVALID_SIGNATURE = 40005; const ERR_INVALID_METHOD_NAME = 40006; const ERR_INVALID_METHOD = 40007; const ERR_INVALID_TEAM = 40008; const ERR_PARAMETER = 41000; const ERR_LOGIC = 50000; public static function sign($spb28024, $sp20678b, $sp090f2c = 'md5') { if (!is_array($sp20678b)) { $sp20678b = array(); } ksort($sp20678b); $spfe3b14 = ''; foreach ($sp20678b as $sp614732 => $sp154f6e) { $spfe3b14 .= $sp614732 . $sp154f6e; } return self::hash($sp090f2c, $spb28024 . $spfe3b14 . $spb28024); } private static function hash($sp090f2c, $spfe3b14) { switch ($sp090f2c) { case 'md5': default: $spee7d4c = md5($spfe3b14); break; } return $spee7d4c; } public static function allowedSignMethods() { return array('md5'); } public static function allowedFormat() { return array('json'); } }