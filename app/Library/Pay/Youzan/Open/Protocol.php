<?php
namespace App\Library\Pay\Youzan\Open; class Protocol { const SIGN_KEY = 'sign'; const VERSION_KEY = 'v'; const APP_ID_KEY = 'app_id'; const METHOD_KEY = 'method'; const FORMAT_KEY = 'format'; const TOKEN_KEY = 'access_token'; const TIMESTAMP_KEY = 'timestamp'; const SIGN_METHOD_KEY = 'sign_method'; const ALLOWED_DEVIATE_SECONDS = 600; const ERR_SYSTEM = -1; const ERR_INVALID_APP_ID = 40001; const ERR_INVALID_APP = 40002; const ERR_INVALID_TIMESTAMP = 40003; const ERR_EMPTY_SIGNATURE = 40004; const ERR_INVALID_SIGNATURE = 40005; const ERR_INVALID_METHOD_NAME = 40006; const ERR_INVALID_METHOD = 40007; const ERR_INVALID_TEAM = 40008; const ERR_PARAMETER = 41000; const ERR_LOGIC = 50000; public static function sign($spd6c0b2, $sp31ee10, $spc24a77 = 'md5') { if (!is_array($sp31ee10)) { $sp31ee10 = array(); } ksort($sp31ee10); $sp6be7b9 = ''; foreach ($sp31ee10 as $spf169bd => $spb83a69) { $sp6be7b9 .= $spf169bd . $spb83a69; } return self::hash($spc24a77, $spd6c0b2 . $sp6be7b9 . $spd6c0b2); } private static function hash($spc24a77, $sp6be7b9) { switch ($spc24a77) { case 'md5': default: $sp953075 = md5($sp6be7b9); break; } return $sp953075; } public static function allowedSignMethods() { return array('md5'); } public static function allowedFormat() { return array('json'); } }