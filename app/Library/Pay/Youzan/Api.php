<?php
namespace App\Library\Pay\Youzan; use App\Library\Pay\ApiInterface; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; public function __construct($spfc3b4d) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spfc3b4d; $this->url_return = SYS_URL . '/pay/return/' . $spfc3b4d; } private function getAccessToken($sp8abf69) { $sp6b3794 = $sp8abf69['client_id']; $sp856649 = $sp8abf69['client_secret']; $spf872de = array('kdt_id' => $sp8abf69['kdt_id']); $spbcb528 = (new Open\Token($sp6b3794, $sp856649))->getToken('self', $spf872de); if (!isset($spbcb528['access_token'])) { \Log::error('Pay.Youzan.goPay.getToken Error: ' . json_encode($spbcb528)); throw new \Exception('平台支付Token获取失败'); } return $spbcb528['access_token']; } function goPay($sp8abf69, $spbd054b, $sp547016, $speb838e, $sp6c12fc) { $sp50782f = strtolower($sp8abf69['payway']); try { $sp1c441b = $this->getAccessToken($sp8abf69); $sp3f7090 = new Open\Client($sp1c441b); } catch (\Exception $sp2a4a9a) { \Log::error('Pay.Youzan.goPay getAccessToken error', array('exception' => $sp2a4a9a)); throw new \Exception('支付渠道响应超时，请刷新重试'); } $spb9d69c = array('qr_type' => 'QR_TYPE_DYNAMIC', 'qr_price' => $sp6c12fc, 'qr_name' => $sp547016, 'qr_source' => $spbd054b); $spbcb528 = $sp3f7090->get('youzan.pay.qrcode.create', '3.0.0', $spb9d69c); $spbcb528 = isset($spbcb528['response']) ? $spbcb528['response'] : $spbcb528; if (!isset($spbcb528['qr_url'])) { \Log::error('Pay.Youzan.goPay.getQrcode Error: ' . json_encode($spbcb528)); throw new \Exception('平台支付二维码获取失败'); } \App\Order::whereOrderNo($spbd054b)->update(array('pay_trade_no' => $spbcb528['qr_id'])); header('location: /qrcode/pay/' . $spbd054b . '/youzan_' . strtolower($sp50782f) . '?url=' . urlencode($spbcb528['qr_url'])); die; } function verify($sp8abf69, $spc98f69) { $spdcb97c = isset($sp8abf69['isNotify']) && $sp8abf69['isNotify']; $sp6b3794 = $sp8abf69['client_id']; $sp856649 = $sp8abf69['client_secret']; if ($spdcb97c) { $sp3d609b = file_get_contents('php://input'); $sp1835de = json_decode($sp3d609b, true); if (@$sp1835de['test']) { echo 'test success'; return false; } try { $spbfa8f4 = $sp1835de['msg']; } catch (\Exception $sp2a4a9a) { \Log::error('Pay.Youzan.verify get input error#1', array('exception' => $sp2a4a9a, 'post_raw' => $sp3d609b)); echo 'fatal error'; return false; } $sp358ab2 = $sp6b3794 . '' . $spbfa8f4 . '' . $sp856649; $sp23eef6 = md5($sp358ab2); if ($sp23eef6 != $sp1835de['sign']) { \Log::error('Pay.Youzan.verify, sign error $sign_string:' . $sp358ab2 . ', $sign' . $sp23eef6); echo 'fatal error'; return false; } else { echo json_encode(array('code' => 0, 'msg' => 'success')); } $spbfa8f4 = json_decode(urldecode($spbfa8f4), true); if ($sp1835de['type'] === 'TRADE_ORDER_STATE' && $spbfa8f4['status'] === 'TRADE_SUCCESS') { try { $sp1c441b = $this->getAccessToken($sp8abf69); $sp3f7090 = new Open\Client($sp1c441b); } catch (\Exception $sp2a4a9a) { \Log::error('Pay.Youzan.verify getAccessToken error#1', array('exception' => $sp2a4a9a)); echo 'fatal error'; return false; } $spb9d69c = array('tid' => $spbfa8f4['tid']); $spbcb528 = $sp3f7090->get('youzan.trade.get', '3.0.0', $spb9d69c); if (isset($spbcb528['error_response'])) { \Log::error('Pay.Youzan.verify with error：' . $spbcb528['error_response']['msg']); echo 'fatal error'; return false; } $spd496d8 = $spbcb528['response']['trade']; $sp7fd294 = \App\Order::where('pay_trade_no', $spd496d8['qr_id'])->first(); if ($sp7fd294) { $sp10ad64 = $spbfa8f4['tid']; $spc98f69($sp7fd294->order_no, intval($spd496d8['payment'] * 100), $sp10ad64); } } return true; } else { $spbd054b = @$sp8abf69['out_trade_no']; if (strlen($spbd054b) < 5) { throw new \Exception('交易单号未传入'); } $sp7fd294 = \App\Order::whereOrderNo($spbd054b)->firstOrFail(); if (!$sp7fd294->pay_trade_no || !strlen($sp7fd294->pay_trade_no)) { return false; } try { $sp1c441b = $this->getAccessToken($sp8abf69); $sp3f7090 = new Open\Client($sp1c441b); } catch (\Exception $sp2a4a9a) { \Log::error('Pay.Youzan.verify getAccessToken error#2', array('exception' => $sp2a4a9a)); throw new \Exception('支付渠道响应超时，请刷新重试'); } $spb9d69c = array('qr_id' => $sp7fd294->pay_trade_no, 'status' => 'TRADE_RECEIVED'); $spbcb528 = $sp3f7090->get('youzan.trades.qr.get', '3.0.0', $spb9d69c); $sp95edfe = isset($spbcb528['response']) ? $spbcb528['response'] : $spbcb528; if (!isset($sp95edfe['total_results'])) { \Log::error('Pay.Youzan.verify with error：The result of [youzan.trades.qr.get] has no key named [total_results]', array('result' => $spbcb528)); return false; } if ($sp95edfe['total_results'] > 0 && count($sp95edfe['qr_trades']) > 0 && isset($sp95edfe['qr_trades'][0]['qr_id']) && $sp95edfe['qr_trades'][0]['qr_id'] === $sp7fd294->pay_trade_no) { $spe06bf9 = $sp95edfe['qr_trades'][0]; $sp10ad64 = $spe06bf9['tid']; $spc98f69($spbd054b, intval($spe06bf9['real_price'] * 100), $sp10ad64); return true; } else { return false; } } } }