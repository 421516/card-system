<?php
namespace App\Library\Pay\Aliqr; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; include 'Loader.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($spfc3b4d) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spfc3b4d; } private function defineConfig(&$sp8abf69) { $sp8abf69['sign_type'] = 'RSA2'; $sp8abf69['charset'] = 'UTF-8'; $sp8abf69['gatewayUrl'] = 'https://openapi.alipay.com/gateway.do'; $sp8abf69['MaxQueryRetry'] = '10'; $sp8abf69['QueryDuration'] = '3'; $sp8abf69['notify_url'] = $this->url_notify; } function goPay($sp8abf69, $spbd054b, $sp547016, $speb838e, $sp6c12fc) { $spbd56f5 = sprintf('%.2f', $sp6c12fc / 100); $this->defineConfig($sp8abf69); $sp17ceb1 = '5m'; $spcf6def = new \GoodsDetail(); $spcf6def->setGoodsId('card'); $spcf6def->setGoodsName($sp547016); $spcf6def->setPrice($spbd56f5); $spcf6def->setQuantity(1); $specec85 = $spcf6def->getGoodsDetail(); $sp492596 = array($specec85); $spcf8a97 = ''; $spf253b5 = new \AlipayTradePrecreateContentBuilder(); $spf253b5->setOutTradeNo($spbd054b); $spf253b5->setTotalAmount($spbd56f5); $spf253b5->setTimeExpress($sp17ceb1); $spf253b5->setSubject($sp547016); $spf253b5->setBody($speb838e); $spf253b5->setGoodsDetailList($sp492596); $spf253b5->setAppAuthToken($spcf8a97); $sp873196 = new \AlipayTradeService($sp8abf69); $sp9e6c0b = $sp873196->qrPay($spf253b5); switch ($sp9e6c0b->getTradeStatus()) { case 'SUCCESS': $sp5241d0 = $sp9e6c0b->getResponse(); header('location: /qrcode/pay/' . $spbd054b . '/aliqr?url=' . urlencode($sp5241d0->qr_code)); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; die; break; case 'FAILED': if (!empty($sp9e6c0b->getResponse())) { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: ' . serialize($sp9e6c0b->getResponse())); throw new \Exception('支付宝创建订单二维码失败!!!<br>' . serialize($sp9e6c0b->getResponse())); } else { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: 未知错误'); throw new \Exception('支付宝创建订单二维码失败!!!<br>未知错误'); } break; case 'UNKNOWN': if (!empty($sp9e6c0b->getResponse())) { Log::error('Aliqr.goPay UNKNOWN: 支付宝创建订单二维码失败: ' . serialize($sp9e6c0b->getResponse())); throw new \Exception('系统异常，状态未知!!!<br>' . serialize($sp9e6c0b->getResponse())); } else { Log::error('Aliqr.goPay UNKNOWN: 系统异常，状态未知!!!: 未知错误'); throw new \Exception('系统异常，状态未知!!!<br>未知错误'); } break; default: throw new \Exception('不支持的返回状态，创建订单二维码返回异常!!!'); break; } } function verify($sp8abf69, $spc98f69) { $spdcb97c = isset($sp8abf69['isNotify']) && $sp8abf69['isNotify']; $this->defineConfig($sp8abf69); $spbd054b = trim(isset($sp8abf69['out_trade_no']) ? $sp8abf69['out_trade_no'] : $_REQUEST['out_trade_no']); $sp28762f = new \AlipayTradeQueryContentBuilder(); $sp28762f->setOutTradeNo($spbd054b); $spee2454 = new \AlipayTradeService($sp8abf69); $sp64b49c = $spee2454->queryTradeResult($sp28762f); switch ($sp64b49c->getTradeStatus()) { case 'SUCCESS': $sp5241d0 = $sp64b49c->getResponse(); $sp2296f4 = $sp5241d0->trade_no; $sp0c4618 = (int) ($sp5241d0->receipt_amount * 100); $spc98f69($spbd054b, $sp0c4618, $sp2296f4); if ($spdcb97c) { echo 'success'; } return true; break; case 'FAILED': if ($spdcb97c) { echo 'failed'; } return false; break; case 'UNKNOWN': if ($spdcb97c) { echo 'failed'; } return false; break; default: if ($spdcb97c) { echo 'failed'; } return false; break; } } }