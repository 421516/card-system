<?php
namespace App\Library\Pay\Aliqr; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; include 'Loader.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($spe6149b) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spe6149b; } private function defineConfig(&$spd82bcd) { $spd82bcd['sign_type'] = 'RSA2'; $spd82bcd['charset'] = 'UTF-8'; $spd82bcd['gatewayUrl'] = 'https://openapi.alipay.com/gateway.do'; $spd82bcd['MaxQueryRetry'] = '10'; $spd82bcd['QueryDuration'] = '3'; $spd82bcd['notify_url'] = $this->url_notify; } function goPay($spd82bcd, $sp6281ad, $spe4243d, $sp1d246b, $sp54eead) { $sp90753f = sprintf('%.2f', $sp54eead / 100); $this->defineConfig($spd82bcd); $sp42245d = '5m'; $sp63b18a = new \GoodsDetail(); $sp63b18a->setGoodsId('card'); $sp63b18a->setGoodsName($spe4243d); $sp63b18a->setPrice($sp90753f); $sp63b18a->setQuantity(1); $sp87bd35 = $sp63b18a->getGoodsDetail(); $sp886ee6 = array($sp87bd35); $sp7f2a58 = ''; $sp4cccca = new \AlipayTradePrecreateContentBuilder(); $sp4cccca->setOutTradeNo($sp6281ad); $sp4cccca->setTotalAmount($sp90753f); $sp4cccca->setTimeExpress($sp42245d); $sp4cccca->setSubject($spe4243d); $sp4cccca->setBody($sp1d246b); $sp4cccca->setGoodsDetailList($sp886ee6); $sp4cccca->setAppAuthToken($sp7f2a58); $spd17272 = new \AlipayTradeService($spd82bcd); $sp3574b6 = $spd17272->qrPay($sp4cccca); switch ($sp3574b6->getTradeStatus()) { case 'SUCCESS': $spfd13d8 = $sp3574b6->getResponse(); header('location: /qrcode/pay/' . $sp6281ad . '/aliqr?url=' . urlencode($spfd13d8->qr_code)); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; die; break; case 'FAILED': if (!empty($sp3574b6->getResponse())) { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: ' . serialize($sp3574b6->getResponse())); throw new \Exception('支付宝创建订单二维码失败!!!<br>' . serialize($sp3574b6->getResponse())); } else { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: 未知错误'); throw new \Exception('支付宝创建订单二维码失败!!!<br>未知错误'); } break; case 'UNKNOWN': if (!empty($sp3574b6->getResponse())) { Log::error('Aliqr.goPay UNKNOWN: 支付宝创建订单二维码失败: ' . serialize($sp3574b6->getResponse())); throw new \Exception('系统异常，状态未知!!!<br>' . serialize($sp3574b6->getResponse())); } else { Log::error('Aliqr.goPay UNKNOWN: 系统异常，状态未知!!!: 未知错误'); throw new \Exception('系统异常，状态未知!!!<br>未知错误'); } break; default: throw new \Exception('不支持的返回状态，创建订单二维码返回异常!!!'); break; } } function verify($spd82bcd, $spbb5f38) { $spe16bd1 = isset($spd82bcd['isNotify']) && $spd82bcd['isNotify']; $this->defineConfig($spd82bcd); $sp6281ad = trim(isset($spd82bcd['out_trade_no']) ? $spd82bcd['out_trade_no'] : $_REQUEST['out_trade_no']); $sp7317aa = new \AlipayTradeQueryContentBuilder(); $sp7317aa->setOutTradeNo($sp6281ad); $sp82d2f3 = new \AlipayTradeService($spd82bcd); $sp2d5af3 = $sp82d2f3->queryTradeResult($sp7317aa); switch ($sp2d5af3->getTradeStatus()) { case 'SUCCESS': $spfd13d8 = $sp2d5af3->getResponse(); $sp5b4f94 = $spfd13d8->trade_no; $spf4aff4 = (int) ($spfd13d8->receipt_amount * 100); $spbb5f38($sp6281ad, $spf4aff4, $sp5b4f94); if ($spe16bd1) { echo 'success'; } return true; break; case 'FAILED': if ($spe16bd1) { echo 'failed'; } return false; break; case 'UNKNOWN': if ($spe16bd1) { echo 'failed'; } return false; break; default: if ($spe16bd1) { echo 'failed'; } return false; break; } } }