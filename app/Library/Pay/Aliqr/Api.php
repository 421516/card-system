<?php
namespace App\Library\Pay\Aliqr; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; include 'Loader.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($sp3a2be3) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp3a2be3; } private function defineConfig(&$sp45b2a0) { $sp45b2a0['sign_type'] = 'RSA2'; $sp45b2a0['charset'] = 'UTF-8'; $sp45b2a0['gatewayUrl'] = 'https://openapi.alipay.com/gateway.do'; $sp45b2a0['MaxQueryRetry'] = '10'; $sp45b2a0['QueryDuration'] = '3'; $sp45b2a0['notify_url'] = $this->url_notify; } function goPay($sp45b2a0, $spd184e1, $sp873da9, $sp33eb4d, $sp521b2c) { $sp983f6f = sprintf('%.2f', $sp521b2c / 100); $this->defineConfig($sp45b2a0); $sp12acc1 = '5m'; $spd2fc21 = new \GoodsDetail(); $spd2fc21->setGoodsId('card'); $spd2fc21->setGoodsName($sp873da9); $spd2fc21->setPrice($sp983f6f); $spd2fc21->setQuantity(1); $spf347ce = $spd2fc21->getGoodsDetail(); $sp128567 = array($spf347ce); $sp5325c3 = ''; $sp9b96de = new \AlipayTradePrecreateContentBuilder(); $sp9b96de->setOutTradeNo($spd184e1); $sp9b96de->setTotalAmount($sp983f6f); $sp9b96de->setTimeExpress($sp12acc1); $sp9b96de->setSubject($sp873da9); $sp9b96de->setBody($sp33eb4d); $sp9b96de->setGoodsDetailList($sp128567); $sp9b96de->setAppAuthToken($sp5325c3); $sp30c839 = new \AlipayTradeService($sp45b2a0); $sp62ce63 = $sp30c839->qrPay($sp9b96de); switch ($sp62ce63->getTradeStatus()) { case 'SUCCESS': $sp73b7ae = $sp62ce63->getResponse(); header('location: /qrcode/pay/' . $spd184e1 . '/aliqr?url=' . urlencode($sp73b7ae->qr_code)); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; die; break; case 'FAILED': if (!empty($sp62ce63->getResponse())) { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: ' . serialize($sp62ce63->getResponse())); throw new \Exception('支付宝创建订单二维码失败!!!<br>' . serialize($sp62ce63->getResponse())); } else { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: 未知错误'); throw new \Exception('支付宝创建订单二维码失败!!!<br>未知错误'); } break; case 'UNKNOWN': if (!empty($sp62ce63->getResponse())) { Log::error('Aliqr.goPay UNKNOWN: 支付宝创建订单二维码失败: ' . serialize($sp62ce63->getResponse())); throw new \Exception('系统异常，状态未知!!!<br>' . serialize($sp62ce63->getResponse())); } else { Log::error('Aliqr.goPay UNKNOWN: 系统异常，状态未知!!!: 未知错误'); throw new \Exception('系统异常，状态未知!!!<br>未知错误'); } break; default: throw new \Exception('不支持的返回状态，创建订单二维码返回异常!!!'); break; } } function verify($sp45b2a0, $spf85c0e) { $sp5c8ce2 = isset($sp45b2a0['isNotify']) && $sp45b2a0['isNotify']; $this->defineConfig($sp45b2a0); $spd184e1 = trim(isset($sp45b2a0['out_trade_no']) ? $sp45b2a0['out_trade_no'] : $_REQUEST['out_trade_no']); $sp06dceb = new \AlipayTradeQueryContentBuilder(); $sp06dceb->setOutTradeNo($spd184e1); $sp75f8bd = new \AlipayTradeService($sp45b2a0); $sp552970 = $sp75f8bd->queryTradeResult($sp06dceb); switch ($sp552970->getTradeStatus()) { case 'SUCCESS': $sp73b7ae = $sp552970->getResponse(); $spe14c4a = $sp73b7ae->trade_no; $sp07a665 = (int) ($sp73b7ae->receipt_amount * 100); $spf85c0e($spd184e1, $sp07a665, $spe14c4a); if ($sp5c8ce2) { echo 'success'; } return true; break; case 'FAILED': if ($sp5c8ce2) { echo 'failed'; } return false; break; case 'UNKNOWN': if ($sp5c8ce2) { echo 'failed'; } return false; break; default: if ($sp5c8ce2) { echo 'failed'; } return false; break; } } }