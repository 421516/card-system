<?php
namespace App\Library\Pay\Aliqr; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; include 'Loader.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($sp403bd7) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp403bd7; } private function defineConfig(&$sp4d5cc2) { $sp4d5cc2['sign_type'] = 'RSA2'; $sp4d5cc2['charset'] = 'UTF-8'; $sp4d5cc2['gatewayUrl'] = 'https://openapi.alipay.com/gateway.do'; $sp4d5cc2['MaxQueryRetry'] = '10'; $sp4d5cc2['QueryDuration'] = '3'; $sp4d5cc2['notify_url'] = $this->url_notify; } function goPay($sp4d5cc2, $sp2714cc, $spc644e5, $sp5b5e88, $sp9d9f48) { $sp6246a9 = sprintf('%.2f', $sp9d9f48 / 100); $this->defineConfig($sp4d5cc2); $sp9251ea = '5m'; $sp41c905 = new \GoodsDetail(); $sp41c905->setGoodsId('card'); $sp41c905->setGoodsName($spc644e5); $sp41c905->setPrice($sp6246a9); $sp41c905->setQuantity(1); $sp711444 = $sp41c905->getGoodsDetail(); $sp1f1ec4 = array($sp711444); $sp114e2c = ''; $spea7fd9 = new \AlipayTradePrecreateContentBuilder(); $spea7fd9->setOutTradeNo($sp2714cc); $spea7fd9->setTotalAmount($sp6246a9); $spea7fd9->setTimeExpress($sp9251ea); $spea7fd9->setSubject($spc644e5); $spea7fd9->setBody($sp5b5e88); $spea7fd9->setGoodsDetailList($sp1f1ec4); $spea7fd9->setAppAuthToken($sp114e2c); $spe68976 = new \AlipayTradeService($sp4d5cc2); $sp8c02b1 = $spe68976->qrPay($spea7fd9); switch ($sp8c02b1->getTradeStatus()) { case 'SUCCESS': $sp1de750 = $sp8c02b1->getResponse(); header('location: /qrcode/pay/' . $sp2714cc . '/aliqr?url=' . urlencode($sp1de750->qr_code)); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; die; break; case 'FAILED': if (!empty($sp8c02b1->getResponse())) { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: ' . serialize($sp8c02b1->getResponse())); throw new \Exception('支付宝创建订单二维码失败!!!<br>' . serialize($sp8c02b1->getResponse())); } else { Log::error('Aliqr.goPay FAILED: 支付宝创建订单二维码失败: 未知错误'); throw new \Exception('支付宝创建订单二维码失败!!!<br>未知错误'); } break; case 'UNKNOWN': if (!empty($sp8c02b1->getResponse())) { Log::error('Aliqr.goPay UNKNOWN: 支付宝创建订单二维码失败: ' . serialize($sp8c02b1->getResponse())); throw new \Exception('系统异常，状态未知!!!<br>' . serialize($sp8c02b1->getResponse())); } else { Log::error('Aliqr.goPay UNKNOWN: 系统异常，状态未知!!!: 未知错误'); throw new \Exception('系统异常，状态未知!!!<br>未知错误'); } break; default: throw new \Exception('不支持的返回状态，创建订单二维码返回异常!!!'); break; } } function verify($sp4d5cc2, $spae1cf8) { $sp5c532f = isset($sp4d5cc2['isNotify']) && $sp4d5cc2['isNotify']; $this->defineConfig($sp4d5cc2); $sp2714cc = trim(isset($sp4d5cc2['out_trade_no']) ? $sp4d5cc2['out_trade_no'] : $_REQUEST['out_trade_no']); $sp5b97ca = new \AlipayTradeQueryContentBuilder(); $sp5b97ca->setOutTradeNo($sp2714cc); $sp899346 = new \AlipayTradeService($sp4d5cc2); $sp5cc245 = $sp899346->queryTradeResult($sp5b97ca); switch ($sp5cc245->getTradeStatus()) { case 'SUCCESS': $sp1de750 = $sp5cc245->getResponse(); $spb306ab = $sp1de750->trade_no; $spe1a1d8 = (int) ($sp1de750->receipt_amount * 100); $spae1cf8($sp2714cc, $spe1a1d8, $spb306ab); if ($sp5c532f) { echo 'success'; } return true; break; case 'FAILED': if ($sp5c532f) { echo 'failed'; } return false; break; case 'UNKNOWN': if ($sp5c532f) { echo 'failed'; } return false; break; default: if ($sp5c532f) { echo 'failed'; } return false; break; } } }