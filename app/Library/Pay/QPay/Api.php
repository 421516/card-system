<?php
namespace App\Library\Pay\QPay; use App\Library\Helper; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; require_once __DIR__ . '/qpay_mch_sp/qpayMchAPI.class.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($sp403bd7) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp403bd7; } function goPay($sp4d5cc2, $sp2714cc, $spc644e5, $sp5b5e88, $sp9d9f48) { if (!isset($sp4d5cc2['mch_id']) || !isset($sp4d5cc2['mch_key'])) { throw new \Exception('请设置 mch_id 和 mch_key'); } $sp50fc45 = array('out_trade_no' => $sp2714cc, 'body' => $spc644e5, 'device_info' => 'qq_19060', 'fee_type' => 'CNY', 'notify_url' => $this->url_notify, 'spbill_create_ip' => Helper::getIP(), 'total_fee' => $sp9d9f48, 'trade_type' => 'NATIVE'); $spf3a009 = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_unified_order.cgi', null, 10); $spdd1fc3 = $spf3a009->req($sp50fc45, $sp4d5cc2); $spc4a98e = \QpayMchUtil::xmlToArray($spdd1fc3); if (!isset($spc4a98e['code_url'])) { Log::error('Pay.QPay.goPay, order_no:' . $sp2714cc . ', error:' . json_encode($spc4a98e)); if (isset($spc4a98e['err_code_des'])) { throw new \Exception($spc4a98e['err_code_des']); } if (isset($spc4a98e['return_msg'])) { throw new \Exception($spc4a98e['return_msg']); } throw new \Exception('获取支付数据失败'); } header('location: /qrcode/pay/' . $sp2714cc . '/qq?url=' . urlencode($spc4a98e['code_url'])); die; } function verify($sp4d5cc2, $spae1cf8) { $sp5c532f = isset($sp4d5cc2['isNotify']) && $sp4d5cc2['isNotify']; $spf3a009 = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_order_query.cgi', null, 10); if ($sp5c532f) { $sp50fc45 = $spf3a009->notify_params(); if (!$spf3a009->notify_verify($sp50fc45, $sp4d5cc2)) { echo '<xml><return_code>FAIL</return_code></xml>'; return false; } call_user_func_array($spae1cf8, array($sp50fc45['out_trade_no'], $sp50fc45['total_fee'], $sp50fc45['transaction_id'])); echo '<xml><return_code>SUCCESS</return_code></xml>'; return true; } else { $sp2714cc = @$sp4d5cc2['out_trade_no']; $sp50fc45 = array('out_trade_no' => $sp2714cc); $spdd1fc3 = $spf3a009->req($sp50fc45, $sp4d5cc2); $spc4a98e = \QpayMchUtil::xmlToArray($spdd1fc3); if (array_key_exists('trade_state', $spc4a98e) && $spc4a98e['trade_state'] == 'SUCCESS') { call_user_func_array($spae1cf8, array($spc4a98e['out_trade_no'], $spc4a98e['total_fee'], $spc4a98e['transaction_id'])); return true; } else { return false; } } } }