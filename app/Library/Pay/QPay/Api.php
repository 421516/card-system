<?php
namespace App\Library\Pay\QPay; use App\Library\Helper; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; require_once __DIR__ . '/qpay_mch_sp/qpayMchAPI.class.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($spe6149b) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spe6149b; } function goPay($spd82bcd, $sp6281ad, $spe4243d, $sp1d246b, $sp54eead) { if (!isset($spd82bcd['mch_id']) || !isset($spd82bcd['mch_key'])) { throw new \Exception('请设置 mch_id 和 mch_key'); } $sp31ee10 = array('out_trade_no' => $sp6281ad, 'body' => $spe4243d, 'device_info' => 'qq_19060', 'fee_type' => 'CNY', 'notify_url' => $this->url_notify, 'spbill_create_ip' => Helper::getIP(), 'total_fee' => $sp54eead, 'trade_type' => 'NATIVE'); $sp506628 = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_unified_order.cgi', null, 10); $spc0a9e4 = $sp506628->req($sp31ee10, $spd82bcd); $sp836ce6 = \QpayMchUtil::xmlToArray($spc0a9e4); if (!isset($sp836ce6['code_url'])) { Log::error('Pay.QPay.goPay, order_no:' . $sp6281ad . ', error:' . json_encode($sp836ce6)); if (isset($sp836ce6['err_code_des'])) { throw new \Exception($sp836ce6['err_code_des']); } if (isset($sp836ce6['return_msg'])) { throw new \Exception($sp836ce6['return_msg']); } throw new \Exception('获取支付数据失败'); } header('location: /qrcode/pay/' . $sp6281ad . '/qq?url=' . urlencode($sp836ce6['code_url'])); die; } function verify($spd82bcd, $spbb5f38) { $spe16bd1 = isset($spd82bcd['isNotify']) && $spd82bcd['isNotify']; $sp506628 = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_order_query.cgi', null, 10); if ($spe16bd1) { $sp31ee10 = $sp506628->notify_params(); if (!$sp506628->notify_verify($sp31ee10, $spd82bcd)) { echo '<xml><return_code>FAIL</return_code></xml>'; return false; } call_user_func_array($spbb5f38, array($sp31ee10['out_trade_no'], $sp31ee10['total_fee'], $sp31ee10['transaction_id'])); echo '<xml><return_code>SUCCESS</return_code></xml>'; return true; } else { $sp6281ad = @$spd82bcd['out_trade_no']; $sp31ee10 = array('out_trade_no' => $sp6281ad); $spc0a9e4 = $sp506628->req($sp31ee10, $spd82bcd); $sp836ce6 = \QpayMchUtil::xmlToArray($spc0a9e4); if (array_key_exists('trade_state', $sp836ce6) && $sp836ce6['trade_state'] == 'SUCCESS') { call_user_func_array($spbb5f38, array($sp836ce6['out_trade_no'], $sp836ce6['total_fee'], $sp836ce6['transaction_id'])); return true; } else { return false; } } } }