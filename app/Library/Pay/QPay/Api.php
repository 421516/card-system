<?php
namespace App\Library\Pay\QPay; use App\Library\Helper; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; require_once __DIR__ . '/qpay_mch_sp/qpayMchAPI.class.php'; class Api implements ApiInterface { private $url_notify = ''; public function __construct($spf46c5d) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spf46c5d; } function goPay($spa9e109, $sp206d07, $sp89af34, $sp92f0c1, $sp28f24f) { if (!isset($spa9e109['mch_id']) || !isset($spa9e109['mch_key'])) { throw new \Exception('请设置 mch_id 和 mch_key'); } $sp20678b = array('out_trade_no' => $sp206d07, 'body' => $sp89af34, 'device_info' => 'qq_19060', 'fee_type' => 'CNY', 'notify_url' => $this->url_notify, 'spbill_create_ip' => Helper::getIP(), 'total_fee' => $sp28f24f, 'trade_type' => 'NATIVE'); $sp4abac7 = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_unified_order.cgi', null, 10); $sp6266ab = $sp4abac7->req($sp20678b, $spa9e109); $sp9610ab = \QpayMchUtil::xmlToArray($sp6266ab); if (!isset($sp9610ab['code_url'])) { Log::error('Pay.QPay.goPay, order_no:' . $sp206d07 . ', error:' . json_encode($sp9610ab)); if (isset($sp9610ab['err_code_des'])) { throw new \Exception($sp9610ab['err_code_des']); } if (isset($sp9610ab['return_msg'])) { throw new \Exception($sp9610ab['return_msg']); } throw new \Exception('获取支付数据失败'); } header('location: /qrcode/pay/' . $sp206d07 . '/qq?url=' . urlencode($sp9610ab['code_url'])); die; } function verify($spa9e109, $spf8927a) { $spf53f48 = isset($spa9e109['isNotify']) && $spa9e109['isNotify']; $sp4abac7 = new \QpayMchAPI('https://qpay.qq.com/cgi-bin/pay/qpay_order_query.cgi', null, 10); if ($spf53f48) { $sp20678b = $sp4abac7->notify_params(); if (!$sp4abac7->notify_verify($sp20678b, $spa9e109)) { echo '<xml><return_code>FAIL</return_code></xml>'; return false; } call_user_func_array($spf8927a, array($sp20678b['out_trade_no'], $sp20678b['total_fee'], $sp20678b['transaction_id'])); echo '<xml><return_code>SUCCESS</return_code></xml>'; return true; } else { $sp206d07 = @$spa9e109['out_trade_no']; $sp20678b = array('out_trade_no' => $sp206d07); $sp6266ab = $sp4abac7->req($sp20678b, $spa9e109); $sp9610ab = \QpayMchUtil::xmlToArray($sp6266ab); if (array_key_exists('trade_state', $sp9610ab) && $sp9610ab['trade_state'] == 'SUCCESS') { call_user_func_array($spf8927a, array($sp9610ab['out_trade_no'], $sp9610ab['total_fee'], $sp9610ab['transaction_id'])); return true; } else { return false; } } } }