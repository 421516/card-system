<?php
require_once 'qpayMchUtil.class.php'; class QpayMchAPI { protected $url; protected $isSSL; protected $timeout; public function __construct($spdfc1ea, $sp141681, $sp544006 = 5) { $this->url = $spdfc1ea; $this->isSSL = $sp141681; $this->timeout = $sp544006; } public function notify_params() { $sp12ef03 = file_get_contents('php://input'); return QpayMchUtil::xmlToArray($sp12ef03); } public function notify_verify($spb9d69c, $sp8abf69) { if (!isset($spb9d69c['sign'])) { return false; } $sp23eef6 = QpayMchUtil::getSign($spb9d69c, $sp8abf69['mch_key']); return $sp23eef6 === $spb9d69c['sign']; } public function req($spb9d69c, $sp8abf69) { $spc8aebe = array(); $spb9d69c['mch_id'] = $sp8abf69['mch_id']; $spb9d69c['nonce_str'] = QpayMchUtil::createNoncestr(); $spb9d69c['sign'] = QpayMchUtil::getSign($spb9d69c, $sp8abf69['mch_key']); $sp12ef03 = QpayMchUtil::arrayToXml($spb9d69c); if (isset($this->isSSL)) { $spc8aebe = QpayMchUtil::reqByCurlSSLPost($sp12ef03, $this->url, $this->timeout); } else { $spc8aebe = QpayMchUtil::reqByCurlNormalPost($sp12ef03, $this->url, $this->timeout); } return $spc8aebe; } }