<?php
require_once 'qpayMch.config.php'; class QpayMchUtil { public static function createNoncestr($sp58d92e = 32) { $spa9e43c = 'abcdefghijklmnopqrstuvwxyz0123456789'; $spb67857 = ''; for ($sp1b7341 = 0; $sp1b7341 < $sp58d92e; $sp1b7341++) { $spb67857 .= substr($spa9e43c, mt_rand(0, strlen($spa9e43c) - 1), 1); } return $spb67857; } public static function buildQueryStr($spb9d69c) { $sp2837fa = array(); foreach ($spb9d69c as $spa8af52 => $sp651922) { if ($spa8af52 != 'sign' && $sp651922 != '' && !is_array($sp651922)) { array_push($sp2837fa, "{$spa8af52}={$sp651922}"); } } return implode('&', $sp2837fa); } public static function getSign($spb9d69c, $spabede3) { ksort($spb9d69c); $sp3f5074 = QpayMchUtil::buildQueryStr($spb9d69c); $sp3f5074 = $sp3f5074 . '&key=' . $spabede3; $sp3f5074 = md5($sp3f5074); $sp23eef6 = strtoupper($sp3f5074); return $sp23eef6; } public static function arrayToXml($sp6f673b) { $sp12ef03 = '<xml>'; foreach ($sp6f673b as $sp9684a3 => $spc28c86) { if (is_numeric($spc28c86)) { $sp12ef03 .= "<{$sp9684a3}>{$spc28c86}</{$sp9684a3}>"; } else { $sp12ef03 .= "<{$sp9684a3}><![CDATA[{$spc28c86}]]></{$sp9684a3}>"; } } $sp12ef03 .= '</xml>'; return $sp12ef03; } public static function xmlToArray($sp12ef03) { $sp6f673b = json_decode(json_encode(simplexml_load_string($sp12ef03, 'SimpleXMLElement', LIBXML_NOCDATA)), true); return $sp6f673b; } public static function reqByCurlNormalPost($spb9d69c, $spdfc1ea, $sp544006 = 10) { return QpayMchUtil::_reqByCurl($spb9d69c, $spdfc1ea, $sp544006, false); } public static function reqByCurlSSLPost($spb9d69c, $spdfc1ea, $sp544006 = 10) { return QpayMchUtil::_reqByCurl($spb9d69c, $spdfc1ea, $sp544006, true); } private static function _reqByCurl($spb9d69c, $spdfc1ea, $sp544006 = 10, $spc332f2 = false) { $spde874d = curl_init(); curl_setopt($spde874d, CURLOPT_URL, $spdfc1ea); curl_setopt($spde874d, CURLOPT_TIMEOUT, $sp544006); curl_setopt($spde874d, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($spde874d, CURLOPT_SSL_VERIFYHOST, FALSE); curl_setopt($spde874d, CURLOPT_HEADER, FALSE); curl_setopt($spde874d, CURLOPT_RETURNTRANSFER, TRUE); if (isset($spc332f2) && $spc332f2 != false) { curl_setopt($spde874d, CURLOPT_SSLCERTTYPE, 'PEM'); curl_setopt($spde874d, CURLOPT_SSLCERT, QpayMchConf::CERT_FILE_PATH); curl_setopt($spde874d, CURLOPT_SSLKEYTYPE, 'PEM'); curl_setopt($spde874d, CURLOPT_SSLKEY, QpayMchConf::KEY_FILE_PATH); } curl_setopt($spde874d, CURLOPT_POST, true); curl_setopt($spde874d, CURLOPT_POSTFIELDS, $spb9d69c); $spc8aebe = curl_exec($spde874d); if ($spc8aebe) { curl_close($spde874d); return $spc8aebe; } else { $sp6980f9 = curl_errno($spde874d); print_r($sp6980f9); curl_close($spde874d); return false; } } }