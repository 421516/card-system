<?php
require_once 'qpayMch.config.php'; class QpayMchUtil { public static function createNoncestr($sp6f7e8a = 32) { $sp5e33af = 'abcdefghijklmnopqrstuvwxyz0123456789'; $spf6683b = ''; for ($spcecaa9 = 0; $spcecaa9 < $sp6f7e8a; $spcecaa9++) { $spf6683b .= substr($sp5e33af, mt_rand(0, strlen($sp5e33af) - 1), 1); } return $spf6683b; } public static function buildQueryStr($sp31ee10) { $spf6603c = array(); foreach ($sp31ee10 as $spf169bd => $spb83a69) { if ($spf169bd != 'sign' && $spb83a69 != '' && !is_array($spb83a69)) { array_push($spf6603c, "{$spf169bd}={$spb83a69}"); } } return implode('&', $spf6603c); } public static function getSign($sp31ee10, $spcaf5f1) { ksort($sp31ee10); $spa75c02 = QpayMchUtil::buildQueryStr($sp31ee10); $spa75c02 = $spa75c02 . '&key=' . $spcaf5f1; $spa75c02 = md5($spa75c02); $sp36c1ea = strtoupper($spa75c02); return $sp36c1ea; } public static function arrayToXml($spaed185) { $sp01b3bc = '<xml>'; foreach ($spaed185 as $sp63ae76 => $sp679ba2) { if (is_numeric($sp679ba2)) { $sp01b3bc .= "<{$sp63ae76}>{$sp679ba2}</{$sp63ae76}>"; } else { $sp01b3bc .= "<{$sp63ae76}><![CDATA[{$sp679ba2}]]></{$sp63ae76}>"; } } $sp01b3bc .= '</xml>'; return $sp01b3bc; } public static function xmlToArray($sp01b3bc) { $spaed185 = json_decode(json_encode(simplexml_load_string($sp01b3bc, 'SimpleXMLElement', LIBXML_NOCDATA)), true); return $spaed185; } public static function reqByCurlNormalPost($sp31ee10, $sp833b34, $sp1ca900 = 10) { return QpayMchUtil::_reqByCurl($sp31ee10, $sp833b34, $sp1ca900, false); } public static function reqByCurlSSLPost($sp31ee10, $sp833b34, $sp1ca900 = 10) { return QpayMchUtil::_reqByCurl($sp31ee10, $sp833b34, $sp1ca900, true); } private static function _reqByCurl($sp31ee10, $sp833b34, $sp1ca900 = 10, $sp9f5b4a = false) { $speafaa9 = curl_init(); curl_setopt($speafaa9, CURLOPT_URL, $sp833b34); curl_setopt($speafaa9, CURLOPT_TIMEOUT, $sp1ca900); curl_setopt($speafaa9, CURLOPT_SSL_VERIFYPEER, FALSE); curl_setopt($speafaa9, CURLOPT_SSL_VERIFYHOST, FALSE); curl_setopt($speafaa9, CURLOPT_HEADER, FALSE); curl_setopt($speafaa9, CURLOPT_RETURNTRANSFER, TRUE); if (isset($sp9f5b4a) && $sp9f5b4a != false) { curl_setopt($speafaa9, CURLOPT_SSLCERTTYPE, 'PEM'); curl_setopt($speafaa9, CURLOPT_SSLCERT, QpayMchConf::CERT_FILE_PATH); curl_setopt($speafaa9, CURLOPT_SSLKEYTYPE, 'PEM'); curl_setopt($speafaa9, CURLOPT_SSLKEY, QpayMchConf::KEY_FILE_PATH); } curl_setopt($speafaa9, CURLOPT_POST, true); curl_setopt($speafaa9, CURLOPT_POSTFIELDS, $sp31ee10); $sp46dd86 = curl_exec($speafaa9); if ($sp46dd86) { curl_close($speafaa9); return $sp46dd86; } else { $sp11c818 = curl_errno($speafaa9); print_r($sp11c818); curl_close($speafaa9); return false; } } }