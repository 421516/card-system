<?php
class HttpClient { var $host; var $port; var $path; var $method; var $postdata = ''; var $cookies = array(); var $referer; var $accept = 'text/xml,application/xml,application/xhtml+xml,text/html,text/plain,image/png,image/jpeg,image/gif,*/*'; var $accept_encoding = 'gzip'; var $accept_language = 'en-us'; var $user_agent = 'Incutio HttpClient v0.9'; var $timeout = 20; var $use_gzip = true; var $persist_cookies = true; var $persist_referers = true; var $debug = false; var $handle_redirects = true; var $max_redirects = 5; var $headers_only = false; var $username; var $password; var $status; var $headers = array(); var $content = ''; var $errormsg; var $redirect_count = 0; var $cookie_host = ''; function __construct($sp818d73, $sp7f484b = 80) { $this->host = $sp818d73; $this->port = $sp7f484b; } function get($sp3c8c72, $sp38c5ae = false) { $this->path = $sp3c8c72; $this->method = 'GET'; if ($sp38c5ae) { $this->path .= '?' . $this->buildQueryString($sp38c5ae); } return $this->doRequest(); } function post($sp3c8c72, $sp38c5ae) { $this->path = $sp3c8c72; $this->method = 'POST'; $this->postdata = $this->buildQueryString($sp38c5ae); return $this->doRequest(); } function buildQueryString($sp38c5ae) { $spe31fff = ''; if (is_array($sp38c5ae)) { foreach ($sp38c5ae as $spa8a71b => $sp3172ba) { if (is_array($sp3172ba)) { foreach ($sp3172ba as $sp73a13d) { $spe31fff .= urlencode($spa8a71b) . '=' . $sp73a13d . '&'; } } else { $spe31fff .= urlencode($spa8a71b) . '=' . $sp3172ba . '&'; } } $spe31fff = substr($spe31fff, 0, -1); } else { $spe31fff = $sp38c5ae; } return $spe31fff; } function doRequest() { if (!($spc5e32a = @fsockopen($this->host, $this->port, $sp2d4862, $sp24450e, $this->timeout))) { switch ($sp2d4862) { case -3: $this->errormsg = 'Socket creation failed (-3)'; break; case -4: $this->errormsg = 'DNS lookup failure (-4)'; break; case -5: $this->errormsg = 'Connection refused or timed out (-5)'; break; default: $this->errormsg = 'Connection failed (' . $sp2d4862 . ')'; $this->errormsg .= ' ' . $sp24450e; $this->debug($this->errormsg); } return false; } socket_set_timeout($spc5e32a, $this->timeout); $sp845342 = $this->buildRequest(); $this->debug('Request', $sp845342); fwrite($spc5e32a, $sp845342); $this->headers = array(); $this->content = ''; $this->errormsg = ''; $sp7a802c = true; $sp7388f2 = true; while (!feof($spc5e32a)) { $spa3d810 = fgets($spc5e32a, 4096); if ($sp7388f2) { $sp7388f2 = false; if (!preg_match('/HTTP\\/(\\d\\.\\d)\\s*(\\d+)\\s*(.*)/', $spa3d810, $sp671d6d)) { $this->errormsg = 'Status code line invalid: ' . htmlentities($spa3d810); $this->debug($this->errormsg); return false; } $this->status = $sp671d6d[2]; $this->debug(trim($spa3d810)); continue; } if ($sp7a802c) { if (trim($spa3d810) == '') { $sp7a802c = false; $this->debug('Received Headers', $this->headers); if ($this->headers_only) { break; } continue; } if (!preg_match('/([^:]+):\\s*(.*)/', $spa3d810, $sp671d6d)) { continue; } $spa8a71b = strtolower(trim($sp671d6d[1])); $sp3172ba = trim($sp671d6d[2]); if (isset($this->headers[$spa8a71b])) { if (is_array($this->headers[$spa8a71b])) { $this->headers[$spa8a71b][] = $sp3172ba; } else { $this->headers[$spa8a71b] = array($this->headers[$spa8a71b], $sp3172ba); } } else { $this->headers[$spa8a71b] = $sp3172ba; } continue; } $this->content .= $spa3d810; } fclose($spc5e32a); if (isset($this->headers['content-encoding']) && $this->headers['content-encoding'] == 'gzip') { $this->debug('Content is gzip encoded, unzipping it'); $this->content = substr($this->content, 10); $this->content = gzinflate($this->content); } if ($this->persist_cookies && isset($this->headers['set-cookie']) && $this->host == $this->cookie_host) { $spe473a2 = $this->headers['set-cookie']; if (!is_array($spe473a2)) { $spe473a2 = array($spe473a2); } foreach ($spe473a2 as $spde6bcb) { if (preg_match('/([^=]+)=([^;]+);/', $spde6bcb, $sp671d6d)) { $this->cookies[$sp671d6d[1]] = $sp671d6d[2]; } } $this->cookie_host = $this->host; } if ($this->persist_referers) { $this->debug('Persisting referer: ' . $this->getRequestURL()); $this->referer = $this->getRequestURL(); } if ($this->handle_redirects) { if (++$this->redirect_count >= $this->max_redirects) { $this->errormsg = 'Number of redirects exceeded maximum (' . $this->max_redirects . ')'; $this->debug($this->errormsg); $this->redirect_count = 0; return false; } $spa304e5 = isset($this->headers['location']) ? $this->headers['location'] : ''; $sp3cca85 = isset($this->headers['uri']) ? $this->headers['uri'] : ''; if ($spa304e5 || $sp3cca85) { $sp7a0d0d = parse_url($spa304e5 . $sp3cca85); return $this->get($sp7a0d0d['path']); } } return true; } function buildRequest() { $sp21afdb = array(); $sp21afdb[] = "{$this->method} {$this->path} HTTP/1.0"; $sp21afdb[] = "Host: {$this->host}"; $sp21afdb[] = "User-Agent: {$this->user_agent}"; $sp21afdb[] = "Accept: {$this->accept}"; if ($this->use_gzip) { $sp21afdb[] = "Accept-encoding: {$this->accept_encoding}"; } $sp21afdb[] = "Accept-language: {$this->accept_language}"; if ($this->referer) { $sp21afdb[] = "Referer: {$this->referer}"; } if ($this->cookies) { $spde6bcb = 'Cookie: '; foreach ($this->cookies as $spa8a71b => $spffe9f9) { $spde6bcb .= "{$spa8a71b}={$spffe9f9}; "; } $sp21afdb[] = $spde6bcb; } if ($this->username && $this->password) { $sp21afdb[] = 'Authorization: BASIC ' . base64_encode($this->username . ':' . $this->password); } if ($this->postdata) { $sp21afdb[] = 'Content-Type: application/x-www-form-urlencoded'; $sp21afdb[] = 'Content-Length: ' . strlen($this->postdata); } $sp845342 = implode('
', $sp21afdb) . '

' . $this->postdata; return $sp845342; } function getStatus() { return $this->status; } function getContent() { return $this->content; } function getHeaders() { return $this->headers; } function getHeader($sp6e5e49) { $sp6e5e49 = strtolower($sp6e5e49); if (isset($this->headers[$sp6e5e49])) { return $this->headers[$sp6e5e49]; } else { return false; } } function getError() { return $this->errormsg; } function getCookies() { return $this->cookies; } function getRequestURL() { $sp7a0d0d = 'http://' . $this->host; if ($this->port != 80) { $sp7a0d0d .= ':' . $this->port; } $sp7a0d0d .= $this->path; return $sp7a0d0d; } function setUserAgent($spadab05) { $this->user_agent = $spadab05; } function setAuthorization($sp06eb04, $spa65220) { $this->username = $sp06eb04; $this->password = $spa65220; } function setCookies($spc0fe56) { $this->cookies = $spc0fe56; } function useGzip($sp1c5d0a) { $this->use_gzip = $sp1c5d0a; } function setPersistCookies($sp1c5d0a) { $this->persist_cookies = $sp1c5d0a; } function setPersistReferers($sp1c5d0a) { $this->persist_referers = $sp1c5d0a; } function setHandleRedirects($sp1c5d0a) { $this->handle_redirects = $sp1c5d0a; } function setMaxRedirects($sp260870) { $this->max_redirects = $sp260870; } function setHeadersOnly($sp1c5d0a) { $this->headers_only = $sp1c5d0a; } function setDebug($sp1c5d0a) { $this->debug = $sp1c5d0a; } function quickGet($sp7a0d0d) { $spebb2c3 = parse_url($sp7a0d0d); $sp818d73 = $spebb2c3['host']; $sp7f484b = isset($spebb2c3['port']) ? $spebb2c3['port'] : 80; $sp3c8c72 = isset($spebb2c3['path']) ? $spebb2c3['path'] : '/'; if (isset($spebb2c3['query'])) { $sp3c8c72 .= '?' . $spebb2c3['query']; } $sp589946 = new HttpClient($sp818d73, $sp7f484b); if (!$sp589946->get($sp3c8c72)) { return false; } else { return $sp589946->getContent(); } } static function quickPost($sp7a0d0d, $sp38c5ae) { $spebb2c3 = parse_url($sp7a0d0d); $sp818d73 = $spebb2c3['host']; $sp7f484b = isset($spebb2c3['port']) ? $spebb2c3['port'] : 80; $sp3c8c72 = isset($spebb2c3['path']) ? $spebb2c3['path'] : '/'; $sp589946 = new HttpClient($sp818d73, $sp7f484b); if (!$sp589946->post($sp3c8c72, $sp38c5ae)) { return false; } else { return $sp589946->getContent(); } } function debug($sp3792af, $spb14509 = false) { if ($this->debug) { print '<div style="border: 1px solid red; padding: 0.5em; margin: 0.5em;"><strong>HttpClient Debug:</strong> ' . $sp3792af; if ($spb14509) { ob_start(); print_r($spb14509); $spdf4cae = htmlentities(ob_get_contents()); ob_end_clean(); print '<pre>' . $spdf4cae . '</pre>'; } print '</div>'; } } }