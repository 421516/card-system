<?php
class HttpClient { var $host; var $port; var $path; var $method; var $postdata = ''; var $cookies = array(); var $referer; var $accept = 'text/xml,application/xml,application/xhtml+xml,text/html,text/plain,image/png,image/jpeg,image/gif,*/*'; var $accept_encoding = 'gzip'; var $accept_language = 'en-us'; var $user_agent = 'Incutio HttpClient v0.9'; var $timeout = 20; var $use_gzip = true; var $persist_cookies = true; var $persist_referers = true; var $debug = false; var $handle_redirects = true; var $max_redirects = 5; var $headers_only = false; var $username; var $password; var $status; var $headers = array(); var $content = ''; var $errormsg; var $redirect_count = 0; var $cookie_host = ''; function __construct($sp98ba70, $sp449483 = 80) { $this->host = $sp98ba70; $this->port = $sp449483; } function get($spdc50fb, $sp94131d = false) { $this->path = $spdc50fb; $this->method = 'GET'; if ($sp94131d) { $this->path .= '?' . $this->buildQueryString($sp94131d); } return $this->doRequest(); } function post($spdc50fb, $sp94131d) { $this->path = $spdc50fb; $this->method = 'POST'; $this->postdata = $this->buildQueryString($sp94131d); return $this->doRequest(); } function buildQueryString($sp94131d) { $spa4b6a2 = ''; if (is_array($sp94131d)) { foreach ($sp94131d as $sp63ae76 => $sp679ba2) { if (is_array($sp679ba2)) { foreach ($sp679ba2 as $sp7ba11e) { $spa4b6a2 .= urlencode($sp63ae76) . '=' . $sp7ba11e . '&'; } } else { $spa4b6a2 .= urlencode($sp63ae76) . '=' . $sp679ba2 . '&'; } } $spa4b6a2 = substr($spa4b6a2, 0, -1); } else { $spa4b6a2 = $sp94131d; } return $spa4b6a2; } function doRequest() { if (!($sp60df40 = @fsockopen($this->host, $this->port, $sp09667c, $sp25f5cb, $this->timeout))) { switch ($sp09667c) { case -3: $this->errormsg = 'Socket creation failed (-3)'; break; case -4: $this->errormsg = 'DNS lookup failure (-4)'; break; case -5: $this->errormsg = 'Connection refused or timed out (-5)'; break; default: $this->errormsg = 'Connection failed (' . $sp09667c . ')'; $this->errormsg .= ' ' . $sp25f5cb; $this->debug($this->errormsg); } return false; } socket_set_timeout($sp60df40, $this->timeout); $sp2d83a6 = $this->buildRequest(); $this->debug('Request', $sp2d83a6); fwrite($sp60df40, $sp2d83a6); $this->headers = array(); $this->content = ''; $this->errormsg = ''; $spfe6a18 = true; $sp6dba9c = true; while (!feof($sp60df40)) { $sp4a1a5b = fgets($sp60df40, 4096); if ($sp6dba9c) { $sp6dba9c = false; if (!preg_match('/HTTP\\/(\\d\\.\\d)\\s*(\\d+)\\s*(.*)/', $sp4a1a5b, $sp790bcd)) { $this->errormsg = 'Status code line invalid: ' . htmlentities($sp4a1a5b); $this->debug($this->errormsg); return false; } $this->status = $sp790bcd[2]; $this->debug(trim($sp4a1a5b)); continue; } if ($spfe6a18) { if (trim($sp4a1a5b) == '') { $spfe6a18 = false; $this->debug('Received Headers', $this->headers); if ($this->headers_only) { break; } continue; } if (!preg_match('/([^:]+):\\s*(.*)/', $sp4a1a5b, $sp790bcd)) { continue; } $sp63ae76 = strtolower(trim($sp790bcd[1])); $sp679ba2 = trim($sp790bcd[2]); if (isset($this->headers[$sp63ae76])) { if (is_array($this->headers[$sp63ae76])) { $this->headers[$sp63ae76][] = $sp679ba2; } else { $this->headers[$sp63ae76] = array($this->headers[$sp63ae76], $sp679ba2); } } else { $this->headers[$sp63ae76] = $sp679ba2; } continue; } $this->content .= $sp4a1a5b; } fclose($sp60df40); if (isset($this->headers['content-encoding']) && $this->headers['content-encoding'] == 'gzip') { $this->debug('Content is gzip encoded, unzipping it'); $this->content = substr($this->content, 10); $this->content = gzinflate($this->content); } if ($this->persist_cookies && isset($this->headers['set-cookie']) && $this->host == $this->cookie_host) { $sp3ccaff = $this->headers['set-cookie']; if (!is_array($sp3ccaff)) { $sp3ccaff = array($sp3ccaff); } foreach ($sp3ccaff as $spe5db61) { if (preg_match('/([^=]+)=([^;]+);/', $spe5db61, $sp790bcd)) { $this->cookies[$sp790bcd[1]] = $sp790bcd[2]; } } $this->cookie_host = $this->host; } if ($this->persist_referers) { $this->debug('Persisting referer: ' . $this->getRequestURL()); $this->referer = $this->getRequestURL(); } if ($this->handle_redirects) { if (++$this->redirect_count >= $this->max_redirects) { $this->errormsg = 'Number of redirects exceeded maximum (' . $this->max_redirects . ')'; $this->debug($this->errormsg); $this->redirect_count = 0; return false; } $spc363de = isset($this->headers['location']) ? $this->headers['location'] : ''; $spa29ea8 = isset($this->headers['uri']) ? $this->headers['uri'] : ''; if ($spc363de || $spa29ea8) { $sp833b34 = parse_url($spc363de . $spa29ea8); return $this->get($sp833b34['path']); } } return true; } function buildRequest() { $sp955824 = array(); $sp955824[] = "{$this->method} {$this->path} HTTP/1.0"; $sp955824[] = "Host: {$this->host}"; $sp955824[] = "User-Agent: {$this->user_agent}"; $sp955824[] = "Accept: {$this->accept}"; if ($this->use_gzip) { $sp955824[] = "Accept-encoding: {$this->accept_encoding}"; } $sp955824[] = "Accept-language: {$this->accept_language}"; if ($this->referer) { $sp955824[] = "Referer: {$this->referer}"; } if ($this->cookies) { $spe5db61 = 'Cookie: '; foreach ($this->cookies as $sp63ae76 => $sp308e09) { $spe5db61 .= "{$sp63ae76}={$sp308e09}; "; } $sp955824[] = $spe5db61; } if ($this->username && $this->password) { $sp955824[] = 'Authorization: BASIC ' . base64_encode($this->username . ':' . $this->password); } if ($this->postdata) { $sp955824[] = 'Content-Type: application/x-www-form-urlencoded'; $sp955824[] = 'Content-Length: ' . strlen($this->postdata); } $sp2d83a6 = implode('
', $sp955824) . '

' . $this->postdata; return $sp2d83a6; } function getStatus() { return $this->status; } function getContent() { return $this->content; } function getHeaders() { return $this->headers; } function getHeader($spf15143) { $spf15143 = strtolower($spf15143); if (isset($this->headers[$spf15143])) { return $this->headers[$spf15143]; } else { return false; } } function getError() { return $this->errormsg; } function getCookies() { return $this->cookies; } function getRequestURL() { $sp833b34 = 'http://' . $this->host; if ($this->port != 80) { $sp833b34 .= ':' . $this->port; } $sp833b34 .= $this->path; return $sp833b34; } function setUserAgent($sp5ebef2) { $this->user_agent = $sp5ebef2; } function setAuthorization($sp900ea1, $sp2a9512) { $this->username = $sp900ea1; $this->password = $sp2a9512; } function setCookies($sp9a7ef3) { $this->cookies = $sp9a7ef3; } function useGzip($spe8a6ce) { $this->use_gzip = $spe8a6ce; } function setPersistCookies($spe8a6ce) { $this->persist_cookies = $spe8a6ce; } function setPersistReferers($spe8a6ce) { $this->persist_referers = $spe8a6ce; } function setHandleRedirects($spe8a6ce) { $this->handle_redirects = $spe8a6ce; } function setMaxRedirects($sp5a6595) { $this->max_redirects = $sp5a6595; } function setHeadersOnly($spe8a6ce) { $this->headers_only = $spe8a6ce; } function setDebug($spe8a6ce) { $this->debug = $spe8a6ce; } function quickGet($sp833b34) { $spd4ae66 = parse_url($sp833b34); $sp98ba70 = $spd4ae66['host']; $sp449483 = isset($spd4ae66['port']) ? $spd4ae66['port'] : 80; $spdc50fb = isset($spd4ae66['path']) ? $spd4ae66['path'] : '/'; if (isset($spd4ae66['query'])) { $spdc50fb .= '?' . $spd4ae66['query']; } $spd272b0 = new HttpClient($sp98ba70, $sp449483); if (!$spd272b0->get($spdc50fb)) { return false; } else { return $spd272b0->getContent(); } } static function quickPost($sp833b34, $sp94131d) { $spd4ae66 = parse_url($sp833b34); $sp98ba70 = $spd4ae66['host']; $sp449483 = isset($spd4ae66['port']) ? $spd4ae66['port'] : 80; $spdc50fb = isset($spd4ae66['path']) ? $spd4ae66['path'] : '/'; $spd272b0 = new HttpClient($sp98ba70, $sp449483); if (!$spd272b0->post($spdc50fb, $sp94131d)) { return false; } else { return $spd272b0->getContent(); } } function debug($spcb569a, $sp526efe = false) { if ($this->debug) { print '<div style="border: 1px solid red; padding: 0.5em; margin: 0.5em;"><strong>HttpClient Debug:</strong> ' . $spcb569a; if ($sp526efe) { ob_start(); print_r($sp526efe); $sp9811e7 = htmlentities(ob_get_contents()); ob_end_clean(); print '<pre>' . $sp9811e7 . '</pre>'; } print '</div>'; } } }