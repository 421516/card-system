<?php
class HttpClient { var $host; var $port; var $path; var $method; var $postdata = ''; var $cookies = array(); var $referer; var $accept = 'text/xml,application/xml,application/xhtml+xml,text/html,text/plain,image/png,image/jpeg,image/gif,*/*'; var $accept_encoding = 'gzip'; var $accept_language = 'en-us'; var $user_agent = 'Incutio HttpClient v0.9'; var $timeout = 20; var $use_gzip = true; var $persist_cookies = true; var $persist_referers = true; var $debug = false; var $handle_redirects = true; var $max_redirects = 5; var $headers_only = false; var $username; var $password; var $status; var $headers = array(); var $content = ''; var $errormsg; var $redirect_count = 0; var $cookie_host = ''; function __construct($sped3550, $spe57c3f = 80) { $this->host = $sped3550; $this->port = $spe57c3f; } function get($spcf3029, $sp1835de = false) { $this->path = $spcf3029; $this->method = 'GET'; if ($sp1835de) { $this->path .= '?' . $this->buildQueryString($sp1835de); } return $this->doRequest(); } function post($spcf3029, $sp1835de) { $this->path = $spcf3029; $this->method = 'POST'; $this->postdata = $this->buildQueryString($sp1835de); return $this->doRequest(); } function buildQueryString($sp1835de) { $sp25bd63 = ''; if (is_array($sp1835de)) { foreach ($sp1835de as $sp9684a3 => $spc28c86) { if (is_array($spc28c86)) { foreach ($spc28c86 as $sp477b1e) { $sp25bd63 .= urlencode($sp9684a3) . '=' . $sp477b1e . '&'; } } else { $sp25bd63 .= urlencode($sp9684a3) . '=' . $spc28c86 . '&'; } } $sp25bd63 = substr($sp25bd63, 0, -1); } else { $sp25bd63 = $sp1835de; } return $sp25bd63; } function doRequest() { if (!($spbf833f = @fsockopen($this->host, $this->port, $spe58a7b, $sp655191, $this->timeout))) { switch ($spe58a7b) { case -3: $this->errormsg = 'Socket creation failed (-3)'; break; case -4: $this->errormsg = 'DNS lookup failure (-4)'; break; case -5: $this->errormsg = 'Connection refused or timed out (-5)'; break; default: $this->errormsg = 'Connection failed (' . $spe58a7b . ')'; $this->errormsg .= ' ' . $sp655191; $this->debug($this->errormsg); } return false; } socket_set_timeout($spbf833f, $this->timeout); $sp0fc69c = $this->buildRequest(); $this->debug('Request', $sp0fc69c); fwrite($spbf833f, $sp0fc69c); $this->headers = array(); $this->content = ''; $this->errormsg = ''; $sp1a5a20 = true; $sp6f9666 = true; while (!feof($spbf833f)) { $sp9ee6fd = fgets($spbf833f, 4096); if ($sp6f9666) { $sp6f9666 = false; if (!preg_match('/HTTP\\/(\\d\\.\\d)\\s*(\\d+)\\s*(.*)/', $sp9ee6fd, $spb2225f)) { $this->errormsg = 'Status code line invalid: ' . htmlentities($sp9ee6fd); $this->debug($this->errormsg); return false; } $this->status = $spb2225f[2]; $this->debug(trim($sp9ee6fd)); continue; } if ($sp1a5a20) { if (trim($sp9ee6fd) == '') { $sp1a5a20 = false; $this->debug('Received Headers', $this->headers); if ($this->headers_only) { break; } continue; } if (!preg_match('/([^:]+):\\s*(.*)/', $sp9ee6fd, $spb2225f)) { continue; } $sp9684a3 = strtolower(trim($spb2225f[1])); $spc28c86 = trim($spb2225f[2]); if (isset($this->headers[$sp9684a3])) { if (is_array($this->headers[$sp9684a3])) { $this->headers[$sp9684a3][] = $spc28c86; } else { $this->headers[$sp9684a3] = array($this->headers[$sp9684a3], $spc28c86); } } else { $this->headers[$sp9684a3] = $spc28c86; } continue; } $this->content .= $sp9ee6fd; } fclose($spbf833f); if (isset($this->headers['content-encoding']) && $this->headers['content-encoding'] == 'gzip') { $this->debug('Content is gzip encoded, unzipping it'); $this->content = substr($this->content, 10); $this->content = gzinflate($this->content); } if ($this->persist_cookies && isset($this->headers['set-cookie']) && $this->host == $this->cookie_host) { $sp3eacbc = $this->headers['set-cookie']; if (!is_array($sp3eacbc)) { $sp3eacbc = array($sp3eacbc); } foreach ($sp3eacbc as $spe5644b) { if (preg_match('/([^=]+)=([^;]+);/', $spe5644b, $spb2225f)) { $this->cookies[$spb2225f[1]] = $spb2225f[2]; } } $this->cookie_host = $this->host; } if ($this->persist_referers) { $this->debug('Persisting referer: ' . $this->getRequestURL()); $this->referer = $this->getRequestURL(); } if ($this->handle_redirects) { if (++$this->redirect_count >= $this->max_redirects) { $this->errormsg = 'Number of redirects exceeded maximum (' . $this->max_redirects . ')'; $this->debug($this->errormsg); $this->redirect_count = 0; return false; } $sp0b6da0 = isset($this->headers['location']) ? $this->headers['location'] : ''; $spfbcf5a = isset($this->headers['uri']) ? $this->headers['uri'] : ''; if ($sp0b6da0 || $spfbcf5a) { $spdfc1ea = parse_url($sp0b6da0 . $spfbcf5a); return $this->get($spdfc1ea['path']); } } return true; } function buildRequest() { $spdbbeeb = array(); $spdbbeeb[] = "{$this->method} {$this->path} HTTP/1.0"; $spdbbeeb[] = "Host: {$this->host}"; $spdbbeeb[] = "User-Agent: {$this->user_agent}"; $spdbbeeb[] = "Accept: {$this->accept}"; if ($this->use_gzip) { $spdbbeeb[] = "Accept-encoding: {$this->accept_encoding}"; } $spdbbeeb[] = "Accept-language: {$this->accept_language}"; if ($this->referer) { $spdbbeeb[] = "Referer: {$this->referer}"; } if ($this->cookies) { $spe5644b = 'Cookie: '; foreach ($this->cookies as $sp9684a3 => $spb66e06) { $spe5644b .= "{$sp9684a3}={$spb66e06}; "; } $spdbbeeb[] = $spe5644b; } if ($this->username && $this->password) { $spdbbeeb[] = 'Authorization: BASIC ' . base64_encode($this->username . ':' . $this->password); } if ($this->postdata) { $spdbbeeb[] = 'Content-Type: application/x-www-form-urlencoded'; $spdbbeeb[] = 'Content-Length: ' . strlen($this->postdata); } $sp0fc69c = implode('
', $spdbbeeb) . '

' . $this->postdata; return $sp0fc69c; } function getStatus() { return $this->status; } function getContent() { return $this->content; } function getHeaders() { return $this->headers; } function getHeader($sp59c615) { $sp59c615 = strtolower($sp59c615); if (isset($this->headers[$sp59c615])) { return $this->headers[$sp59c615]; } else { return false; } } function getError() { return $this->errormsg; } function getCookies() { return $this->cookies; } function getRequestURL() { $spdfc1ea = 'http://' . $this->host; if ($this->port != 80) { $spdfc1ea .= ':' . $this->port; } $spdfc1ea .= $this->path; return $spdfc1ea; } function setUserAgent($sp43dfb1) { $this->user_agent = $sp43dfb1; } function setAuthorization($spddd53b, $sp53fc75) { $this->username = $spddd53b; $this->password = $sp53fc75; } function setCookies($spe313a2) { $this->cookies = $spe313a2; } function useGzip($spcc1d0a) { $this->use_gzip = $spcc1d0a; } function setPersistCookies($spcc1d0a) { $this->persist_cookies = $spcc1d0a; } function setPersistReferers($spcc1d0a) { $this->persist_referers = $spcc1d0a; } function setHandleRedirects($spcc1d0a) { $this->handle_redirects = $spcc1d0a; } function setMaxRedirects($sp3b0bf9) { $this->max_redirects = $sp3b0bf9; } function setHeadersOnly($spcc1d0a) { $this->headers_only = $spcc1d0a; } function setDebug($spcc1d0a) { $this->debug = $spcc1d0a; } function quickGet($spdfc1ea) { $spbc76fa = parse_url($spdfc1ea); $sped3550 = $spbc76fa['host']; $spe57c3f = isset($spbc76fa['port']) ? $spbc76fa['port'] : 80; $spcf3029 = isset($spbc76fa['path']) ? $spbc76fa['path'] : '/'; if (isset($spbc76fa['query'])) { $spcf3029 .= '?' . $spbc76fa['query']; } $sp3f7090 = new HttpClient($sped3550, $spe57c3f); if (!$sp3f7090->get($spcf3029)) { return false; } else { return $sp3f7090->getContent(); } } static function quickPost($spdfc1ea, $sp1835de) { $spbc76fa = parse_url($spdfc1ea); $sped3550 = $spbc76fa['host']; $spe57c3f = isset($spbc76fa['port']) ? $spbc76fa['port'] : 80; $spcf3029 = isset($spbc76fa['path']) ? $spbc76fa['path'] : '/'; $sp3f7090 = new HttpClient($sped3550, $spe57c3f); if (!$sp3f7090->post($spcf3029, $sp1835de)) { return false; } else { return $sp3f7090->getContent(); } } function debug($spbfa8f4, $spaad3ae = false) { if ($this->debug) { print '<div style="border: 1px solid red; padding: 0.5em; margin: 0.5em;"><strong>HttpClient Debug:</strong> ' . $spbfa8f4; if ($spaad3ae) { ob_start(); print_r($spaad3ae); $spf0a6e9 = htmlentities(ob_get_contents()); ob_end_clean(); print '<pre>' . $spf0a6e9 . '</pre>'; } print '</div>'; } } }