<?php
class yekeAPI { function __construct() { } public static function getPayGate() { $spb9d69c = array('action' => 'getPayType', 'userid' => yeke_USER_ID, 'sign' => md5(yeke_USER_ID . yeke_USER_KEY)); $spbcb528 = HttpClient::quickPost(yeke_API_GATE, $spb9d69c); return $spbcb528; } public static function getPayType() { $sp36eb9c = json_decode(self::getPayGate(), true); $sp1835de = array(); if ($sp36eb9c['status']) { foreach ($sp36eb9c['list'] as $sp9684a3 => $spc28c86) { $sp1835de[] = array('paytype' => $spc28c86['paytype'], 'channelname' => $spc28c86['channelname']); } } return $sp1835de; } public static function getChannel($sp988e4c) { $sp36eb9c = json_decode(self::getPayGate(), true); $sp1835de = array(); if ($sp988e4c == 'card') { if ($sp36eb9c['status'] && $sp36eb9c['list']) { foreach ($sp36eb9c['list'] as $spc28c86) { if ($spc28c86['paytype'] == $sp988e4c) { foreach ($spc28c86['datalist'] as $sp9684a3 => $sp477b1e) { $sp1835de[] = array('channelid' => $sp477b1e['channelid'], 'channelname' => $sp477b1e['channelname'], 'imgurl' => $sp477b1e['imgurl']); } } } } } else { if ($sp36eb9c['status'] && $sp36eb9c['list']) { foreach ($sp36eb9c['list'] as $spc28c86) { if ($spc28c86['paytype'] == $sp988e4c) { foreach ($spc28c86['datalist'] as $sp9684a3 => $sp477b1e) { $sp1835de[] = array('bankcode' => $sp477b1e['bankcode'], 'bankname' => $sp477b1e['bankname'], 'imgurl' => $sp477b1e['imgurl']); } } } } } return $sp1835de; } public static function getCardValue() { $sp36eb9c = json_decode(self::getPayGate(), true); $sp1835de = array(); if ($sp36eb9c['status'] && $sp36eb9c['list']) { foreach ($sp36eb9c['list'] as $spc28c86) { if ($spc28c86['paytype'] == 'card') { foreach ($spc28c86['datalist'] as $sp9684a3 => $spc28c86) { $sp1835de[] = array('channelid' => $spc28c86['channelid'], 'channelname' => $spc28c86['channelname'], 'cardvalue' => $spc28c86['cardvalue'], 'cardlength' => $spc28c86['cardlength']); } } } } return $sp1835de; } public static function getOrderID() { return date('Y') . date('m') . date('d') . date('H') . date('i') . date('s') . rand(100000, 999999); } public function payGate($spb9d69c) { $spb9d69c = array_merge(array('P_userid' => yeke_USER_ID), $spb9d69c); $sp23eef6 = $this->makeSign($spb9d69c); $spb9d69c = array_merge($spb9d69c, array('P_sign' => $sp23eef6, 'action' => 'payGate')); switch ($spb9d69c['P_paytype']) { case 'bank': case 'alipay': case 'tenpay': case 'weixin': case 'wxwap': case 'sqzf': return $this->payGateBank($spb9d69c); break; case 'card': return $this->payGateCard($spb9d69c); break; default: return 'error,支付方式错误'; } } public function payGateBank($spb9d69c) { $spb67857 = '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8"><title>请稍候，正在跳转...</title></head>'; $spb67857 .= '<body onload="document.pay.submit()">'; $spb67857 .= '请稍候，正在跳转...'; $spb67857 .= '<form name="pay" action=' . yeke_API_GATE . ' method="post">'; foreach ($spb9d69c as $sp9684a3 => $spc28c86) { $spb67857 .= '<input type="hidden" name="' . $sp9684a3 . '" value="' . $spc28c86 . '">'; } $spb67857 .= '</body></html>'; return $spb67857; } public function payGateCard($spb9d69c) { if ($spb9d69c['P_cardnum'] == '' || $spb9d69c['P_cardpwd'] == '' || $spb9d69c['P_cardvalue'] == '') { return 'error,卡信息不完整'; } $spbcb528 = HttpClient::quickPost(yeke_API_GATE, $spb9d69c); return $spbcb528; } public function makeSign($spb9d69c) { $spb67857 = ''; foreach ($spb9d69c as $sp9684a3 => $spc28c86) { $spb67857 .= $spb67857 ? '&' : ''; $spb67857 .= $sp9684a3 . '=' . $spc28c86; } $sp23eef6 = md5($spb67857 . yeke_USER_KEY); return $sp23eef6; } public function verifyNotify() { if (empty($_POST)) { return false; } $_POST['P_productname'] = urlencode($_POST['P_productname']); $_POST['P_productinfo'] = urlencode($_POST['P_productinfo']); $_POST['P_remark'] = urlencode($_POST['P_remark']); $_POST['P_custom_1'] = urlencode($_POST['P_custom_1']); $_POST['P_custom_2'] = urlencode($_POST['P_custom_2']); $_POST['P_contact'] = urlencode($_POST['P_contact']); $spbd6bf2 = $_POST['P_sign']; foreach ($_POST as $sp9684a3 => $spc28c86) { if ($sp9684a3 == 'P_sign') { unset($_POST['P_sign']); } } $sp2fc802 = $this->makeSign($_POST); $this->logs($_POST['P_api_orderid'], $_POST, $spbd6bf2 . '=' . $sp2fc802); if ($spbd6bf2 == $sp2fc802) { return true; } else { return false; } } public function verifyReturn() { if (empty($_GET)) { return false; } $_GET['P_productname'] = urlencode($_GET['P_productname']); $_GET['P_productinfo'] = urlencode($_GET['P_productinfo']); $_GET['P_remark'] = urlencode($_GET['P_remark']); $_GET['P_custom_1'] = urlencode($_GET['P_custom_1']); $_GET['P_custom_2'] = urlencode($_GET['P_custom_2']); $_GET['P_contact'] = urlencode($_GET['P_contact']); $spbd6bf2 = $_GET['P_sign']; foreach ($_GET as $sp9684a3 => $spc28c86) { if ($sp9684a3 == 'P_sign') { unset($_GET['P_sign']); } } $sp2fc802 = $this->makeSign($_GET); if ($spbd6bf2 == $sp2fc802) { return true; } else { return false; } } public function logs($sp31c211, $spb9d69c, $sp2fc802) { date_default_timezone_set('PRC'); if (!empty($spb9d69c)) { $spb67857 = ''; foreach ($spb9d69c as $sp9684a3 => $spc28c86) { $spb67857 .= $spb67857 ? '&' : ''; $spb67857 .= $sp9684a3 . '=' . $spc28c86; } $spf0a6e9 = date('Y-m-d H:i:s') . '
' . $sp31c211 . '
' . $spb67857 . '
' . $sp2fc802 . '

........................................

'; $spc47360 = 'log'; if (!file_exists($spc47360)) { mkdir($spc47360, 511, true); } $sp7dcebb = yeke_USER_LOG_PREFIX . '-' . date('Y-m-d') . '.txt'; $spbf833f = fopen($spc47360 . '/' . $sp7dcebb, 'ab'); fwrite($spbf833f, $spf0a6e9); fclose($spbf833f); } } }