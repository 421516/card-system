<?php
class yekeAPI { function __construct() { } public static function getPayGate() { $sp20678b = array('action' => 'getPayType', 'userid' => yeke_USER_ID, 'sign' => md5(yeke_USER_ID . yeke_USER_KEY)); $sp9610ab = HttpClient::quickPost(yeke_API_GATE, $sp20678b); return $sp9610ab; } public static function getPayType() { $sp0ba550 = json_decode(self::getPayGate(), true); $sp29e0c7 = array(); if ($sp0ba550['status']) { foreach ($sp0ba550['list'] as $spf74fd0 => $sp5d0add) { $sp29e0c7[] = array('paytype' => $sp5d0add['paytype'], 'channelname' => $sp5d0add['channelname']); } } return $sp29e0c7; } public static function getChannel($sp667608) { $sp0ba550 = json_decode(self::getPayGate(), true); $sp29e0c7 = array(); if ($sp667608 == 'card') { if ($sp0ba550['status'] && $sp0ba550['list']) { foreach ($sp0ba550['list'] as $sp5d0add) { if ($sp5d0add['paytype'] == $sp667608) { foreach ($sp5d0add['datalist'] as $spf74fd0 => $sp55a9df) { $sp29e0c7[] = array('channelid' => $sp55a9df['channelid'], 'channelname' => $sp55a9df['channelname'], 'imgurl' => $sp55a9df['imgurl']); } } } } } else { if ($sp0ba550['status'] && $sp0ba550['list']) { foreach ($sp0ba550['list'] as $sp5d0add) { if ($sp5d0add['paytype'] == $sp667608) { foreach ($sp5d0add['datalist'] as $spf74fd0 => $sp55a9df) { $sp29e0c7[] = array('bankcode' => $sp55a9df['bankcode'], 'bankname' => $sp55a9df['bankname'], 'imgurl' => $sp55a9df['imgurl']); } } } } } return $sp29e0c7; } public static function getCardValue() { $sp0ba550 = json_decode(self::getPayGate(), true); $sp29e0c7 = array(); if ($sp0ba550['status'] && $sp0ba550['list']) { foreach ($sp0ba550['list'] as $sp5d0add) { if ($sp5d0add['paytype'] == 'card') { foreach ($sp5d0add['datalist'] as $spf74fd0 => $sp5d0add) { $sp29e0c7[] = array('channelid' => $sp5d0add['channelid'], 'channelname' => $sp5d0add['channelname'], 'cardvalue' => $sp5d0add['cardvalue'], 'cardlength' => $sp5d0add['cardlength']); } } } } return $sp29e0c7; } public static function getOrderID() { return date('Y') . date('m') . date('d') . date('H') . date('i') . date('s') . rand(100000, 999999); } public function payGate($sp20678b) { $sp20678b = array_merge(array('P_userid' => yeke_USER_ID), $sp20678b); $sp9c9a88 = $this->makeSign($sp20678b); $sp20678b = array_merge($sp20678b, array('P_sign' => $sp9c9a88, 'action' => 'payGate')); switch ($sp20678b['P_paytype']) { case 'bank': case 'alipay': case 'tenpay': case 'weixin': case 'wxwap': case 'sqzf': return $this->payGateBank($sp20678b); break; case 'card': return $this->payGateCard($sp20678b); break; default: return 'error,支付方式错误'; } } public function payGateBank($sp20678b) { $spc940b6 = '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8"><title>请稍候，正在跳转...</title></head>'; $spc940b6 .= '<body onload="document.pay.submit()">'; $spc940b6 .= '请稍候，正在跳转...'; $spc940b6 .= '<form name="pay" action=' . yeke_API_GATE . ' method="post">'; foreach ($sp20678b as $spf74fd0 => $sp5d0add) { $spc940b6 .= '<input type="hidden" name="' . $spf74fd0 . '" value="' . $sp5d0add . '">'; } $spc940b6 .= '</body></html>'; return $spc940b6; } public function payGateCard($sp20678b) { if ($sp20678b['P_cardnum'] == '' || $sp20678b['P_cardpwd'] == '' || $sp20678b['P_cardvalue'] == '') { return 'error,卡信息不完整'; } $sp9610ab = HttpClient::quickPost(yeke_API_GATE, $sp20678b); return $sp9610ab; } public function makeSign($sp20678b) { $spc940b6 = ''; foreach ($sp20678b as $spf74fd0 => $sp5d0add) { $spc940b6 .= $spc940b6 ? '&' : ''; $spc940b6 .= $spf74fd0 . '=' . $sp5d0add; } $sp9c9a88 = md5($spc940b6 . yeke_USER_KEY); return $sp9c9a88; } public function verifyNotify() { if (empty($_POST)) { return false; } $_POST['P_productname'] = urlencode($_POST['P_productname']); $_POST['P_productinfo'] = urlencode($_POST['P_productinfo']); $_POST['P_remark'] = urlencode($_POST['P_remark']); $_POST['P_custom_1'] = urlencode($_POST['P_custom_1']); $_POST['P_custom_2'] = urlencode($_POST['P_custom_2']); $_POST['P_contact'] = urlencode($_POST['P_contact']); $spfa5b05 = $_POST['P_sign']; foreach ($_POST as $spf74fd0 => $sp5d0add) { if ($spf74fd0 == 'P_sign') { unset($_POST['P_sign']); } } $spaafc54 = $this->makeSign($_POST); $this->logs($_POST['P_api_orderid'], $_POST, $spfa5b05 . '=' . $spaafc54); if ($spfa5b05 == $spaafc54) { return true; } else { return false; } } public function verifyReturn() { if (empty($_GET)) { return false; } $_GET['P_productname'] = urlencode($_GET['P_productname']); $_GET['P_productinfo'] = urlencode($_GET['P_productinfo']); $_GET['P_remark'] = urlencode($_GET['P_remark']); $_GET['P_custom_1'] = urlencode($_GET['P_custom_1']); $_GET['P_custom_2'] = urlencode($_GET['P_custom_2']); $_GET['P_contact'] = urlencode($_GET['P_contact']); $spfa5b05 = $_GET['P_sign']; foreach ($_GET as $spf74fd0 => $sp5d0add) { if ($spf74fd0 == 'P_sign') { unset($_GET['P_sign']); } } $spaafc54 = $this->makeSign($_GET); if ($spfa5b05 == $spaafc54) { return true; } else { return false; } } public function logs($spb1789f, $sp20678b, $spaafc54) { date_default_timezone_set('PRC'); if (!empty($sp20678b)) { $spc940b6 = ''; foreach ($sp20678b as $spf74fd0 => $sp5d0add) { $spc940b6 .= $spc940b6 ? '&' : ''; $spc940b6 .= $spf74fd0 . '=' . $sp5d0add; } $spd64208 = date('Y-m-d H:i:s') . '
' . $spb1789f . '
' . $spc940b6 . '
' . $spaafc54 . '

........................................

'; $sp50475c = 'log'; if (!file_exists($sp50475c)) { mkdir($sp50475c, 511, true); } $spc5d1c1 = yeke_USER_LOG_PREFIX . '-' . date('Y-m-d') . '.txt'; $sp9ea283 = fopen($sp50475c . '/' . $spc5d1c1, 'ab'); fwrite($sp9ea283, $spd64208); fclose($sp9ea283); } } }