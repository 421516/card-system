<?php
class yekeAPI { function __construct() { } public static function getPayGate() { $spf44b7f = array('action' => 'getPayType', 'userid' => yeke_USER_ID, 'sign' => md5(yeke_USER_ID . yeke_USER_KEY)); $spcc4042 = HttpClient::quickPost(yeke_API_GATE, $spf44b7f); return $spcc4042; } public static function getPayType() { $spd1b01a = json_decode(self::getPayGate(), true); $sp38c5ae = array(); if ($spd1b01a['status']) { foreach ($spd1b01a['list'] as $spa8a71b => $sp3172ba) { $sp38c5ae[] = array('paytype' => $sp3172ba['paytype'], 'channelname' => $sp3172ba['channelname']); } } return $sp38c5ae; } public static function getChannel($sp5548ba) { $spd1b01a = json_decode(self::getPayGate(), true); $sp38c5ae = array(); if ($sp5548ba == 'card') { if ($spd1b01a['status'] && $spd1b01a['list']) { foreach ($spd1b01a['list'] as $sp3172ba) { if ($sp3172ba['paytype'] == $sp5548ba) { foreach ($sp3172ba['datalist'] as $spa8a71b => $sp73a13d) { $sp38c5ae[] = array('channelid' => $sp73a13d['channelid'], 'channelname' => $sp73a13d['channelname'], 'imgurl' => $sp73a13d['imgurl']); } } } } } else { if ($spd1b01a['status'] && $spd1b01a['list']) { foreach ($spd1b01a['list'] as $sp3172ba) { if ($sp3172ba['paytype'] == $sp5548ba) { foreach ($sp3172ba['datalist'] as $spa8a71b => $sp73a13d) { $sp38c5ae[] = array('bankcode' => $sp73a13d['bankcode'], 'bankname' => $sp73a13d['bankname'], 'imgurl' => $sp73a13d['imgurl']); } } } } } return $sp38c5ae; } public static function getCardValue() { $spd1b01a = json_decode(self::getPayGate(), true); $sp38c5ae = array(); if ($spd1b01a['status'] && $spd1b01a['list']) { foreach ($spd1b01a['list'] as $sp3172ba) { if ($sp3172ba['paytype'] == 'card') { foreach ($sp3172ba['datalist'] as $spa8a71b => $sp3172ba) { $sp38c5ae[] = array('channelid' => $sp3172ba['channelid'], 'channelname' => $sp3172ba['channelname'], 'cardvalue' => $sp3172ba['cardvalue'], 'cardlength' => $sp3172ba['cardlength']); } } } } return $sp38c5ae; } public static function getOrderID() { return date('Y') . date('m') . date('d') . date('H') . date('i') . date('s') . rand(100000, 999999); } public function payGate($spf44b7f) { $spf44b7f = array_merge(array('P_userid' => yeke_USER_ID), $spf44b7f); $sp885ea3 = $this->makeSign($spf44b7f); $spf44b7f = array_merge($spf44b7f, array('P_sign' => $sp885ea3, 'action' => 'payGate')); switch ($spf44b7f['P_paytype']) { case 'bank': case 'alipay': case 'tenpay': case 'weixin': case 'wxwap': case 'sqzf': return $this->payGateBank($spf44b7f); break; case 'card': return $this->payGateCard($spf44b7f); break; default: return 'error,支付方式错误'; } } public function payGateBank($spf44b7f) { $spfcf742 = '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8"><title>请稍候，正在跳转...</title></head>'; $spfcf742 .= '<body onload="document.pay.submit()">'; $spfcf742 .= '请稍候，正在跳转...'; $spfcf742 .= '<form name="pay" action=' . yeke_API_GATE . ' method="post">'; foreach ($spf44b7f as $spa8a71b => $sp3172ba) { $spfcf742 .= '<input type="hidden" name="' . $spa8a71b . '" value="' . $sp3172ba . '">'; } $spfcf742 .= '</body></html>'; return $spfcf742; } public function payGateCard($spf44b7f) { if ($spf44b7f['P_cardnum'] == '' || $spf44b7f['P_cardpwd'] == '' || $spf44b7f['P_cardvalue'] == '') { return 'error,卡信息不完整'; } $spcc4042 = HttpClient::quickPost(yeke_API_GATE, $spf44b7f); return $spcc4042; } public function makeSign($spf44b7f) { $spfcf742 = ''; foreach ($spf44b7f as $spa8a71b => $sp3172ba) { $spfcf742 .= $spfcf742 ? '&' : ''; $spfcf742 .= $spa8a71b . '=' . $sp3172ba; } $sp885ea3 = md5($spfcf742 . yeke_USER_KEY); return $sp885ea3; } public function verifyNotify() { if (empty($_POST)) { return false; } $_POST['P_productname'] = urlencode($_POST['P_productname']); $_POST['P_productinfo'] = urlencode($_POST['P_productinfo']); $_POST['P_remark'] = urlencode($_POST['P_remark']); $_POST['P_custom_1'] = urlencode($_POST['P_custom_1']); $_POST['P_custom_2'] = urlencode($_POST['P_custom_2']); $_POST['P_contact'] = urlencode($_POST['P_contact']); $sp68c5da = $_POST['P_sign']; foreach ($_POST as $spa8a71b => $sp3172ba) { if ($spa8a71b == 'P_sign') { unset($_POST['P_sign']); } } $sp1ed638 = $this->makeSign($_POST); $this->logs($_POST['P_api_orderid'], $_POST, $sp68c5da . '=' . $sp1ed638); if ($sp68c5da == $sp1ed638) { return true; } else { return false; } } public function verifyReturn() { if (empty($_GET)) { return false; } $_GET['P_productname'] = urlencode($_GET['P_productname']); $_GET['P_productinfo'] = urlencode($_GET['P_productinfo']); $_GET['P_remark'] = urlencode($_GET['P_remark']); $_GET['P_custom_1'] = urlencode($_GET['P_custom_1']); $_GET['P_custom_2'] = urlencode($_GET['P_custom_2']); $_GET['P_contact'] = urlencode($_GET['P_contact']); $sp68c5da = $_GET['P_sign']; foreach ($_GET as $spa8a71b => $sp3172ba) { if ($spa8a71b == 'P_sign') { unset($_GET['P_sign']); } } $sp1ed638 = $this->makeSign($_GET); if ($sp68c5da == $sp1ed638) { return true; } else { return false; } } public function logs($sp201feb, $spf44b7f, $sp1ed638) { date_default_timezone_set('PRC'); if (!empty($spf44b7f)) { $spfcf742 = ''; foreach ($spf44b7f as $spa8a71b => $sp3172ba) { $spfcf742 .= $spfcf742 ? '&' : ''; $spfcf742 .= $spa8a71b . '=' . $sp3172ba; } $spdf4cae = date('Y-m-d H:i:s') . '
' . $sp201feb . '
' . $spfcf742 . '
' . $sp1ed638 . '

........................................

'; $sp2af50e = 'log'; if (!file_exists($sp2af50e)) { mkdir($sp2af50e, 511, true); } $sp3aae7a = yeke_USER_LOG_PREFIX . '-' . date('Y-m-d') . '.txt'; $spc5e32a = fopen($sp2af50e . '/' . $sp3aae7a, 'ab'); fwrite($spc5e32a, $spdf4cae); fclose($spc5e32a); } } }