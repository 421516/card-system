<?php
class yekeAPI { function __construct() { } public static function getPayGate() { $sp31ee10 = array('action' => 'getPayType', 'userid' => yeke_USER_ID, 'sign' => md5(yeke_USER_ID . yeke_USER_KEY)); $sp836ce6 = HttpClient::quickPost(yeke_API_GATE, $sp31ee10); return $sp836ce6; } public static function getPayType() { $sp8ea0e0 = json_decode(self::getPayGate(), true); $sp94131d = array(); if ($sp8ea0e0['status']) { foreach ($sp8ea0e0['list'] as $sp63ae76 => $sp679ba2) { $sp94131d[] = array('paytype' => $sp679ba2['paytype'], 'channelname' => $sp679ba2['channelname']); } } return $sp94131d; } public static function getChannel($sp43f309) { $sp8ea0e0 = json_decode(self::getPayGate(), true); $sp94131d = array(); if ($sp43f309 == 'card') { if ($sp8ea0e0['status'] && $sp8ea0e0['list']) { foreach ($sp8ea0e0['list'] as $sp679ba2) { if ($sp679ba2['paytype'] == $sp43f309) { foreach ($sp679ba2['datalist'] as $sp63ae76 => $sp7ba11e) { $sp94131d[] = array('channelid' => $sp7ba11e['channelid'], 'channelname' => $sp7ba11e['channelname'], 'imgurl' => $sp7ba11e['imgurl']); } } } } } else { if ($sp8ea0e0['status'] && $sp8ea0e0['list']) { foreach ($sp8ea0e0['list'] as $sp679ba2) { if ($sp679ba2['paytype'] == $sp43f309) { foreach ($sp679ba2['datalist'] as $sp63ae76 => $sp7ba11e) { $sp94131d[] = array('bankcode' => $sp7ba11e['bankcode'], 'bankname' => $sp7ba11e['bankname'], 'imgurl' => $sp7ba11e['imgurl']); } } } } } return $sp94131d; } public static function getCardValue() { $sp8ea0e0 = json_decode(self::getPayGate(), true); $sp94131d = array(); if ($sp8ea0e0['status'] && $sp8ea0e0['list']) { foreach ($sp8ea0e0['list'] as $sp679ba2) { if ($sp679ba2['paytype'] == 'card') { foreach ($sp679ba2['datalist'] as $sp63ae76 => $sp679ba2) { $sp94131d[] = array('channelid' => $sp679ba2['channelid'], 'channelname' => $sp679ba2['channelname'], 'cardvalue' => $sp679ba2['cardvalue'], 'cardlength' => $sp679ba2['cardlength']); } } } } return $sp94131d; } public static function getOrderID() { return date('Y') . date('m') . date('d') . date('H') . date('i') . date('s') . rand(100000, 999999); } public function payGate($sp31ee10) { $sp31ee10 = array_merge(array('P_userid' => yeke_USER_ID), $sp31ee10); $sp36c1ea = $this->makeSign($sp31ee10); $sp31ee10 = array_merge($sp31ee10, array('P_sign' => $sp36c1ea, 'action' => 'payGate')); switch ($sp31ee10['P_paytype']) { case 'bank': case 'alipay': case 'tenpay': case 'weixin': case 'wxwap': case 'sqzf': return $this->payGateBank($sp31ee10); break; case 'card': return $this->payGateCard($sp31ee10); break; default: return 'error,支付方式错误'; } } public function payGateBank($sp31ee10) { $spf6683b = '<html><head><meta http-equiv="content-type" content="text/html;charset=utf-8"><title>请稍候，正在跳转...</title></head>'; $spf6683b .= '<body onload="document.pay.submit()">'; $spf6683b .= '请稍候，正在跳转...'; $spf6683b .= '<form name="pay" action=' . yeke_API_GATE . ' method="post">'; foreach ($sp31ee10 as $sp63ae76 => $sp679ba2) { $spf6683b .= '<input type="hidden" name="' . $sp63ae76 . '" value="' . $sp679ba2 . '">'; } $spf6683b .= '</body></html>'; return $spf6683b; } public function payGateCard($sp31ee10) { if ($sp31ee10['P_cardnum'] == '' || $sp31ee10['P_cardpwd'] == '' || $sp31ee10['P_cardvalue'] == '') { return 'error,卡信息不完整'; } $sp836ce6 = HttpClient::quickPost(yeke_API_GATE, $sp31ee10); return $sp836ce6; } public function makeSign($sp31ee10) { $spf6683b = ''; foreach ($sp31ee10 as $sp63ae76 => $sp679ba2) { $spf6683b .= $spf6683b ? '&' : ''; $spf6683b .= $sp63ae76 . '=' . $sp679ba2; } $sp36c1ea = md5($spf6683b . yeke_USER_KEY); return $sp36c1ea; } public function verifyNotify() { if (empty($_POST)) { return false; } $_POST['P_productname'] = urlencode($_POST['P_productname']); $_POST['P_productinfo'] = urlencode($_POST['P_productinfo']); $_POST['P_remark'] = urlencode($_POST['P_remark']); $_POST['P_custom_1'] = urlencode($_POST['P_custom_1']); $_POST['P_custom_2'] = urlencode($_POST['P_custom_2']); $_POST['P_contact'] = urlencode($_POST['P_contact']); $sp9dccf3 = $_POST['P_sign']; foreach ($_POST as $sp63ae76 => $sp679ba2) { if ($sp63ae76 == 'P_sign') { unset($_POST['P_sign']); } } $spf22fc9 = $this->makeSign($_POST); $this->logs($_POST['P_api_orderid'], $_POST, $sp9dccf3 . '=' . $spf22fc9); if ($sp9dccf3 == $spf22fc9) { return true; } else { return false; } } public function verifyReturn() { if (empty($_GET)) { return false; } $_GET['P_productname'] = urlencode($_GET['P_productname']); $_GET['P_productinfo'] = urlencode($_GET['P_productinfo']); $_GET['P_remark'] = urlencode($_GET['P_remark']); $_GET['P_custom_1'] = urlencode($_GET['P_custom_1']); $_GET['P_custom_2'] = urlencode($_GET['P_custom_2']); $_GET['P_contact'] = urlencode($_GET['P_contact']); $sp9dccf3 = $_GET['P_sign']; foreach ($_GET as $sp63ae76 => $sp679ba2) { if ($sp63ae76 == 'P_sign') { unset($_GET['P_sign']); } } $spf22fc9 = $this->makeSign($_GET); if ($sp9dccf3 == $spf22fc9) { return true; } else { return false; } } public function logs($sp65e965, $sp31ee10, $spf22fc9) { date_default_timezone_set('PRC'); if (!empty($sp31ee10)) { $spf6683b = ''; foreach ($sp31ee10 as $sp63ae76 => $sp679ba2) { $spf6683b .= $spf6683b ? '&' : ''; $spf6683b .= $sp63ae76 . '=' . $sp679ba2; } $sp9811e7 = date('Y-m-d H:i:s') . '
' . $sp65e965 . '
' . $spf6683b . '
' . $spf22fc9 . '

........................................

'; $sp799040 = 'log'; if (!file_exists($sp799040)) { mkdir($sp799040, 511, true); } $specd56e = yeke_USER_LOG_PREFIX . '-' . date('Y-m-d') . '.txt'; $sp60df40 = fopen($sp799040 . '/' . $specd56e, 'ab'); fwrite($sp60df40, $sp9811e7); fclose($sp60df40); } } }