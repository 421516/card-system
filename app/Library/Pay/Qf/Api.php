<?php
namespace App\Library\Pay\Qf; use App\Library\CurlRequest as Request; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; public function __construct($sp3a2be3) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp3a2be3; $this->url_return = SYS_URL . '/pay/return/' . $sp3a2be3; } function goPay($sp45b2a0, $spd184e1, $sp873da9, $sp33eb4d, $sp521b2c) { $spa27512 = strtolower($sp45b2a0['payway']); if (!isset($sp45b2a0['id'])) { throw new \Exception('请设置 id'); } $sp21afdb = array(); if ($spa27512 == 'qq') { $sp21afdb = array('User-Agent' => 'Mozilla/5.0 Mobile MQQBrowser/6.2 QQ/7.2.5.3305'); } elseif ($spa27512 == 'alipay') { $sp21afdb = array('User-Agent' => 'Mozilla/5.0 AlipayChannelId/5136 AlipayDefined(nt:WIFI,ws:411|0|2.625) AliApp(AP/10.1.10.1226101) AlipayClient/10.1.10.1226101'); } $spde6bcb = ''; $spbe6c16 = Request::get('https://o2.qfpay.com/q/info?code=&huid=' . $sp45b2a0['id'] . '&opuid=&reqid=' . $spd184e1, $spde6bcb, $sp21afdb); $spa58aaa = static::strBetween($spbe6c16, 'reqid":"', '"'); $spe60820 = static::strBetween($spbe6c16, 'currency":"', '"'); if ($spa58aaa == '' || $spe60820 == '') { Log::error('qfpay pay, 获取支付金额失败 - ' . $spbe6c16); throw new \Exception('获取支付请求id失败'); } $spf61c2b = Request::post('https://o2.qfpay.com/q/payment', 'txamt=' . $sp521b2c . '&openid=&appid=&huid=' . $sp45b2a0['id'] . '&opuid=&reqid=' . $spa58aaa . '&balance=0&currency=' . $spe60820, $spde6bcb, $sp21afdb); $spcc4042 = json_decode($spf61c2b, true); $sp40f75d = static::strBetween($spf61c2b, 'syssn":"', '"'); if (!$spcc4042 || $sp40f75d == '') { Log::error('qfpay pay, 生成支付单号失败#1 - ' . $spf61c2b); throw new \Exception('生成支付单号失败#1'); } if ($spcc4042['respcd'] !== '0000') { if (isset($spcc4042['respmsg']) && $spcc4042['respmsg'] !== '') { throw new \Exception($spcc4042['respmsg']); } Log::error('qfpay pay, 生成支付单号失败#2 - ' . $spf61c2b); throw new \Exception('生成支付单号失败#2'); } \App\Order::whereOrderNo($spd184e1)->update(array('pay_trade_no' => $sp40f75d)); header('location: /qrcode/pay/' . $spd184e1 . '/qf_' . $spa27512 . '?url=' . urlencode(json_encode($spcc4042['data']['pay_params']))); } function verify($sp45b2a0, $spf85c0e) { $spc9222b = \App\Order::whereOrderNo($sp45b2a0['out_trade_no'])->firstOrFail(); $sp40f75d = $spc9222b->pay_trade_no; $spa800ec = Request::get('https://marketing.qfpay.com/v1/mkw/activity?syssn=' . $sp40f75d); $spde17ab = json_decode($spa800ec, true); if (!$spa800ec) { throw new \Exception('query error'); } if (!isset($spde17ab['respcd'])) { Log::error('qfpay query, 获取支付结果失败 - ' . $spa800ec); throw new \Exception('获取支付结果失败'); } if ($spde17ab['respcd'] !== '0000') { return false; } $sp3fea21 = (int) static::strBetween($spa800ec, 'trade_amt":', ','); if ($sp3fea21 === 0) { $sp3fea21 = (int) static::strBetween($spa800ec, 'txamt":', ','); if ($sp3fea21 === 0) { Log::error('qfpay query, 获取支付金额失败 - ' . $spa800ec); throw new \Exception('获取支付金额失败'); } } if ($spde17ab['respcd'] === '0000') { $spf85c0e($sp45b2a0['out_trade_no'], $sp3fea21, $sp40f75d); return true; } return false; } public static function strBetween($spfcf742, $sp2dee69, $spc9b8a8) { $spb61e63 = stripos($spfcf742, $sp2dee69); if ($spb61e63 === false) { return ''; } $spa28440 = stripos($spfcf742, $spc9b8a8, $spb61e63 + strlen($sp2dee69)); if ($spa28440 === false || $spb61e63 >= $spa28440) { return ''; } $spdb1861 = strlen($sp2dee69); $spec9b7c = substr($spfcf742, $spb61e63 + $spdb1861, $spa28440 - $spb61e63 - $spdb1861); return $spec9b7c; } }