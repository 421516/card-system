<?php
namespace App\Library\Pay\WeChat; require_once __DIR__ . '/lib/WxPay.Api.php'; require_once __DIR__ . '/lib/WxPay.Notify.php'; require_once 'wxLog.php'; class PayNotifyCallBack extends \WxPayNotify { private $successCallback = null; public function __construct($spae1cf8) { $this->successCallback = $spae1cf8; } public function QueryOrder($sp41da3e) { $sp02dbf9 = new \WxPayOrderQuery(); $sp02dbf9->SetTransaction_id($sp41da3e); $spc4a98e = \WxPayApi::orderQuery($sp02dbf9); \WxLog::DEBUG('query:' . json_encode($spc4a98e)); if (array_key_exists('return_code', $spc4a98e) && array_key_exists('result_code', $spc4a98e) && $spc4a98e['return_code'] == 'SUCCESS' && $spc4a98e['result_code'] == 'SUCCESS') { return true; } return false; } public function NotifyProcess($sp151100, &$sp55c6db) { \WxLog::DEBUG('call back:' . json_encode($sp151100)); if (!array_key_exists('transaction_id', $sp151100)) { $sp55c6db = '输入参数不正确'; \WxLog::DEBUG('begin process 输入参数不正确'); return false; } if (!$this->QueryOrder($sp151100['transaction_id'])) { $sp55c6db = '订单查询失败'; \WxLog::DEBUG('begin process 订单查询失败'); return false; } if ($this->successCallback) { call_user_func_array($this->successCallback, array($sp151100['out_trade_no'], $sp151100['total_fee'], $sp151100['transaction_id'])); } return true; } }