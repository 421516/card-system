<?php
ini_set('date.timezone', 'Asia/Shanghai'); error_reporting(E_ERROR); require_once '../lib/WxPay.Api.php'; require_once '../lib/WxPay.Notify.php'; require_once 'log.php'; $spa904b1 = new CLogFileHandler('../logs/' . date('Y-m-d') . '.log'); $sp01b52a = Log::Init($spa904b1, 15); class NativeNotifyCallBack extends WxPayNotify { public function unifiedorder($spa2d182, $spd09702) { $sp106469 = new WxPayUnifiedOrder(); $sp106469->SetBody('test'); $sp106469->SetAttach('test'); $sp106469->SetOut_trade_no(WxPayConfig::MCHID . date('YmdHis')); $sp106469->SetTotal_fee('1'); $sp106469->SetTime_start(date('YmdHis')); $sp106469->SetTime_expire(date('YmdHis', time() + 600)); $sp106469->SetGoods_tag('test'); $sp106469->SetNotify_url('http://paysdk.weixin.qq.com/example/notify.php'); $sp106469->SetTrade_type('NATIVE'); $sp106469->SetOpenid($spa2d182); $sp106469->SetProduct_id($spd09702); $sp836ce6 = WxPayApi::unifiedOrder($sp106469); Log::DEBUG('unifiedorder:' . json_encode($sp836ce6)); return $sp836ce6; } public function NotifyProcess($sp94131d, &$spcb569a) { Log::DEBUG('call back:' . json_encode($sp94131d)); if (!array_key_exists('openid', $sp94131d) || !array_key_exists('product_id', $sp94131d)) { $spcb569a = '回调数据异常'; return false; } $spd321f1 = $sp94131d['openid']; $spd09702 = $sp94131d['product_id']; $sp836ce6 = $this->unifiedorder($spd321f1, $spd09702); if (!array_key_exists('appid', $sp836ce6) || !array_key_exists('mch_id', $sp836ce6) || !array_key_exists('prepay_id', $sp836ce6)) { $spcb569a = '统一下单失败'; return false; } $this->SetData('appid', $sp836ce6['appid']); $this->SetData('mch_id', $sp836ce6['mch_id']); $this->SetData('nonce_str', WxPayApi::getNonceStr()); $this->SetData('prepay_id', $sp836ce6['prepay_id']); $this->SetData('result_code', 'SUCCESS'); $this->SetData('err_code_des', 'OK'); return true; } } Log::DEBUG('begin notify!'); $spf1ec9c = new NativeNotifyCallBack(); $spf1ec9c->Handle(true);