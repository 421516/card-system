<?php
ini_set('date.timezone', 'Asia/Shanghai'); error_reporting(E_ERROR); require_once '../lib/WxPay.Api.php'; require_once '../lib/WxPay.Notify.php'; require_once 'log.php'; $sp0d13f3 = new CLogFileHandler('../logs/' . date('Y-m-d') . '.log'); $sp1ac1a0 = Log::Init($sp0d13f3, 15); class NativeNotifyCallBack extends WxPayNotify { public function unifiedorder($sp528e61, $spedd229) { $sp51043b = new WxPayUnifiedOrder(); $sp51043b->SetBody('test'); $sp51043b->SetAttach('test'); $sp51043b->SetOut_trade_no(WxPayConfig::MCHID . date('YmdHis')); $sp51043b->SetTotal_fee('1'); $sp51043b->SetTime_start(date('YmdHis')); $sp51043b->SetTime_expire(date('YmdHis', time() + 600)); $sp51043b->SetGoods_tag('test'); $sp51043b->SetNotify_url('http://paysdk.weixin.qq.com/example/notify.php'); $sp51043b->SetTrade_type('NATIVE'); $sp51043b->SetOpenid($sp528e61); $sp51043b->SetProduct_id($spedd229); $spbcb528 = WxPayApi::unifiedOrder($sp51043b); Log::DEBUG('unifiedorder:' . json_encode($spbcb528)); return $spbcb528; } public function NotifyProcess($sp1835de, &$spbfa8f4) { Log::DEBUG('call back:' . json_encode($sp1835de)); if (!array_key_exists('openid', $sp1835de) || !array_key_exists('product_id', $sp1835de)) { $spbfa8f4 = '回调数据异常'; return false; } $spd2f669 = $sp1835de['openid']; $spedd229 = $sp1835de['product_id']; $spbcb528 = $this->unifiedorder($spd2f669, $spedd229); if (!array_key_exists('appid', $spbcb528) || !array_key_exists('mch_id', $spbcb528) || !array_key_exists('prepay_id', $spbcb528)) { $spbfa8f4 = '统一下单失败'; return false; } $this->SetData('appid', $spbcb528['appid']); $this->SetData('mch_id', $spbcb528['mch_id']); $this->SetData('nonce_str', WxPayApi::getNonceStr()); $this->SetData('prepay_id', $spbcb528['prepay_id']); $this->SetData('result_code', 'SUCCESS'); $this->SetData('err_code_des', 'OK'); return true; } } Log::DEBUG('begin notify!'); $sp8ada1b = new NativeNotifyCallBack(); $sp8ada1b->Handle(true);