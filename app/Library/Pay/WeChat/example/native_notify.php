<?php
ini_set('date.timezone', 'Asia/Shanghai'); error_reporting(E_ERROR); require_once '../lib/WxPay.Api.php'; require_once '../lib/WxPay.Notify.php'; require_once 'log.php'; $sp980d2a = new CLogFileHandler('../logs/' . date('Y-m-d') . '.log'); $spa1e99a = Log::Init($sp980d2a, 15); class NativeNotifyCallBack extends WxPayNotify { public function unifiedorder($spf35e3f, $spfafc60) { $sp02dbf9 = new WxPayUnifiedOrder(); $sp02dbf9->SetBody('test'); $sp02dbf9->SetAttach('test'); $sp02dbf9->SetOut_trade_no(WxPayConfig::MCHID . date('YmdHis')); $sp02dbf9->SetTotal_fee('1'); $sp02dbf9->SetTime_start(date('YmdHis')); $sp02dbf9->SetTime_expire(date('YmdHis', time() + 600)); $sp02dbf9->SetGoods_tag('test'); $sp02dbf9->SetNotify_url('http://paysdk.weixin.qq.com/example/notify.php'); $sp02dbf9->SetTrade_type('NATIVE'); $sp02dbf9->SetOpenid($spf35e3f); $sp02dbf9->SetProduct_id($spfafc60); $spc4a98e = WxPayApi::unifiedOrder($sp02dbf9); Log::DEBUG('unifiedorder:' . json_encode($spc4a98e)); return $spc4a98e; } public function NotifyProcess($sp151100, &$sp55c6db) { Log::DEBUG('call back:' . json_encode($sp151100)); if (!array_key_exists('openid', $sp151100) || !array_key_exists('product_id', $sp151100)) { $sp55c6db = '回调数据异常'; return false; } $sp26d38e = $sp151100['openid']; $spfafc60 = $sp151100['product_id']; $spc4a98e = $this->unifiedorder($sp26d38e, $spfafc60); if (!array_key_exists('appid', $spc4a98e) || !array_key_exists('mch_id', $spc4a98e) || !array_key_exists('prepay_id', $spc4a98e)) { $sp55c6db = '统一下单失败'; return false; } $this->SetData('appid', $spc4a98e['appid']); $this->SetData('mch_id', $spc4a98e['mch_id']); $this->SetData('nonce_str', WxPayApi::getNonceStr()); $this->SetData('prepay_id', $spc4a98e['prepay_id']); $this->SetData('result_code', 'SUCCESS'); $this->SetData('err_code_des', 'OK'); return true; } } Log::DEBUG('begin notify!'); $sp572401 = new NativeNotifyCallBack(); $sp572401->Handle(true);