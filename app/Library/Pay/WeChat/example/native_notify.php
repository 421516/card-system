<?php
ini_set('date.timezone', 'Asia/Shanghai'); error_reporting(E_ERROR); require_once '../lib/WxPay.Api.php'; require_once '../lib/WxPay.Notify.php'; require_once 'log.php'; $sp96c2fa = new CLogFileHandler('../logs/' . date('Y-m-d') . '.log'); $spa973ce = Log::Init($sp96c2fa, 15); class NativeNotifyCallBack extends WxPayNotify { public function unifiedorder($spbb4599, $sp3c4c73) { $sp11f4cb = new WxPayUnifiedOrder(); $sp11f4cb->SetBody('test'); $sp11f4cb->SetAttach('test'); $sp11f4cb->SetOut_trade_no(WxPayConfig::MCHID . date('YmdHis')); $sp11f4cb->SetTotal_fee('1'); $sp11f4cb->SetTime_start(date('YmdHis')); $sp11f4cb->SetTime_expire(date('YmdHis', time() + 600)); $sp11f4cb->SetGoods_tag('test'); $sp11f4cb->SetNotify_url('http://paysdk.weixin.qq.com/example/notify.php'); $sp11f4cb->SetTrade_type('NATIVE'); $sp11f4cb->SetOpenid($spbb4599); $sp11f4cb->SetProduct_id($sp3c4c73); $spcc4042 = WxPayApi::unifiedOrder($sp11f4cb); Log::DEBUG('unifiedorder:' . json_encode($spcc4042)); return $spcc4042; } public function NotifyProcess($sp38c5ae, &$sp3792af) { Log::DEBUG('call back:' . json_encode($sp38c5ae)); if (!array_key_exists('openid', $sp38c5ae) || !array_key_exists('product_id', $sp38c5ae)) { $sp3792af = '回调数据异常'; return false; } $spb80186 = $sp38c5ae['openid']; $sp3c4c73 = $sp38c5ae['product_id']; $spcc4042 = $this->unifiedorder($spb80186, $sp3c4c73); if (!array_key_exists('appid', $spcc4042) || !array_key_exists('mch_id', $spcc4042) || !array_key_exists('prepay_id', $spcc4042)) { $sp3792af = '统一下单失败'; return false; } $this->SetData('appid', $spcc4042['appid']); $this->SetData('mch_id', $spcc4042['mch_id']); $this->SetData('nonce_str', WxPayApi::getNonceStr()); $this->SetData('prepay_id', $spcc4042['prepay_id']); $this->SetData('result_code', 'SUCCESS'); $this->SetData('err_code_des', 'OK'); return true; } } Log::DEBUG('begin notify!'); $spe754f9 = new NativeNotifyCallBack(); $spe754f9->Handle(true);