<?php
require_once 'WxPay.Exception.php'; require_once 'WxPay.Config.php'; require_once 'WxPay.Data.php'; class WxPayApi { public static function unifiedOrder($sp9de0ce, $sp42fa47 = 6) { $sp11a0e0 = 'https://api.mch.weixin.qq.com/pay/unifiedorder'; if (!$sp9de0ce->IsOut_trade_noSet()) { throw new WxPayException('缺少统一支付接口必填参数out_trade_no！'); } else { if (!$sp9de0ce->IsBodySet()) { throw new WxPayException('缺少统一支付接口必填参数body！'); } else { if (!$sp9de0ce->IsTotal_feeSet()) { throw new WxPayException('缺少统一支付接口必填参数total_fee！'); } else { if (!$sp9de0ce->IsTrade_typeSet()) { throw new WxPayException('缺少统一支付接口必填参数trade_type！'); } } } } if ($sp9de0ce->GetTrade_type() == 'JSAPI' && !$sp9de0ce->IsOpenidSet()) { throw new WxPayException('统一支付接口中，缺少必填参数openid！trade_type为JSAPI时，openid为必填参数！'); } if ($sp9de0ce->GetTrade_type() == 'NATIVE' && !$sp9de0ce->IsProduct_idSet()) { throw new WxPayException('统一支付接口中，缺少必填参数product_id！trade_type为JSAPI时，product_id为必填参数！'); } if (!$sp9de0ce->IsNotify_urlSet()) { $sp9de0ce->SetNotify_url(WxPayConfig::NOTIFY_URL); } $sp9de0ce->SetAppid(WxPayConfig::APPID); $sp9de0ce->SetMch_id(WxPayConfig::MCHID); $sp9de0ce->SetNonce_str(self::getNonceStr()); $sp9de0ce->SetSign(); $sp2b62c7 = $sp9de0ce->ToXml(); $sp9061d0 = self::getMillisecond(); $sp0e2174 = self::postXmlCurl($sp2b62c7, $sp11a0e0, false, $sp42fa47); $sp9610ab = WxPayResults::Init($sp0e2174); self::reportCostTime($sp11a0e0, $sp9061d0, $sp9610ab); return $sp9610ab; } public static function orderQuery($sp9de0ce, $sp42fa47 = 6) { $sp11a0e0 = 'https://api.mch.weixin.qq.com/pay/orderquery'; if (!$sp9de0ce->IsOut_trade_noSet() && !$sp9de0ce->IsTransaction_idSet()) { throw new WxPayException('订单查询接口中，out_trade_no、transaction_id至少填一个！'); } $sp9de0ce->SetAppid(WxPayConfig::APPID); $sp9de0ce->SetMch_id(WxPayConfig::MCHID); $sp9de0ce->SetNonce_str(self::getNonceStr()); $sp9de0ce->SetSign(); $sp2b62c7 = $sp9de0ce->ToXml(); $sp9061d0 = self::getMillisecond(); $sp0e2174 = self::postXmlCurl($sp2b62c7, $sp11a0e0, false, $sp42fa47); $sp9610ab = WxPayResults::Init($sp0e2174); self::reportCostTime($sp11a0e0, $sp9061d0, $sp9610ab); return $sp9610ab; } public static function closeOrder($sp9de0ce, $sp42fa47 = 6) { $sp11a0e0 = 'https://api.mch.weixin.qq.com/pay/closeorder'; if (!$sp9de0ce->IsOut_trade_noSet()) { throw new WxPayException('订单查询接口中，out_trade_no必填！'); } $sp9de0ce->SetAppid(WxPayConfig::APPID); $sp9de0ce->SetMch_id(WxPayConfig::MCHID); $sp9de0ce->SetNonce_str(self::getNonceStr()); $sp9de0ce->SetSign(); $sp2b62c7 = $sp9de0ce->ToXml(); $sp9061d0 = self::getMillisecond(); $sp0e2174 = self::postXmlCurl($sp2b62c7, $sp11a0e0, false, $sp42fa47); $sp9610ab = WxPayResults::Init($sp0e2174); self::reportCostTime($sp11a0e0, $sp9061d0, $sp9610ab); return $sp9610ab; } public static function refund($sp9de0ce, $sp42fa47 = 6) { $sp11a0e0 = 'https://api.mch.weixin.qq.com/secapi/pay/refund'; if (!$sp9de0ce->IsOut_trade_noSet() && !$sp9de0ce->IsTransaction_idSet()) { throw new WxPayException('退款申请接口中，out_trade_no、transaction_id至少填一个！'); } else { if (!$sp9de0ce->IsOut_refund_noSet()) { throw new WxPayException('退款申请接口中，缺少必填参数out_refund_no！'); } else { if (!$sp9de0ce->IsTotal_feeSet()) { throw new WxPayException('退款申请接口中，缺少必填参数total_fee！'); } else { if (!$sp9de0ce->IsRefund_feeSet()) { throw new WxPayException('退款申请接口中，缺少必填参数refund_fee！'); } else { if (!$sp9de0ce->IsOp_user_idSet()) { throw new WxPayException('退款申请接口中，缺少必填参数op_user_id！'); } } } } } $sp9de0ce->SetAppid(WxPayConfig::APPID); $sp9de0ce->SetMch_id(WxPayConfig::MCHID); $sp9de0ce->SetNonce_str(self::getNonceStr()); $sp9de0ce->SetSign(); $sp2b62c7 = $sp9de0ce->ToXml(); $sp9061d0 = self::getMillisecond(); $sp0e2174 = self::postXmlCurl($sp2b62c7, $sp11a0e0, true, $sp42fa47); $sp9610ab = WxPayResults::Init($sp0e2174); self::reportCostTime($sp11a0e0, $sp9061d0, $sp9610ab); return $sp9610ab; } public static function refundQuery($sp9de0ce, $sp42fa47 = 6) { $sp11a0e0 = 'https://api.mch.weixin.qq.com/pay/refundquery'; if (!$sp9de0ce->IsOut_refund_noSet() && !$sp9de0ce->IsOut_trade_noSet() && !$sp9de0ce->IsTransaction_idSet() && !$sp9de0ce->IsRefund_idSet()) { throw new WxPayException('退款查询接口中，out_refund_no、out_trade_no、transaction_id、refund_id四个参数必填一个！'); } $sp9de0ce->SetAppid(WxPayConfig::APPID); $sp9de0ce->SetMch_id(WxPayConfig::MCHID); $sp9de0ce->SetNonce_str(self::getNonceStr()); $sp9de0ce->SetSign(); $sp2b62c7 = $sp9de0ce->ToXml(); $sp9061d0 = self::getMillisecond(); $sp0e2174 = self::postXmlCurl($sp2b62c7, $sp11a0e0, false, $sp42fa47); $sp9610ab = WxPayResults::Init($sp0e2174); self::reportCostTime($sp11a0e0, $sp9061d0, $sp9610ab); return $sp9610ab; } public static function downloadBill($sp9de0ce, $sp42fa47 = 6) { $sp11a0e0 = 'https://api.mch.weixin.qq.com/pay/downloadbill'; if (!$sp9de0ce->IsBill_dateSet()) { throw new WxPayException('对账单接口中，缺少必填参数bill_date！'); } $sp9de0ce->SetAppid(WxPayConfig::APPID); $sp9de0ce->SetMch_id(WxPayConfig::MCHID); $sp9de0ce->SetNonce_str(self::getNonceStr()); $sp9de0ce->SetSign(); $sp2b62c7 = $sp9de0ce->ToXml(); $sp0e2174 = self::postXmlCurl($sp2b62c7, $sp11a0e0, false, $sp42fa47); if (substr($sp0e2174, 0, 5) == '<xml>') { return ''; } return $sp0e2174; } public static function micropay($sp9de0ce, $sp42fa47 = 10) { $sp11a0e0 = 'https://api.mch.weixin.qq.com/pay/micropay'; if (!$sp9de0ce->IsBodySet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数body！'); } else { if (!$sp9de0ce->IsOut_trade_noSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数out_trade_no！'); } else { if (!$sp9de0ce->IsTotal_feeSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数total_fee！'); } else { if (!$sp9de0ce->IsAuth_codeSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数auth_code！'); } } } } $sp9de0ce->SetSpbill_create_ip($_SERVER['REMOTE_ADDR']); $sp9de0ce->SetAppid(WxPayConfig::APPID); $sp9de0ce->SetMch_id(WxPayConfig::MCHID); $sp9de0ce->SetNonce_str(self::getNonceStr()); $sp9de0ce->SetSign(); $sp2b62c7 = $sp9de0ce->ToXml(); $sp9061d0 = self::getMillisecond(); $sp0e2174 = self::postXmlCurl($sp2b62c7, $sp11a0e0, false, $sp42fa47); $sp9610ab = WxPayResults::Init($sp0e2174); self::reportCostTime($sp11a0e0, $sp9061d0, $sp9610ab); return $sp9610ab; } public static function reverse($sp9de0ce, $sp42fa47 = 6) { $sp11a0e0 = 'https://api.mch.weixin.qq.com/secapi/pay/reverse'; if (!$sp9de0ce->IsOut_trade_noSet() && !$sp9de0ce->IsTransaction_idSet()) { throw new WxPayException('撤销订单API接口中，参数out_trade_no和transaction_id必须填写一个！'); } $sp9de0ce->SetAppid(WxPayConfig::APPID); $sp9de0ce->SetMch_id(WxPayConfig::MCHID); $sp9de0ce->SetNonce_str(self::getNonceStr()); $sp9de0ce->SetSign(); $sp2b62c7 = $sp9de0ce->ToXml(); $sp9061d0 = self::getMillisecond(); $sp0e2174 = self::postXmlCurl($sp2b62c7, $sp11a0e0, true, $sp42fa47); $sp9610ab = WxPayResults::Init($sp0e2174); self::reportCostTime($sp11a0e0, $sp9061d0, $sp9610ab); return $sp9610ab; } public static function report($sp9de0ce, $sp42fa47 = 1) { $sp11a0e0 = 'https://api.mch.weixin.qq.com/payitil/report'; if (!$sp9de0ce->IsInterface_urlSet()) { throw new WxPayException('接口URL，缺少必填参数interface_url！'); } if (!$sp9de0ce->IsReturn_codeSet()) { throw new WxPayException('返回状态码，缺少必填参数return_code！'); } if (!$sp9de0ce->IsResult_codeSet()) { throw new WxPayException('业务结果，缺少必填参数result_code！'); } if (!$sp9de0ce->IsUser_ipSet()) { throw new WxPayException('访问接口IP，缺少必填参数user_ip！'); } if (!$sp9de0ce->IsExecute_time_Set()) { throw new WxPayException('接口耗时，缺少必填参数execute_time_！'); } $sp9de0ce->SetAppid(WxPayConfig::APPID); $sp9de0ce->SetMch_id(WxPayConfig::MCHID); $sp9de0ce->SetUser_ip($_SERVER['REMOTE_ADDR']); $sp9de0ce->SetTime(date('YmdHis')); $sp9de0ce->SetNonce_str(self::getNonceStr()); $sp9de0ce->SetSign(); $sp2b62c7 = $sp9de0ce->ToXml(); $sp9061d0 = self::getMillisecond(); $sp0e2174 = self::postXmlCurl($sp2b62c7, $sp11a0e0, false, $sp42fa47); return $sp0e2174; } public static function bizpayurl($sp9de0ce, $sp42fa47 = 6) { if (!$sp9de0ce->IsProduct_idSet()) { throw new WxPayException('生成二维码，缺少必填参数product_id！'); } $sp9de0ce->SetAppid(WxPayConfig::APPID); $sp9de0ce->SetMch_id(WxPayConfig::MCHID); $sp9de0ce->SetTime_stamp(time()); $sp9de0ce->SetNonce_str(self::getNonceStr()); $sp9de0ce->SetSign(); return $sp9de0ce->GetValues(); } public static function shorturl($sp9de0ce, $sp42fa47 = 6) { $sp11a0e0 = 'https://api.mch.weixin.qq.com/tools/shorturl'; if (!$sp9de0ce->IsLong_urlSet()) { throw new WxPayException('需要转换的URL，签名用原串，传输需URL encode！'); } $sp9de0ce->SetAppid(WxPayConfig::APPID); $sp9de0ce->SetMch_id(WxPayConfig::MCHID); $sp9de0ce->SetNonce_str(self::getNonceStr()); $sp9de0ce->SetSign(); $sp2b62c7 = $sp9de0ce->ToXml(); $sp9061d0 = self::getMillisecond(); $sp0e2174 = self::postXmlCurl($sp2b62c7, $sp11a0e0, false, $sp42fa47); $sp9610ab = WxPayResults::Init($sp0e2174); self::reportCostTime($sp11a0e0, $sp9061d0, $sp9610ab); return $sp9610ab; } public static function notify($sp24747e, &$spdfd2b6) { $sp2b62c7 = file_get_contents('php://input'); try { $sp9610ab = WxPayResults::Init($sp2b62c7); } catch (WxPayException $sp1b3a33) { $spdfd2b6 = $sp1b3a33->errorMessage(); return false; } return call_user_func($sp24747e, $sp9610ab); } public static function getNonceStr($spc66ffb = 32) { $sp894b9d = 'abcdefghijklmnopqrstuvwxyz0123456789'; $spc940b6 = ''; for ($sp747316 = 0; $sp747316 < $spc66ffb; $sp747316++) { $spc940b6 .= substr($sp894b9d, mt_rand(0, strlen($sp894b9d) - 1), 1); } return $spc940b6; } public static function replyNotify($sp2b62c7) { echo $sp2b62c7; } private static function reportCostTime($sp11a0e0, $sp9061d0, $sp29e0c7) { if (WxPayConfig::REPORT_LEVENL == 0) { return; } if (WxPayConfig::REPORT_LEVENL == 1 && array_key_exists('return_code', $sp29e0c7) && $sp29e0c7['return_code'] == 'SUCCESS' && array_key_exists('result_code', $sp29e0c7) && $sp29e0c7['result_code'] == 'SUCCESS') { return; } $sp8c5c3b = self::getMillisecond(); $spcc334b = new WxPayReport(); $spcc334b->SetInterface_url($sp11a0e0); $spcc334b->SetExecute_time_($sp8c5c3b - $sp9061d0); if (array_key_exists('return_code', $sp29e0c7)) { $spcc334b->SetReturn_code($sp29e0c7['return_code']); } if (array_key_exists('return_msg', $sp29e0c7)) { $spcc334b->SetReturn_msg($sp29e0c7['return_msg']); } if (array_key_exists('result_code', $sp29e0c7)) { $spcc334b->SetResult_code($sp29e0c7['result_code']); } if (array_key_exists('err_code', $sp29e0c7)) { $spcc334b->SetErr_code($sp29e0c7['err_code']); } if (array_key_exists('err_code_des', $sp29e0c7)) { $spcc334b->SetErr_code_des($sp29e0c7['err_code_des']); } if (array_key_exists('out_trade_no', $sp29e0c7)) { $spcc334b->SetOut_trade_no($sp29e0c7['out_trade_no']); } if (array_key_exists('device_info', $sp29e0c7)) { $spcc334b->SetDevice_info($sp29e0c7['device_info']); } try { self::report($spcc334b); } catch (WxPayException $sp1b3a33) { } } private static function postXmlCurl($sp2b62c7, $sp11a0e0, $sp6633ec = false, $sp315627 = 30) { $sp082589 = curl_init(); curl_setopt($sp082589, CURLOPT_TIMEOUT, $sp315627); if (WxPayConfig::CURL_PROXY_HOST != '0.0.0.0' && WxPayConfig::CURL_PROXY_PORT != 0) { curl_setopt($sp082589, CURLOPT_PROXY, WxPayConfig::CURL_PROXY_HOST); curl_setopt($sp082589, CURLOPT_PROXYPORT, WxPayConfig::CURL_PROXY_PORT); } curl_setopt($sp082589, CURLOPT_URL, $sp11a0e0); curl_setopt($sp082589, CURLOPT_SSL_VERIFYPEER, TRUE); curl_setopt($sp082589, CURLOPT_SSL_VERIFYHOST, 2); curl_setopt($sp082589, CURLOPT_HEADER, FALSE); curl_setopt($sp082589, CURLOPT_RETURNTRANSFER, TRUE); if ($sp6633ec == true) { curl_setopt($sp082589, CURLOPT_SSLCERTTYPE, 'PEM'); curl_setopt($sp082589, CURLOPT_SSLCERT, WxPayConfig::SSLCERT_PATH); curl_setopt($sp082589, CURLOPT_SSLKEYTYPE, 'PEM'); curl_setopt($sp082589, CURLOPT_SSLKEY, WxPayConfig::SSLKEY_PATH); } else { curl_setopt($sp082589, CURLOPT_SSL_VERIFYPEER, false); } curl_setopt($sp082589, CURLOPT_POST, TRUE); curl_setopt($sp082589, CURLOPT_POSTFIELDS, $sp2b62c7); $sp29e0c7 = curl_exec($sp082589); if ($sp29e0c7) { curl_close($sp082589); return $sp29e0c7; } else { $sp4b2142 = curl_errno($sp082589); \WxLog::error('WxPat.Api.postXmlCurl Error: ' . curl_error($sp082589)); curl_close($sp082589); throw new WxPayException("curl出错，错误码: {$sp4b2142}"); } } private static function getMillisecond() { $spd97c80 = explode(' ', microtime()); $spd97c80 = $spd97c80[1] . $spd97c80[0] * 1000; $sp1a5e67 = explode('.', $spd97c80); $spd97c80 = $sp1a5e67[0]; return $spd97c80; } }