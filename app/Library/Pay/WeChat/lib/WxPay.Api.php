<?php
require_once 'WxPay.Exception.php'; require_once 'WxPay.Config.php'; require_once 'WxPay.Data.php'; class WxPayApi { public static function unifiedOrder($sp609f98, $spe0e6ce = 6) { $sp833b34 = 'https://api.mch.weixin.qq.com/pay/unifiedorder'; if (!$sp609f98->IsOut_trade_noSet()) { throw new WxPayException('缺少统一支付接口必填参数out_trade_no！'); } else { if (!$sp609f98->IsBodySet()) { throw new WxPayException('缺少统一支付接口必填参数body！'); } else { if (!$sp609f98->IsTotal_feeSet()) { throw new WxPayException('缺少统一支付接口必填参数total_fee！'); } else { if (!$sp609f98->IsTrade_typeSet()) { throw new WxPayException('缺少统一支付接口必填参数trade_type！'); } } } } if ($sp609f98->GetTrade_type() == 'JSAPI' && !$sp609f98->IsOpenidSet()) { throw new WxPayException('统一支付接口中，缺少必填参数openid！trade_type为JSAPI时，openid为必填参数！'); } if ($sp609f98->GetTrade_type() == 'NATIVE' && !$sp609f98->IsProduct_idSet()) { throw new WxPayException('统一支付接口中，缺少必填参数product_id！trade_type为JSAPI时，product_id为必填参数！'); } if (!$sp609f98->IsNotify_urlSet()) { $sp609f98->SetNotify_url(WxPayConfig::NOTIFY_URL); } $sp609f98->SetAppid(WxPayConfig::APPID); $sp609f98->SetMch_id(WxPayConfig::MCHID); $sp609f98->SetNonce_str(self::getNonceStr()); $sp609f98->SetSign(); $sp01b3bc = $sp609f98->ToXml(); $spbd1fcc = self::getMillisecond(); $spfd13d8 = self::postXmlCurl($sp01b3bc, $sp833b34, false, $spe0e6ce); $sp836ce6 = WxPayResults::Init($spfd13d8); self::reportCostTime($sp833b34, $spbd1fcc, $sp836ce6); return $sp836ce6; } public static function orderQuery($sp609f98, $spe0e6ce = 6) { $sp833b34 = 'https://api.mch.weixin.qq.com/pay/orderquery'; if (!$sp609f98->IsOut_trade_noSet() && !$sp609f98->IsTransaction_idSet()) { throw new WxPayException('订单查询接口中，out_trade_no、transaction_id至少填一个！'); } $sp609f98->SetAppid(WxPayConfig::APPID); $sp609f98->SetMch_id(WxPayConfig::MCHID); $sp609f98->SetNonce_str(self::getNonceStr()); $sp609f98->SetSign(); $sp01b3bc = $sp609f98->ToXml(); $spbd1fcc = self::getMillisecond(); $spfd13d8 = self::postXmlCurl($sp01b3bc, $sp833b34, false, $spe0e6ce); $sp836ce6 = WxPayResults::Init($spfd13d8); self::reportCostTime($sp833b34, $spbd1fcc, $sp836ce6); return $sp836ce6; } public static function closeOrder($sp609f98, $spe0e6ce = 6) { $sp833b34 = 'https://api.mch.weixin.qq.com/pay/closeorder'; if (!$sp609f98->IsOut_trade_noSet()) { throw new WxPayException('订单查询接口中，out_trade_no必填！'); } $sp609f98->SetAppid(WxPayConfig::APPID); $sp609f98->SetMch_id(WxPayConfig::MCHID); $sp609f98->SetNonce_str(self::getNonceStr()); $sp609f98->SetSign(); $sp01b3bc = $sp609f98->ToXml(); $spbd1fcc = self::getMillisecond(); $spfd13d8 = self::postXmlCurl($sp01b3bc, $sp833b34, false, $spe0e6ce); $sp836ce6 = WxPayResults::Init($spfd13d8); self::reportCostTime($sp833b34, $spbd1fcc, $sp836ce6); return $sp836ce6; } public static function refund($sp609f98, $spe0e6ce = 6) { $sp833b34 = 'https://api.mch.weixin.qq.com/secapi/pay/refund'; if (!$sp609f98->IsOut_trade_noSet() && !$sp609f98->IsTransaction_idSet()) { throw new WxPayException('退款申请接口中，out_trade_no、transaction_id至少填一个！'); } else { if (!$sp609f98->IsOut_refund_noSet()) { throw new WxPayException('退款申请接口中，缺少必填参数out_refund_no！'); } else { if (!$sp609f98->IsTotal_feeSet()) { throw new WxPayException('退款申请接口中，缺少必填参数total_fee！'); } else { if (!$sp609f98->IsRefund_feeSet()) { throw new WxPayException('退款申请接口中，缺少必填参数refund_fee！'); } else { if (!$sp609f98->IsOp_user_idSet()) { throw new WxPayException('退款申请接口中，缺少必填参数op_user_id！'); } } } } } $sp609f98->SetAppid(WxPayConfig::APPID); $sp609f98->SetMch_id(WxPayConfig::MCHID); $sp609f98->SetNonce_str(self::getNonceStr()); $sp609f98->SetSign(); $sp01b3bc = $sp609f98->ToXml(); $spbd1fcc = self::getMillisecond(); $spfd13d8 = self::postXmlCurl($sp01b3bc, $sp833b34, true, $spe0e6ce); $sp836ce6 = WxPayResults::Init($spfd13d8); self::reportCostTime($sp833b34, $spbd1fcc, $sp836ce6); return $sp836ce6; } public static function refundQuery($sp609f98, $spe0e6ce = 6) { $sp833b34 = 'https://api.mch.weixin.qq.com/pay/refundquery'; if (!$sp609f98->IsOut_refund_noSet() && !$sp609f98->IsOut_trade_noSet() && !$sp609f98->IsTransaction_idSet() && !$sp609f98->IsRefund_idSet()) { throw new WxPayException('退款查询接口中，out_refund_no、out_trade_no、transaction_id、refund_id四个参数必填一个！'); } $sp609f98->SetAppid(WxPayConfig::APPID); $sp609f98->SetMch_id(WxPayConfig::MCHID); $sp609f98->SetNonce_str(self::getNonceStr()); $sp609f98->SetSign(); $sp01b3bc = $sp609f98->ToXml(); $spbd1fcc = self::getMillisecond(); $spfd13d8 = self::postXmlCurl($sp01b3bc, $sp833b34, false, $spe0e6ce); $sp836ce6 = WxPayResults::Init($spfd13d8); self::reportCostTime($sp833b34, $spbd1fcc, $sp836ce6); return $sp836ce6; } public static function downloadBill($sp609f98, $spe0e6ce = 6) { $sp833b34 = 'https://api.mch.weixin.qq.com/pay/downloadbill'; if (!$sp609f98->IsBill_dateSet()) { throw new WxPayException('对账单接口中，缺少必填参数bill_date！'); } $sp609f98->SetAppid(WxPayConfig::APPID); $sp609f98->SetMch_id(WxPayConfig::MCHID); $sp609f98->SetNonce_str(self::getNonceStr()); $sp609f98->SetSign(); $sp01b3bc = $sp609f98->ToXml(); $spfd13d8 = self::postXmlCurl($sp01b3bc, $sp833b34, false, $spe0e6ce); if (substr($spfd13d8, 0, 5) == '<xml>') { return ''; } return $spfd13d8; } public static function micropay($sp609f98, $spe0e6ce = 10) { $sp833b34 = 'https://api.mch.weixin.qq.com/pay/micropay'; if (!$sp609f98->IsBodySet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数body！'); } else { if (!$sp609f98->IsOut_trade_noSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数out_trade_no！'); } else { if (!$sp609f98->IsTotal_feeSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数total_fee！'); } else { if (!$sp609f98->IsAuth_codeSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数auth_code！'); } } } } $sp609f98->SetSpbill_create_ip($_SERVER['REMOTE_ADDR']); $sp609f98->SetAppid(WxPayConfig::APPID); $sp609f98->SetMch_id(WxPayConfig::MCHID); $sp609f98->SetNonce_str(self::getNonceStr()); $sp609f98->SetSign(); $sp01b3bc = $sp609f98->ToXml(); $spbd1fcc = self::getMillisecond(); $spfd13d8 = self::postXmlCurl($sp01b3bc, $sp833b34, false, $spe0e6ce); $sp836ce6 = WxPayResults::Init($spfd13d8); self::reportCostTime($sp833b34, $spbd1fcc, $sp836ce6); return $sp836ce6; } public static function reverse($sp609f98, $spe0e6ce = 6) { $sp833b34 = 'https://api.mch.weixin.qq.com/secapi/pay/reverse'; if (!$sp609f98->IsOut_trade_noSet() && !$sp609f98->IsTransaction_idSet()) { throw new WxPayException('撤销订单API接口中，参数out_trade_no和transaction_id必须填写一个！'); } $sp609f98->SetAppid(WxPayConfig::APPID); $sp609f98->SetMch_id(WxPayConfig::MCHID); $sp609f98->SetNonce_str(self::getNonceStr()); $sp609f98->SetSign(); $sp01b3bc = $sp609f98->ToXml(); $spbd1fcc = self::getMillisecond(); $spfd13d8 = self::postXmlCurl($sp01b3bc, $sp833b34, true, $spe0e6ce); $sp836ce6 = WxPayResults::Init($spfd13d8); self::reportCostTime($sp833b34, $spbd1fcc, $sp836ce6); return $sp836ce6; } public static function report($sp609f98, $spe0e6ce = 1) { $sp833b34 = 'https://api.mch.weixin.qq.com/payitil/report'; if (!$sp609f98->IsInterface_urlSet()) { throw new WxPayException('接口URL，缺少必填参数interface_url！'); } if (!$sp609f98->IsReturn_codeSet()) { throw new WxPayException('返回状态码，缺少必填参数return_code！'); } if (!$sp609f98->IsResult_codeSet()) { throw new WxPayException('业务结果，缺少必填参数result_code！'); } if (!$sp609f98->IsUser_ipSet()) { throw new WxPayException('访问接口IP，缺少必填参数user_ip！'); } if (!$sp609f98->IsExecute_time_Set()) { throw new WxPayException('接口耗时，缺少必填参数execute_time_！'); } $sp609f98->SetAppid(WxPayConfig::APPID); $sp609f98->SetMch_id(WxPayConfig::MCHID); $sp609f98->SetUser_ip($_SERVER['REMOTE_ADDR']); $sp609f98->SetTime(date('YmdHis')); $sp609f98->SetNonce_str(self::getNonceStr()); $sp609f98->SetSign(); $sp01b3bc = $sp609f98->ToXml(); $spbd1fcc = self::getMillisecond(); $spfd13d8 = self::postXmlCurl($sp01b3bc, $sp833b34, false, $spe0e6ce); return $spfd13d8; } public static function bizpayurl($sp609f98, $spe0e6ce = 6) { if (!$sp609f98->IsProduct_idSet()) { throw new WxPayException('生成二维码，缺少必填参数product_id！'); } $sp609f98->SetAppid(WxPayConfig::APPID); $sp609f98->SetMch_id(WxPayConfig::MCHID); $sp609f98->SetTime_stamp(time()); $sp609f98->SetNonce_str(self::getNonceStr()); $sp609f98->SetSign(); return $sp609f98->GetValues(); } public static function shorturl($sp609f98, $spe0e6ce = 6) { $sp833b34 = 'https://api.mch.weixin.qq.com/tools/shorturl'; if (!$sp609f98->IsLong_urlSet()) { throw new WxPayException('需要转换的URL，签名用原串，传输需URL encode！'); } $sp609f98->SetAppid(WxPayConfig::APPID); $sp609f98->SetMch_id(WxPayConfig::MCHID); $sp609f98->SetNonce_str(self::getNonceStr()); $sp609f98->SetSign(); $sp01b3bc = $sp609f98->ToXml(); $spbd1fcc = self::getMillisecond(); $spfd13d8 = self::postXmlCurl($sp01b3bc, $sp833b34, false, $spe0e6ce); $sp836ce6 = WxPayResults::Init($spfd13d8); self::reportCostTime($sp833b34, $spbd1fcc, $sp836ce6); return $sp836ce6; } public static function notify($spbf3836, &$spcb569a) { $sp01b3bc = file_get_contents('php://input'); try { $sp836ce6 = WxPayResults::Init($sp01b3bc); } catch (WxPayException $spfda1c7) { $spcb569a = $spfda1c7->errorMessage(); return false; } return call_user_func($spbf3836, $sp836ce6); } public static function getNonceStr($sp6f7e8a = 32) { $sp5e33af = 'abcdefghijklmnopqrstuvwxyz0123456789'; $spf6683b = ''; for ($spcecaa9 = 0; $spcecaa9 < $sp6f7e8a; $spcecaa9++) { $spf6683b .= substr($sp5e33af, mt_rand(0, strlen($sp5e33af) - 1), 1); } return $spf6683b; } public static function replyNotify($sp01b3bc) { echo $sp01b3bc; } private static function reportCostTime($sp833b34, $spbd1fcc, $sp94131d) { if (WxPayConfig::REPORT_LEVENL == 0) { return; } if (WxPayConfig::REPORT_LEVENL == 1 && array_key_exists('return_code', $sp94131d) && $sp94131d['return_code'] == 'SUCCESS' && array_key_exists('result_code', $sp94131d) && $sp94131d['result_code'] == 'SUCCESS') { return; } $spc4d831 = self::getMillisecond(); $sp34d768 = new WxPayReport(); $sp34d768->SetInterface_url($sp833b34); $sp34d768->SetExecute_time_($spc4d831 - $spbd1fcc); if (array_key_exists('return_code', $sp94131d)) { $sp34d768->SetReturn_code($sp94131d['return_code']); } if (array_key_exists('return_msg', $sp94131d)) { $sp34d768->SetReturn_msg($sp94131d['return_msg']); } if (array_key_exists('result_code', $sp94131d)) { $sp34d768->SetResult_code($sp94131d['result_code']); } if (array_key_exists('err_code', $sp94131d)) { $sp34d768->SetErr_code($sp94131d['err_code']); } if (array_key_exists('err_code_des', $sp94131d)) { $sp34d768->SetErr_code_des($sp94131d['err_code_des']); } if (array_key_exists('out_trade_no', $sp94131d)) { $sp34d768->SetOut_trade_no($sp94131d['out_trade_no']); } if (array_key_exists('device_info', $sp94131d)) { $sp34d768->SetDevice_info($sp94131d['device_info']); } try { self::report($sp34d768); } catch (WxPayException $spfda1c7) { } } private static function postXmlCurl($sp01b3bc, $sp833b34, $sp5abbb5 = false, $spb95719 = 30) { $speafaa9 = curl_init(); curl_setopt($speafaa9, CURLOPT_TIMEOUT, $spb95719); if (WxPayConfig::CURL_PROXY_HOST != '0.0.0.0' && WxPayConfig::CURL_PROXY_PORT != 0) { curl_setopt($speafaa9, CURLOPT_PROXY, WxPayConfig::CURL_PROXY_HOST); curl_setopt($speafaa9, CURLOPT_PROXYPORT, WxPayConfig::CURL_PROXY_PORT); } curl_setopt($speafaa9, CURLOPT_URL, $sp833b34); curl_setopt($speafaa9, CURLOPT_SSL_VERIFYPEER, TRUE); curl_setopt($speafaa9, CURLOPT_SSL_VERIFYHOST, 2); curl_setopt($speafaa9, CURLOPT_HEADER, FALSE); curl_setopt($speafaa9, CURLOPT_RETURNTRANSFER, TRUE); if ($sp5abbb5 == true) { curl_setopt($speafaa9, CURLOPT_SSLCERTTYPE, 'PEM'); curl_setopt($speafaa9, CURLOPT_SSLCERT, WxPayConfig::SSLCERT_PATH); curl_setopt($speafaa9, CURLOPT_SSLKEYTYPE, 'PEM'); curl_setopt($speafaa9, CURLOPT_SSLKEY, WxPayConfig::SSLKEY_PATH); } else { curl_setopt($speafaa9, CURLOPT_SSL_VERIFYPEER, false); } curl_setopt($speafaa9, CURLOPT_POST, TRUE); curl_setopt($speafaa9, CURLOPT_POSTFIELDS, $sp01b3bc); $sp94131d = curl_exec($speafaa9); if ($sp94131d) { curl_close($speafaa9); return $sp94131d; } else { $sp11c818 = curl_errno($speafaa9); \Log::error('WxPat.Api.postXmlCurl Error: ' . curl_error($speafaa9)); curl_close($speafaa9); throw new WxPayException("curl出错，错误码: {$sp11c818}"); } } private static function getMillisecond() { $spaa00eb = explode(' ', microtime()); $spaa00eb = $spaa00eb[1] . $spaa00eb[0] * 1000; $sp598aa4 = explode('.', $spaa00eb); $spaa00eb = $sp598aa4[0]; return $spaa00eb; } }