<?php
require_once 'WxPay.Exception.php'; require_once 'WxPay.Config.php'; require_once 'WxPay.Data.php'; class WxPayApi { public static function unifiedOrder($sp4d8bce, $sp8a0281 = 6) { $sp78f833 = 'https://api.mch.weixin.qq.com/pay/unifiedorder'; if (!$sp4d8bce->IsOut_trade_noSet()) { throw new WxPayException('缺少统一支付接口必填参数out_trade_no！'); } else { if (!$sp4d8bce->IsBodySet()) { throw new WxPayException('缺少统一支付接口必填参数body！'); } else { if (!$sp4d8bce->IsTotal_feeSet()) { throw new WxPayException('缺少统一支付接口必填参数total_fee！'); } else { if (!$sp4d8bce->IsTrade_typeSet()) { throw new WxPayException('缺少统一支付接口必填参数trade_type！'); } } } } if ($sp4d8bce->GetTrade_type() == 'JSAPI' && !$sp4d8bce->IsOpenidSet()) { throw new WxPayException('统一支付接口中，缺少必填参数openid！trade_type为JSAPI时，openid为必填参数！'); } if ($sp4d8bce->GetTrade_type() == 'NATIVE' && !$sp4d8bce->IsProduct_idSet()) { throw new WxPayException('统一支付接口中，缺少必填参数product_id！trade_type为JSAPI时，product_id为必填参数！'); } if (!$sp4d8bce->IsNotify_urlSet()) { $sp4d8bce->SetNotify_url(WxPayConfig::NOTIFY_URL); } $sp4d8bce->SetAppid(WxPayConfig::APPID); $sp4d8bce->SetMch_id(WxPayConfig::MCHID); $sp4d8bce->SetNonce_str(self::getNonceStr()); $sp4d8bce->SetSign(); $sp1eeb26 = $sp4d8bce->ToXml(); $spad3137 = self::getMillisecond(); $sp1de750 = self::postXmlCurl($sp1eeb26, $sp78f833, false, $sp8a0281); $spc4a98e = WxPayResults::Init($sp1de750); self::reportCostTime($sp78f833, $spad3137, $spc4a98e); return $spc4a98e; } public static function orderQuery($sp4d8bce, $sp8a0281 = 6) { $sp78f833 = 'https://api.mch.weixin.qq.com/pay/orderquery'; if (!$sp4d8bce->IsOut_trade_noSet() && !$sp4d8bce->IsTransaction_idSet()) { throw new WxPayException('订单查询接口中，out_trade_no、transaction_id至少填一个！'); } $sp4d8bce->SetAppid(WxPayConfig::APPID); $sp4d8bce->SetMch_id(WxPayConfig::MCHID); $sp4d8bce->SetNonce_str(self::getNonceStr()); $sp4d8bce->SetSign(); $sp1eeb26 = $sp4d8bce->ToXml(); $spad3137 = self::getMillisecond(); $sp1de750 = self::postXmlCurl($sp1eeb26, $sp78f833, false, $sp8a0281); $spc4a98e = WxPayResults::Init($sp1de750); self::reportCostTime($sp78f833, $spad3137, $spc4a98e); return $spc4a98e; } public static function closeOrder($sp4d8bce, $sp8a0281 = 6) { $sp78f833 = 'https://api.mch.weixin.qq.com/pay/closeorder'; if (!$sp4d8bce->IsOut_trade_noSet()) { throw new WxPayException('订单查询接口中，out_trade_no必填！'); } $sp4d8bce->SetAppid(WxPayConfig::APPID); $sp4d8bce->SetMch_id(WxPayConfig::MCHID); $sp4d8bce->SetNonce_str(self::getNonceStr()); $sp4d8bce->SetSign(); $sp1eeb26 = $sp4d8bce->ToXml(); $spad3137 = self::getMillisecond(); $sp1de750 = self::postXmlCurl($sp1eeb26, $sp78f833, false, $sp8a0281); $spc4a98e = WxPayResults::Init($sp1de750); self::reportCostTime($sp78f833, $spad3137, $spc4a98e); return $spc4a98e; } public static function refund($sp4d8bce, $sp8a0281 = 6) { $sp78f833 = 'https://api.mch.weixin.qq.com/secapi/pay/refund'; if (!$sp4d8bce->IsOut_trade_noSet() && !$sp4d8bce->IsTransaction_idSet()) { throw new WxPayException('退款申请接口中，out_trade_no、transaction_id至少填一个！'); } else { if (!$sp4d8bce->IsOut_refund_noSet()) { throw new WxPayException('退款申请接口中，缺少必填参数out_refund_no！'); } else { if (!$sp4d8bce->IsTotal_feeSet()) { throw new WxPayException('退款申请接口中，缺少必填参数total_fee！'); } else { if (!$sp4d8bce->IsRefund_feeSet()) { throw new WxPayException('退款申请接口中，缺少必填参数refund_fee！'); } else { if (!$sp4d8bce->IsOp_user_idSet()) { throw new WxPayException('退款申请接口中，缺少必填参数op_user_id！'); } } } } } $sp4d8bce->SetAppid(WxPayConfig::APPID); $sp4d8bce->SetMch_id(WxPayConfig::MCHID); $sp4d8bce->SetNonce_str(self::getNonceStr()); $sp4d8bce->SetSign(); $sp1eeb26 = $sp4d8bce->ToXml(); $spad3137 = self::getMillisecond(); $sp1de750 = self::postXmlCurl($sp1eeb26, $sp78f833, true, $sp8a0281); $spc4a98e = WxPayResults::Init($sp1de750); self::reportCostTime($sp78f833, $spad3137, $spc4a98e); return $spc4a98e; } public static function refundQuery($sp4d8bce, $sp8a0281 = 6) { $sp78f833 = 'https://api.mch.weixin.qq.com/pay/refundquery'; if (!$sp4d8bce->IsOut_refund_noSet() && !$sp4d8bce->IsOut_trade_noSet() && !$sp4d8bce->IsTransaction_idSet() && !$sp4d8bce->IsRefund_idSet()) { throw new WxPayException('退款查询接口中，out_refund_no、out_trade_no、transaction_id、refund_id四个参数必填一个！'); } $sp4d8bce->SetAppid(WxPayConfig::APPID); $sp4d8bce->SetMch_id(WxPayConfig::MCHID); $sp4d8bce->SetNonce_str(self::getNonceStr()); $sp4d8bce->SetSign(); $sp1eeb26 = $sp4d8bce->ToXml(); $spad3137 = self::getMillisecond(); $sp1de750 = self::postXmlCurl($sp1eeb26, $sp78f833, false, $sp8a0281); $spc4a98e = WxPayResults::Init($sp1de750); self::reportCostTime($sp78f833, $spad3137, $spc4a98e); return $spc4a98e; } public static function downloadBill($sp4d8bce, $sp8a0281 = 6) { $sp78f833 = 'https://api.mch.weixin.qq.com/pay/downloadbill'; if (!$sp4d8bce->IsBill_dateSet()) { throw new WxPayException('对账单接口中，缺少必填参数bill_date！'); } $sp4d8bce->SetAppid(WxPayConfig::APPID); $sp4d8bce->SetMch_id(WxPayConfig::MCHID); $sp4d8bce->SetNonce_str(self::getNonceStr()); $sp4d8bce->SetSign(); $sp1eeb26 = $sp4d8bce->ToXml(); $sp1de750 = self::postXmlCurl($sp1eeb26, $sp78f833, false, $sp8a0281); if (substr($sp1de750, 0, 5) == '<xml>') { return ''; } return $sp1de750; } public static function micropay($sp4d8bce, $sp8a0281 = 10) { $sp78f833 = 'https://api.mch.weixin.qq.com/pay/micropay'; if (!$sp4d8bce->IsBodySet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数body！'); } else { if (!$sp4d8bce->IsOut_trade_noSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数out_trade_no！'); } else { if (!$sp4d8bce->IsTotal_feeSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数total_fee！'); } else { if (!$sp4d8bce->IsAuth_codeSet()) { throw new WxPayException('提交被扫支付API接口中，缺少必填参数auth_code！'); } } } } $sp4d8bce->SetSpbill_create_ip($_SERVER['REMOTE_ADDR']); $sp4d8bce->SetAppid(WxPayConfig::APPID); $sp4d8bce->SetMch_id(WxPayConfig::MCHID); $sp4d8bce->SetNonce_str(self::getNonceStr()); $sp4d8bce->SetSign(); $sp1eeb26 = $sp4d8bce->ToXml(); $spad3137 = self::getMillisecond(); $sp1de750 = self::postXmlCurl($sp1eeb26, $sp78f833, false, $sp8a0281); $spc4a98e = WxPayResults::Init($sp1de750); self::reportCostTime($sp78f833, $spad3137, $spc4a98e); return $spc4a98e; } public static function reverse($sp4d8bce, $sp8a0281 = 6) { $sp78f833 = 'https://api.mch.weixin.qq.com/secapi/pay/reverse'; if (!$sp4d8bce->IsOut_trade_noSet() && !$sp4d8bce->IsTransaction_idSet()) { throw new WxPayException('撤销订单API接口中，参数out_trade_no和transaction_id必须填写一个！'); } $sp4d8bce->SetAppid(WxPayConfig::APPID); $sp4d8bce->SetMch_id(WxPayConfig::MCHID); $sp4d8bce->SetNonce_str(self::getNonceStr()); $sp4d8bce->SetSign(); $sp1eeb26 = $sp4d8bce->ToXml(); $spad3137 = self::getMillisecond(); $sp1de750 = self::postXmlCurl($sp1eeb26, $sp78f833, true, $sp8a0281); $spc4a98e = WxPayResults::Init($sp1de750); self::reportCostTime($sp78f833, $spad3137, $spc4a98e); return $spc4a98e; } public static function report($sp4d8bce, $sp8a0281 = 1) { $sp78f833 = 'https://api.mch.weixin.qq.com/payitil/report'; if (!$sp4d8bce->IsInterface_urlSet()) { throw new WxPayException('接口URL，缺少必填参数interface_url！'); } if (!$sp4d8bce->IsReturn_codeSet()) { throw new WxPayException('返回状态码，缺少必填参数return_code！'); } if (!$sp4d8bce->IsResult_codeSet()) { throw new WxPayException('业务结果，缺少必填参数result_code！'); } if (!$sp4d8bce->IsUser_ipSet()) { throw new WxPayException('访问接口IP，缺少必填参数user_ip！'); } if (!$sp4d8bce->IsExecute_time_Set()) { throw new WxPayException('接口耗时，缺少必填参数execute_time_！'); } $sp4d8bce->SetAppid(WxPayConfig::APPID); $sp4d8bce->SetMch_id(WxPayConfig::MCHID); $sp4d8bce->SetUser_ip($_SERVER['REMOTE_ADDR']); $sp4d8bce->SetTime(date('YmdHis')); $sp4d8bce->SetNonce_str(self::getNonceStr()); $sp4d8bce->SetSign(); $sp1eeb26 = $sp4d8bce->ToXml(); $spad3137 = self::getMillisecond(); $sp1de750 = self::postXmlCurl($sp1eeb26, $sp78f833, false, $sp8a0281); return $sp1de750; } public static function bizpayurl($sp4d8bce, $sp8a0281 = 6) { if (!$sp4d8bce->IsProduct_idSet()) { throw new WxPayException('生成二维码，缺少必填参数product_id！'); } $sp4d8bce->SetAppid(WxPayConfig::APPID); $sp4d8bce->SetMch_id(WxPayConfig::MCHID); $sp4d8bce->SetTime_stamp(time()); $sp4d8bce->SetNonce_str(self::getNonceStr()); $sp4d8bce->SetSign(); return $sp4d8bce->GetValues(); } public static function shorturl($sp4d8bce, $sp8a0281 = 6) { $sp78f833 = 'https://api.mch.weixin.qq.com/tools/shorturl'; if (!$sp4d8bce->IsLong_urlSet()) { throw new WxPayException('需要转换的URL，签名用原串，传输需URL encode！'); } $sp4d8bce->SetAppid(WxPayConfig::APPID); $sp4d8bce->SetMch_id(WxPayConfig::MCHID); $sp4d8bce->SetNonce_str(self::getNonceStr()); $sp4d8bce->SetSign(); $sp1eeb26 = $sp4d8bce->ToXml(); $spad3137 = self::getMillisecond(); $sp1de750 = self::postXmlCurl($sp1eeb26, $sp78f833, false, $sp8a0281); $spc4a98e = WxPayResults::Init($sp1de750); self::reportCostTime($sp78f833, $spad3137, $spc4a98e); return $spc4a98e; } public static function notify($spb2d017, &$sp55c6db) { $sp1eeb26 = file_get_contents('php://input'); try { $spc4a98e = WxPayResults::Init($sp1eeb26); } catch (WxPayException $sp9e5801) { $sp55c6db = $sp9e5801->errorMessage(); return false; } return call_user_func($spb2d017, $spc4a98e); } public static function getNonceStr($spef2f8c = 32) { $spb28d0f = 'abcdefghijklmnopqrstuvwxyz0123456789'; $spdeb044 = ''; for ($spfae064 = 0; $spfae064 < $spef2f8c; $spfae064++) { $spdeb044 .= substr($spb28d0f, mt_rand(0, strlen($spb28d0f) - 1), 1); } return $spdeb044; } public static function replyNotify($sp1eeb26) { echo $sp1eeb26; } private static function reportCostTime($sp78f833, $spad3137, $sp151100) { if (WxPayConfig::REPORT_LEVENL == 0) { return; } if (WxPayConfig::REPORT_LEVENL == 1 && array_key_exists('return_code', $sp151100) && $sp151100['return_code'] == 'SUCCESS' && array_key_exists('result_code', $sp151100) && $sp151100['result_code'] == 'SUCCESS') { return; } $spff915a = self::getMillisecond(); $sp0b7ed9 = new WxPayReport(); $sp0b7ed9->SetInterface_url($sp78f833); $sp0b7ed9->SetExecute_time_($spff915a - $spad3137); if (array_key_exists('return_code', $sp151100)) { $sp0b7ed9->SetReturn_code($sp151100['return_code']); } if (array_key_exists('return_msg', $sp151100)) { $sp0b7ed9->SetReturn_msg($sp151100['return_msg']); } if (array_key_exists('result_code', $sp151100)) { $sp0b7ed9->SetResult_code($sp151100['result_code']); } if (array_key_exists('err_code', $sp151100)) { $sp0b7ed9->SetErr_code($sp151100['err_code']); } if (array_key_exists('err_code_des', $sp151100)) { $sp0b7ed9->SetErr_code_des($sp151100['err_code_des']); } if (array_key_exists('out_trade_no', $sp151100)) { $sp0b7ed9->SetOut_trade_no($sp151100['out_trade_no']); } if (array_key_exists('device_info', $sp151100)) { $sp0b7ed9->SetDevice_info($sp151100['device_info']); } try { self::report($sp0b7ed9); } catch (WxPayException $sp9e5801) { } } private static function postXmlCurl($sp1eeb26, $sp78f833, $sp57b73a = false, $sp02b5ce = 30) { $sp7a336f = curl_init(); curl_setopt($sp7a336f, CURLOPT_TIMEOUT, $sp02b5ce); if (WxPayConfig::CURL_PROXY_HOST != '0.0.0.0' && WxPayConfig::CURL_PROXY_PORT != 0) { curl_setopt($sp7a336f, CURLOPT_PROXY, WxPayConfig::CURL_PROXY_HOST); curl_setopt($sp7a336f, CURLOPT_PROXYPORT, WxPayConfig::CURL_PROXY_PORT); } curl_setopt($sp7a336f, CURLOPT_URL, $sp78f833); curl_setopt($sp7a336f, CURLOPT_SSL_VERIFYPEER, TRUE); curl_setopt($sp7a336f, CURLOPT_SSL_VERIFYHOST, 2); curl_setopt($sp7a336f, CURLOPT_HEADER, FALSE); curl_setopt($sp7a336f, CURLOPT_RETURNTRANSFER, TRUE); if ($sp57b73a == true) { curl_setopt($sp7a336f, CURLOPT_SSLCERTTYPE, 'PEM'); curl_setopt($sp7a336f, CURLOPT_SSLCERT, WxPayConfig::SSLCERT_PATH); curl_setopt($sp7a336f, CURLOPT_SSLKEYTYPE, 'PEM'); curl_setopt($sp7a336f, CURLOPT_SSLKEY, WxPayConfig::SSLKEY_PATH); } else { curl_setopt($sp7a336f, CURLOPT_SSL_VERIFYPEER, false); } curl_setopt($sp7a336f, CURLOPT_POST, TRUE); curl_setopt($sp7a336f, CURLOPT_POSTFIELDS, $sp1eeb26); $sp151100 = curl_exec($sp7a336f); if ($sp151100) { curl_close($sp7a336f); return $sp151100; } else { $sp4c188b = curl_errno($sp7a336f); \Log::error('WxPat.Api.postXmlCurl Error: ' . curl_error($sp7a336f)); curl_close($sp7a336f); throw new WxPayException("curl出错，错误码: {$sp4c188b}"); } } private static function getMillisecond() { $sp5cd2af = explode(' ', microtime()); $sp5cd2af = $sp5cd2af[1] . $sp5cd2af[0] * 1000; $spb35e9b = explode('.', $sp5cd2af); $sp5cd2af = $spb35e9b[0]; return $sp5cd2af; } }