<?php
namespace App\Library\Pay\WeChat; use App\Library\Helper; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; public function __construct($spe6149b) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spe6149b; $this->url_return = SYS_URL . '/pay/return/' . $spe6149b; } function goPay($spd82bcd, $sp6281ad, $spe4243d, $sp1d246b, $sp54eead) { $sp90753f = $sp54eead; $sp3e72e0 = strtoupper($spd82bcd['payway']); $this->defineWxConfig($spd82bcd); require_once __DIR__ . '/lib/WxPay.Api.php'; require_once 'WxPay.NativePay.php'; require_once 'wxLog.php'; $spf1ec9c = new \NativePay(); $sp106469 = new \WxPayUnifiedOrder(); $sp106469->SetBody($spe4243d); $sp106469->SetAttach($sp6281ad); $sp106469->SetOut_trade_no($sp6281ad); $sp106469->SetTotal_fee($sp90753f); $sp106469->SetTime_start(date('YmdHis')); $sp106469->SetTime_expire(date('YmdHis', time() + 600)); $sp106469->SetGoods_tag('pay'); $sp106469->SetNotify_url($this->url_notify); $sp106469->SetTrade_type($sp3e72e0); if ($sp3e72e0 === 'MWEB') { $sp106469->SetScene_info('{"h5_info": {"type":"Wap","wap_url": "' . SYS_URL . '","wap_name": "发卡平台"}}'); } $sp106469->SetProduct_id($sp6281ad); $sp106469->SetSpbill_create_ip(Helper::getIP()); function getResultUrl($sp6281ad, $sp836ce6, $sp63ae76) { if (!isset($sp836ce6[$sp63ae76])) { Log::error('Pay.WeChat.goPay, order_no:' . $sp6281ad . ', error:' . json_encode($sp836ce6)); if (isset($sp836ce6['err_code_des'])) { throw new \Exception($sp836ce6['err_code_des']); } if (isset($sp836ce6['return_msg'])) { throw new \Exception($sp836ce6['return_msg']); } throw new \Exception('获取支付数据失败'); } return $sp836ce6[$sp63ae76]; } if ($sp3e72e0 === 'NATIVE') { $sp836ce6 = $spf1ec9c->GetPayUrl($sp106469); $sp833b34 = getResultUrl($sp6281ad, $sp836ce6, 'code_url'); header('location: /qrcode/pay/' . $sp6281ad . '/wechat?url=' . urlencode($sp833b34)); } elseif ($sp3e72e0 === 'MWEB') { $sp836ce6 = $spf1ec9c->GetH5PayUrl($sp106469); $sp833b34 = getResultUrl($sp6281ad, $sp836ce6, 'mweb_url'); echo view('utils.redirect', array('url' => $sp833b34)); } die; } private function defineWxConfig($spd82bcd) { if (!defined('wx_APPID')) { define('wx_APPID', $spd82bcd['APPID']); } if (!defined('wx_MCHID')) { define('wx_MCHID', $spd82bcd['MCHID']); } if (!defined('wx_KEY')) { define('wx_KEY', $spd82bcd['KEY']); } if (!defined('wx_APPSECRET')) { define('wx_APPSECRET', $spd82bcd['APPSECRET']); } } function verify($spd82bcd, $spbb5f38) { $spe16bd1 = isset($spd82bcd['isNotify']) && $spd82bcd['isNotify']; $this->defineWxConfig($spd82bcd); require_once __DIR__ . '/lib/WxPay.Api.php'; require_once 'wxLog.php'; if ($spe16bd1) { return (new PayNotifyCallBack($spbb5f38))->Handle(false); } else { $sp6281ad = @$spd82bcd['out_trade_no']; $sp106469 = new \WxPayOrderQuery(); $sp106469->SetOut_trade_no($sp6281ad); $sp836ce6 = \WxPayApi::orderQuery($sp106469); if (array_key_exists('trade_state', $sp836ce6) && $sp836ce6['trade_state'] == 'SUCCESS') { call_user_func_array($spbb5f38, array($sp836ce6['out_trade_no'], $sp836ce6['total_fee'], $sp836ce6['transaction_id'])); return true; } else { return false; } } } }