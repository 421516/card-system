<?php
namespace App\Library\Pay\WeChat; use App\Library\Helper; use App\Library\Pay\ApiInterface; use Illuminate\Support\Facades\Log; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; public function __construct($spfc3b4d) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spfc3b4d; $this->url_return = SYS_URL . '/pay/return/' . $spfc3b4d; } function goPay($sp8abf69, $spbd054b, $sp547016, $speb838e, $sp6c12fc) { $spbd56f5 = $sp6c12fc; $spfc2b4a = strtoupper($sp8abf69['payway']); $this->defineWxConfig($sp8abf69); require_once __DIR__ . '/lib/WxPay.Api.php'; require_once 'WxPay.NativePay.php'; require_once 'wxLog.php'; $sp8ada1b = new \NativePay(); $sp51043b = new \WxPayUnifiedOrder(); $sp51043b->SetBody($sp547016); $sp51043b->SetAttach($spbd054b); $sp51043b->SetOut_trade_no($spbd054b); $sp51043b->SetTotal_fee($spbd56f5); $sp51043b->SetTime_start(date('YmdHis')); $sp51043b->SetTime_expire(date('YmdHis', time() + 600)); $sp51043b->SetGoods_tag('pay'); $sp51043b->SetNotify_url($this->url_notify); $sp51043b->SetTrade_type($spfc2b4a); if ($spfc2b4a === 'MWEB') { $sp51043b->SetScene_info('{"h5_info": {"type":"Wap","wap_url": "' . SYS_URL . '","wap_name": "发卡平台"}}'); } $sp51043b->SetProduct_id($spbd054b); $sp51043b->SetSpbill_create_ip(Helper::getIP()); function getResultUrl($spbd054b, $spbcb528, $sp9684a3) { if (!isset($spbcb528[$sp9684a3])) { Log::error('Pay.WeChat.goPay, order_no:' . $spbd054b . ', error:' . json_encode($spbcb528)); if (isset($spbcb528['err_code_des'])) { throw new \Exception($spbcb528['err_code_des']); } if (isset($spbcb528['return_msg'])) { throw new \Exception($spbcb528['return_msg']); } throw new \Exception('获取支付数据失败'); } return $spbcb528[$sp9684a3]; } if ($spfc2b4a === 'NATIVE') { $spbcb528 = $sp8ada1b->GetPayUrl($sp51043b); $spdfc1ea = getResultUrl($spbd054b, $spbcb528, 'code_url'); header('location: /qrcode/pay/' . $spbd054b . '/wechat?url=' . urlencode($spdfc1ea)); } elseif ($spfc2b4a === 'MWEB') { $spbcb528 = $sp8ada1b->GetH5PayUrl($sp51043b); $spdfc1ea = getResultUrl($spbd054b, $spbcb528, 'mweb_url'); echo view('utils.redirect', array('url' => $spdfc1ea)); } die; } private function defineWxConfig($sp8abf69) { if (!defined('wx_APPID')) { define('wx_APPID', $sp8abf69['APPID']); } if (!defined('wx_MCHID')) { define('wx_MCHID', $sp8abf69['MCHID']); } if (!defined('wx_KEY')) { define('wx_KEY', $sp8abf69['KEY']); } if (!defined('wx_APPSECRET')) { define('wx_APPSECRET', $sp8abf69['APPSECRET']); } } function verify($sp8abf69, $spc98f69) { $spdcb97c = isset($sp8abf69['isNotify']) && $sp8abf69['isNotify']; $this->defineWxConfig($sp8abf69); require_once __DIR__ . '/lib/WxPay.Api.php'; require_once 'wxLog.php'; if ($spdcb97c) { return (new PayNotifyCallBack($spc98f69))->Handle(false); } else { $spbd054b = @$sp8abf69['out_trade_no']; $sp51043b = new \WxPayOrderQuery(); $sp51043b->SetOut_trade_no($spbd054b); $spbcb528 = \WxPayApi::orderQuery($sp51043b); if (array_key_exists('trade_state', $spbcb528) && $spbcb528['trade_state'] == 'SUCCESS') { call_user_func_array($spc98f69, array($spbcb528['out_trade_no'], $spbcb528['total_fee'], $spbcb528['transaction_id'])); return true; } else { return false; } } } }