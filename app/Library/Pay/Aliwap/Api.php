<?php
namespace App\Library\Pay\Aliwap; use App\Library\Pay\ApiInterface; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; private $pay_id; public function __construct($sp403bd7) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $sp403bd7; $this->url_return = SYS_URL . '/pay/return/' . $sp403bd7; $this->pay_id = $sp403bd7; } function goPay($sp4d5cc2, $sp2714cc, $spc644e5, $sp5b5e88, $sp9d9f48) { $sp6246a9 = sprintf('%.2f', $sp9d9f48 / 100); $sp233f0d = $this->buildAliConfig($sp4d5cc2); require_once __DIR__ . '/lib/alipay_submit.class.php'; $spdfc646 = $this->url_notify . '/buy/'; $sp233f0d['notify_url'] = $this->url_notify; $sp233f0d['return_url'] = $this->url_return . '/' . $sp2714cc; $spc2d1ca = array('service' => $sp233f0d['service'], 'partner' => $sp233f0d['partner'], 'seller_id' => $sp233f0d['seller_id'], 'payment_type' => $sp233f0d['payment_type'], 'notify_url' => $sp233f0d['notify_url'], 'return_url' => $sp233f0d['return_url'], 'out_trade_no' => $sp2714cc, 'total_fee' => $sp6246a9, 'subject' => $spc644e5, 'body' => $sp5b5e88, 'show_url' => $spdfc646, 'app_pay' => 'Y', '_input_charset' => 'utf-8'); $spefe525 = new \AlipaySubmit($sp233f0d); $spca2c87 = $spefe525->buildRequestForm($spc2d1ca, 'get', '确认'); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; echo $spca2c87; } function verify($sp4d5cc2, $spae1cf8) { $sp5c532f = isset($sp4d5cc2['isNotify']) && $sp4d5cc2['isNotify']; $sp233f0d = $this->buildAliConfig($sp4d5cc2); require __DIR__ . '/lib/alipay_notify.class.php'; $spc11cec = new \AlipayNotify($sp233f0d); if ($sp5c532f) { $spc4a98e = $spc11cec->verifyNotify(); } else { $spc4a98e = $spc11cec->verifyReturn(); } if ($spc4a98e) { $sp2714cc = $_REQUEST['out_trade_no']; $spb306ab = $_REQUEST['trade_no']; $spa69ad1 = $_REQUEST['trade_status']; $spe1a1d8 = (int) ($_REQUEST['total_fee'] * 100); if ($spa69ad1 == 'TRADE_FINISHED' || $spa69ad1 == 'TRADE_SUCCESS') { $spae1cf8($sp2714cc, $spe1a1d8, $spb306ab); } if ($sp5c532f) { echo 'success'; } return true; } else { if ($sp5c532f) { echo 'fail'; $spc8fe2b = 'payNotify pay_id: ' . $this->pay_id . ',Alipay'; } else { $spc8fe2b = 'payReturn pay_id: ' . $this->pay_id . ',Alipay'; } \Log::error($spc8fe2b . ' Alipay.Api.verify failed'); return false; } } private function buildAliConfig($sp4d5cc2) { return array('partner' => $sp4d5cc2['partner'], 'seller_id' => $sp4d5cc2['partner'], 'key' => $sp4d5cc2['key'], 'sign_type' => 'MD5', 'input_charset' => 'utf-8', 'cacert' => __DIR__ . DIRECTORY_SEPARATOR . 'cacert.pem', 'transport' => 'https', 'payment_type' => '1', 'service' => 'alipay.wap.create.direct.pay.by.user'); } }