<?php
namespace App\Library\Pay\Alipay; use App\Library\Pay\ApiInterface; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; private $pay_id; public function __construct($spf46c5d) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spf46c5d; $this->url_return = SYS_URL . '/pay/return/' . $spf46c5d; $this->pay_id = $spf46c5d; } function goPay($spa9e109, $sp206d07, $sp89af34, $sp92f0c1, $sp28f24f) { $sp9a8a75 = sprintf('%.2f', $sp28f24f / 100); $sp60f8fc = $this->buildAliConfig($spa9e109); require_once __DIR__ . '/sdk/alipay_submit.class.php'; $sp60f8fc['notify_url'] = $this->url_notify; $sp60f8fc['return_url'] = $this->url_return . '/' . $sp206d07; $sp5227ca = array('service' => $sp60f8fc['service'], 'partner' => $sp60f8fc['partner'], 'seller_id' => $sp60f8fc['seller_id'], 'payment_type' => $sp60f8fc['payment_type'], 'notify_url' => $sp60f8fc['notify_url'], 'return_url' => $sp60f8fc['return_url'], 'out_trade_no' => $sp206d07, 'total_fee' => $sp9a8a75, 'subject' => $sp89af34, 'body' => $sp92f0c1, 'show_url' => config('app.url'), 'app_pay' => 'Y', '_input_charset' => 'utf-8'); $sp688f61 = new \AlipaySubmit($sp60f8fc); $sp94ebc7 = $sp688f61->buildRequestForm($sp5227ca, 'get', '确认'); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; echo $sp94ebc7; } function verify($spa9e109, $spf8927a) { $spf53f48 = isset($spa9e109['isNotify']) && $spa9e109['isNotify']; $sp60f8fc = $this->buildAliConfig($spa9e109); require __DIR__ . '/sdk/alipay_notify.class.php'; $sp3712c0 = new \AlipayNotify($sp60f8fc); if ($spf53f48) { $sp9610ab = $sp3712c0->verifyNotify(); } else { $sp9610ab = $sp3712c0->verifyReturn(); } if ($sp9610ab) { $sp206d07 = $_REQUEST['out_trade_no']; $spe62189 = $_REQUEST['trade_no']; $sp667351 = $_REQUEST['trade_status']; $spbc3979 = (int) round($_REQUEST['total_fee'] * 100); if ($sp667351 == 'TRADE_FINISHED' || $sp667351 == 'TRADE_SUCCESS') { $spf8927a($sp206d07, $spbc3979, $spe62189); } if ($spf53f48) { echo 'success'; } return true; } else { if ($spf53f48) { echo 'fail'; $sp1eea05 = 'payNotify pay_id: ' . $this->pay_id . ',Alipay'; } else { $sp1eea05 = 'payReturn pay_id: ' . $this->pay_id . ',Alipay'; } \Log::error($sp1eea05 . ' Alipay.Api.verify failed'); return false; } } private function buildAliConfig($spa9e109) { return array('partner' => $spa9e109['partner'], 'seller_id' => $spa9e109['partner'], 'key' => $spa9e109['key'], 'sign_type' => 'MD5', 'input_charset' => 'utf-8', 'cacert' => __DIR__ . DIRECTORY_SEPARATOR . 'cacert.pem', 'transport' => 'https', 'payment_type' => '1', 'service' => $spa9e109['payway'] === 'wap' ? 'alipay.wap.create.direct.pay.by.user' : 'create_direct_pay_by_user'); } }