<?php
namespace App\Library\Pay\Alipay; use App\Library\Pay\ApiInterface; class Api implements ApiInterface { private $url_notify = ''; private $url_return = ''; private $pay_id; public function __construct($spe6149b) { $this->url_notify = SYS_URL_API . '/pay/notify/' . $spe6149b; $this->url_return = SYS_URL . '/pay/return/' . $spe6149b; $this->pay_id = $spe6149b; } function goPay($spd82bcd, $sp6281ad, $spe4243d, $sp1d246b, $sp54eead) { $sp90753f = sprintf('%.2f', $sp54eead / 100); $sp394da4 = $this->buildAliConfig($spd82bcd); require_once __DIR__ . '/lib/alipay_submit.class.php'; $sp394da4['notify_url'] = $this->url_notify; $sp394da4['return_url'] = $this->url_return . '/' . $sp6281ad; $sp5f52cd = array('service' => $sp394da4['service'], 'partner' => $sp394da4['partner'], 'seller_id' => $sp394da4['seller_id'], 'payment_type' => $sp394da4['payment_type'], 'notify_url' => $sp394da4['notify_url'], 'return_url' => $sp394da4['return_url'], 'out_trade_no' => $sp6281ad, 'total_fee' => $sp90753f, 'subject' => $spe4243d, 'body' => $sp1d246b, '_input_charset' => 'utf-8', 'anti_phishing_key' => $sp394da4['anti_phishing_key'], 'exter_invoke_ip' => $sp394da4['exter_invoke_ip']); $sp160ee6 = new \AlipaySubmit($sp394da4); $sp52c012 = $sp160ee6->buildRequestForm($sp5f52cd, 'get', '确认'); echo '<!DOCTYPE html><html><head><meta http-equiv="Content-Type" content="text/html; charset=utf-8"><title>正在跳转到支付渠道...</title></head><body><h1 style="text-align: center">正在跳转到支付渠道...</h1>'; echo $sp52c012; } function verify($spd82bcd, $spbb5f38) { $spe16bd1 = isset($spd82bcd['isNotify']) && $spd82bcd['isNotify']; $sp394da4 = $this->buildAliConfig($spd82bcd); require __DIR__ . '/lib/alipay_notify.class.php'; $spe5399e = new \AlipayNotify($sp394da4); if ($spe16bd1) { $sp836ce6 = $spe5399e->verifyNotify(); } else { $sp836ce6 = $spe5399e->verifyReturn(); } if ($sp836ce6) { $sp6281ad = $_REQUEST['out_trade_no']; $sp5b4f94 = $_REQUEST['trade_no']; $sp0ee404 = $_REQUEST['trade_status']; $spf4aff4 = (int) ($_REQUEST['total_fee'] * 100); if ($sp0ee404 == 'TRADE_FINISHED' || $sp0ee404 == 'TRADE_SUCCESS') { $spbb5f38($sp6281ad, $spf4aff4, $sp5b4f94); } if ($spe16bd1) { echo 'success'; } return true; } else { if ($spe16bd1) { echo 'fail'; $sp0e0593 = 'payNotify pay_id: ' . $this->pay_id . ',Alipay'; } else { $sp0e0593 = 'payReturn pay_id: ' . $this->pay_id . ',Alipay'; } \Log::error($sp0e0593 . ' Alipay.Api.verify failed'); return false; } } private function buildAliConfig($spd82bcd) { return array('partner' => $spd82bcd['partner'], 'seller_id' => $spd82bcd['partner'], 'key' => $spd82bcd['key'], 'sign_type' => 'MD5', 'input_charset' => 'utf-8', 'cacert' => __DIR__ . DIRECTORY_SEPARATOR . 'cacert.pem', 'transport' => 'https', 'payment_type' => '1', 'service' => 'create_direct_pay_by_user', 'anti_phishing_key' => '', 'exter_invoke_ip' => ''); } }