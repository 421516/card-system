<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp86073d, $spcf18a6) { $this->captcha_id = $sp86073d; $this->private_key = $spcf18a6; } public function pre_process($spc7622d = null) { $sp78f833 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spc7622d != null and is_string($spc7622d)) { $sp78f833 = $sp78f833 . '&user_id=' . $spc7622d; } $sp3318db = $this->send_request($sp78f833); if (strlen($sp3318db) != 32) { $this->failback_process(); return 0; } $this->success_process($sp3318db); return 1; } private function success_process($sp3318db) { $sp3318db = md5($sp3318db . $this->private_key); $spc4a98e = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp3318db); $this->response = $spc4a98e; } private function failback_process() { $spf84be4 = md5(rand(0, 100)); $sp8319b3 = md5(rand(0, 100)); $sp3318db = $spf84be4 . substr($sp8319b3, 0, 2); $spc4a98e = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp3318db); $this->response = $spc4a98e; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp3318db, $sp44decb, $spc328d0, $spc7622d = null) { if (!$this->check_validate($sp3318db, $sp44decb)) { return 0; } $sp151100 = array('seccode' => $spc328d0, 'sdk' => self::GT_SDK_VERSION); if ($spc7622d != null and is_string($spc7622d)) { $sp151100['user_id'] = $spc7622d; } $sp78f833 = 'http://api.geetest.com/validate.php'; $spcefaca = $this->post_request($sp78f833, $sp151100); if ($spcefaca == md5($spc328d0)) { return 1; } else { if ($spcefaca == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp3318db, $sp44decb, $spc328d0) { if ($sp44decb) { $spd0bf21 = explode('_', $sp44decb); try { $spb5f6eb = $this->decode_response($sp3318db, $spd0bf21['0']); $sp22c2ab = $this->decode_response($sp3318db, $spd0bf21['1']); $sp1326a9 = $this->decode_response($sp3318db, $spd0bf21['2']); $sp0ed4f8 = $this->get_failback_pic_ans($sp22c2ab, $sp1326a9); $sp535303 = abs($spb5f6eb - $sp0ed4f8); } catch (\Exception $sp9e5801) { return 1; } if ($sp535303 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp3318db, $sp44decb) { if (strlen($sp44decb) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp3318db) != $sp44decb) { return false; } return true; } private function send_request($sp78f833) { if (function_exists('curl_exec')) { $sp7a336f = curl_init(); curl_setopt($sp7a336f, CURLOPT_URL, $sp78f833); curl_setopt($sp7a336f, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp7a336f, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp7a336f, CURLOPT_RETURNTRANSFER, 1); $sp151100 = curl_exec($sp7a336f); if (curl_errno($sp7a336f)) { $spc30934 = sprintf('curl[%s] error[%s]', $sp78f833, curl_errno($sp7a336f) . ':' . curl_error($sp7a336f)); $this->triggerError($spc30934); } curl_close($sp7a336f); } else { $spa8c703 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp27d08e = stream_context_create($spa8c703); $sp151100 = file_get_contents($sp78f833, false, $sp27d08e); } return $sp151100; } private function post_request($sp78f833, $sp3edf26 = '') { if (!$sp3edf26) { return false; } $sp151100 = http_build_query($sp3edf26); if (function_exists('curl_exec')) { $sp7a336f = curl_init(); curl_setopt($sp7a336f, CURLOPT_URL, $sp78f833); curl_setopt($sp7a336f, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp7a336f, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp7a336f, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp3edf26) { curl_setopt($sp7a336f, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp7a336f, CURLOPT_POST, 1); curl_setopt($sp7a336f, CURLOPT_POSTFIELDS, $sp151100); } $sp151100 = curl_exec($sp7a336f); if (curl_errno($sp7a336f)) { $spc30934 = sprintf('curl[%s] error[%s]', $sp78f833, curl_errno($sp7a336f) . ':' . curl_error($sp7a336f)); $this->triggerError($spc30934); } curl_close($sp7a336f); } else { if ($sp3edf26) { $spa8c703 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp151100) . '
', 'content' => $sp151100, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp27d08e = stream_context_create($spa8c703); $sp151100 = file_get_contents($sp78f833, false, $sp27d08e); } } return $sp151100; } private function decode_response($sp3318db, $sp227000) { if (strlen($sp227000) > 100) { return 0; } $spfcd1b0 = array(); $spe1dea8 = array(); $sp370314 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spbc55c7 = 0; $spa4652a = 0; $sp812083 = str_split($sp3318db); $spd02953 = str_split($sp227000); for ($spfae064 = 0; $spfae064 < strlen($sp3318db); $spfae064++) { $spa41ce4 = $sp812083[$spfae064]; if (in_array($spa41ce4, $spe1dea8)) { continue; } else { $spd0bf21 = $sp370314[$spbc55c7 % 5]; array_push($spe1dea8, $spa41ce4); $spbc55c7++; $spfcd1b0[$spa41ce4] = $spd0bf21; } } for ($sp47ed96 = 0; $sp47ed96 < strlen($sp227000); $sp47ed96++) { $spa4652a += $spfcd1b0[$spd02953[$sp47ed96]]; } $spa4652a = $spa4652a - $this->decodeRandBase($sp3318db); return $spa4652a; } private function get_x_pos_from_str($spa707c4) { if (strlen($spa707c4) != 5) { return 0; } $sp0c647b = 0; $sp35c772 = 200; $sp0c647b = base_convert($spa707c4, 16, 10); $spc4a98e = $sp0c647b % $sp35c772; $spc4a98e = $spc4a98e < 40 ? 40 : $spc4a98e; return $spc4a98e; } private function get_failback_pic_ans($spb3d827, $sp3c8b48) { $spad5673 = substr(md5($spb3d827), 0, 9); $spfb9721 = substr(md5($sp3c8b48), 10, 9); $spa8bd03 = ''; for ($spfae064 = 0; $spfae064 < 9; $spfae064++) { if ($spfae064 % 2 == 0) { $spa8bd03 = $spa8bd03 . $spad5673[$spfae064]; } elseif ($spfae064 % 2 == 1) { $spa8bd03 = $spa8bd03 . $spfb9721[$spfae064]; } } $spcad26f = substr($spa8bd03, 4, 5); $sp0ed4f8 = $this->get_x_pos_from_str($spcad26f); return $sp0ed4f8; } private function decodeRandBase($sp3318db) { $sp268861 = substr($sp3318db, 32, 2); $sp22ac18 = array(); for ($spfae064 = 0; $spfae064 < strlen($sp268861); $spfae064++) { $sp9b8381 = ord($sp268861[$spfae064]); $spc4a98e = $sp9b8381 > 57 ? $sp9b8381 - 87 : $sp9b8381 - 48; array_push($sp22ac18, $spc4a98e); } $spa8ea81 = $sp22ac18['0'] * 36 + $sp22ac18['1']; return $spa8ea81; } private function triggerError($spc30934) { } }