<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp4ba4da, $sp2008d6) { $this->captcha_id = $sp4ba4da; $this->private_key = $sp2008d6; } public function pre_process($spfedf4e = null) { $sp7a0d0d = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spfedf4e != null and is_string($spfedf4e)) { $sp7a0d0d = $sp7a0d0d . '&user_id=' . $spfedf4e; } $sp810809 = $this->send_request($sp7a0d0d); if (strlen($sp810809) != 32) { $this->failback_process(); return 0; } $this->success_process($sp810809); return 1; } private function success_process($sp810809) { $sp810809 = md5($sp810809 . $this->private_key); $spcc4042 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp810809); $this->response = $spcc4042; } private function failback_process() { $sp426c22 = md5(rand(0, 100)); $spe516ce = md5(rand(0, 100)); $sp810809 = $sp426c22 . substr($spe516ce, 0, 2); $spcc4042 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp810809); $this->response = $spcc4042; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp810809, $sp2d9a9b, $sp365c0c, $spfedf4e = null) { if (!$this->check_validate($sp810809, $sp2d9a9b)) { return 0; } $sp38c5ae = array('seccode' => $sp365c0c, 'sdk' => self::GT_SDK_VERSION); if ($spfedf4e != null and is_string($spfedf4e)) { $sp38c5ae['user_id'] = $spfedf4e; } $sp7a0d0d = 'http://api.geetest.com/validate.php'; $spcda636 = $this->post_request($sp7a0d0d, $sp38c5ae); if ($spcda636 == md5($sp365c0c)) { return 1; } else { if ($spcda636 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp810809, $sp2d9a9b, $sp365c0c) { if ($sp2d9a9b) { $spffe9f9 = explode('_', $sp2d9a9b); try { $spa19b41 = $this->decode_response($sp810809, $spffe9f9['0']); $sp052803 = $this->decode_response($sp810809, $spffe9f9['1']); $sp5b3171 = $this->decode_response($sp810809, $spffe9f9['2']); $sp9fc40e = $this->get_failback_pic_ans($sp052803, $sp5b3171); $sp4b1273 = abs($spa19b41 - $sp9fc40e); } catch (\Exception $sp805d3e) { return 1; } if ($sp4b1273 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp810809, $sp2d9a9b) { if (strlen($sp2d9a9b) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp810809) != $sp2d9a9b) { return false; } return true; } private function send_request($sp7a0d0d) { if (function_exists('curl_exec')) { $spb70507 = curl_init(); curl_setopt($spb70507, CURLOPT_URL, $sp7a0d0d); curl_setopt($spb70507, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spb70507, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($spb70507, CURLOPT_RETURNTRANSFER, 1); $sp38c5ae = curl_exec($spb70507); if (curl_errno($spb70507)) { $sp9e0e41 = sprintf('curl[%s] error[%s]', $sp7a0d0d, curl_errno($spb70507) . ':' . curl_error($spb70507)); $this->triggerError($sp9e0e41); } curl_close($spb70507); } else { $sp18002d = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp5d9b0f = stream_context_create($sp18002d); $sp38c5ae = file_get_contents($sp7a0d0d, false, $sp5d9b0f); } return $sp38c5ae; } private function post_request($sp7a0d0d, $sp03a320 = '') { if (!$sp03a320) { return false; } $sp38c5ae = http_build_query($sp03a320); if (function_exists('curl_exec')) { $spb70507 = curl_init(); curl_setopt($spb70507, CURLOPT_URL, $sp7a0d0d); curl_setopt($spb70507, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spb70507, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spb70507, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp03a320) { curl_setopt($spb70507, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($spb70507, CURLOPT_POST, 1); curl_setopt($spb70507, CURLOPT_POSTFIELDS, $sp38c5ae); } $sp38c5ae = curl_exec($spb70507); if (curl_errno($spb70507)) { $sp9e0e41 = sprintf('curl[%s] error[%s]', $sp7a0d0d, curl_errno($spb70507) . ':' . curl_error($spb70507)); $this->triggerError($sp9e0e41); } curl_close($spb70507); } else { if ($sp03a320) { $sp18002d = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp38c5ae) . '
', 'content' => $sp38c5ae, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp5d9b0f = stream_context_create($sp18002d); $sp38c5ae = file_get_contents($sp7a0d0d, false, $sp5d9b0f); } } return $sp38c5ae; } private function decode_response($sp810809, $spadab05) { if (strlen($spadab05) > 100) { return 0; } $spa8a71b = array(); $spbfb12f = array(); $sp7900c4 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $spda0d90 = 0; $sp19a4e0 = 0; $sp4e2ac8 = str_split($sp810809); $sp6ce095 = str_split($spadab05); for ($sp836a84 = 0; $sp836a84 < strlen($sp810809); $sp836a84++) { $spb18bb2 = $sp4e2ac8[$sp836a84]; if (in_array($spb18bb2, $spbfb12f)) { continue; } else { $spffe9f9 = $sp7900c4[$spda0d90 % 5]; array_push($spbfb12f, $spb18bb2); $spda0d90++; $spa8a71b[$spb18bb2] = $spffe9f9; } } for ($spd165b1 = 0; $spd165b1 < strlen($spadab05); $spd165b1++) { $sp19a4e0 += $spa8a71b[$sp6ce095[$spd165b1]]; } $sp19a4e0 = $sp19a4e0 - $this->decodeRandBase($sp810809); return $sp19a4e0; } private function get_x_pos_from_str($sp20bb7f) { if (strlen($sp20bb7f) != 5) { return 0; } $sp85e0e7 = 0; $sp976086 = 200; $sp85e0e7 = base_convert($sp20bb7f, 16, 10); $spcc4042 = $sp85e0e7 % $sp976086; $spcc4042 = $spcc4042 < 40 ? 40 : $spcc4042; return $spcc4042; } private function get_failback_pic_ans($sp54a017, $spa8a18d) { $sp495d96 = substr(md5($sp54a017), 0, 9); $sp0ff9f8 = substr(md5($spa8a18d), 10, 9); $sp364eae = ''; for ($sp836a84 = 0; $sp836a84 < 9; $sp836a84++) { if ($sp836a84 % 2 == 0) { $sp364eae = $sp364eae . $sp495d96[$sp836a84]; } elseif ($sp836a84 % 2 == 1) { $sp364eae = $sp364eae . $sp0ff9f8[$sp836a84]; } } $spe7d0a0 = substr($sp364eae, 4, 5); $sp9fc40e = $this->get_x_pos_from_str($spe7d0a0); return $sp9fc40e; } private function decodeRandBase($sp810809) { $sp63139e = substr($sp810809, 32, 2); $spd0cd1d = array(); for ($sp836a84 = 0; $sp836a84 < strlen($sp63139e); $sp836a84++) { $sp7e1bb1 = ord($sp63139e[$sp836a84]); $spcc4042 = $sp7e1bb1 > 57 ? $sp7e1bb1 - 87 : $sp7e1bb1 - 48; array_push($spd0cd1d, $spcc4042); } $spb29607 = $spd0cd1d['0'] * 36 + $spd0cd1d['1']; return $spb29607; } private function triggerError($sp9e0e41) { } }