<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp15911d, $sp3efb50) { $this->captcha_id = $sp15911d; $this->private_key = $sp3efb50; } public function pre_process($spc52aea = null) { $sp833b34 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spc52aea != null and is_string($spc52aea)) { $sp833b34 = $sp833b34 . '&user_id=' . $spc52aea; } $sp70e965 = $this->send_request($sp833b34); if (strlen($sp70e965) != 32) { $this->failback_process(); return 0; } $this->success_process($sp70e965); return 1; } private function success_process($sp70e965) { $sp70e965 = md5($sp70e965 . $this->private_key); $sp836ce6 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp70e965); $this->response = $sp836ce6; } private function failback_process() { $sp33571e = md5(rand(0, 100)); $spa92c93 = md5(rand(0, 100)); $sp70e965 = $sp33571e . substr($spa92c93, 0, 2); $sp836ce6 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp70e965); $this->response = $sp836ce6; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp70e965, $sp80e860, $sp1dcca5, $spc52aea = null) { if (!$this->check_validate($sp70e965, $sp80e860)) { return 0; } $sp94131d = array('seccode' => $sp1dcca5, 'sdk' => self::GT_SDK_VERSION); if ($spc52aea != null and is_string($spc52aea)) { $sp94131d['user_id'] = $spc52aea; } $sp833b34 = 'http://api.geetest.com/validate.php'; $spa6e23b = $this->post_request($sp833b34, $sp94131d); if ($spa6e23b == md5($sp1dcca5)) { return 1; } else { if ($spa6e23b == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp70e965, $sp80e860, $sp1dcca5) { if ($sp80e860) { $sp308e09 = explode('_', $sp80e860); try { $sp964a3e = $this->decode_response($sp70e965, $sp308e09['0']); $spa5b0d2 = $this->decode_response($sp70e965, $sp308e09['1']); $spaff39f = $this->decode_response($sp70e965, $sp308e09['2']); $sp9afa39 = $this->get_failback_pic_ans($spa5b0d2, $spaff39f); $sp588781 = abs($sp964a3e - $sp9afa39); } catch (\Exception $spfda1c7) { return 1; } if ($sp588781 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp70e965, $sp80e860) { if (strlen($sp80e860) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp70e965) != $sp80e860) { return false; } return true; } private function send_request($sp833b34) { if (function_exists('curl_exec')) { $speafaa9 = curl_init(); curl_setopt($speafaa9, CURLOPT_URL, $sp833b34); curl_setopt($speafaa9, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($speafaa9, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($speafaa9, CURLOPT_RETURNTRANSFER, 1); $sp94131d = curl_exec($speafaa9); if (curl_errno($speafaa9)) { $spbbc15d = sprintf('curl[%s] error[%s]', $sp833b34, curl_errno($speafaa9) . ':' . curl_error($speafaa9)); $this->triggerError($spbbc15d); } curl_close($speafaa9); } else { $sp522969 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spf1e845 = stream_context_create($sp522969); $sp94131d = file_get_contents($sp833b34, false, $spf1e845); } return $sp94131d; } private function post_request($sp833b34, $sp005d4a = '') { if (!$sp005d4a) { return false; } $sp94131d = http_build_query($sp005d4a); if (function_exists('curl_exec')) { $speafaa9 = curl_init(); curl_setopt($speafaa9, CURLOPT_URL, $sp833b34); curl_setopt($speafaa9, CURLOPT_RETURNTRANSFER, 1); curl_setopt($speafaa9, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($speafaa9, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp005d4a) { curl_setopt($speafaa9, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($speafaa9, CURLOPT_POST, 1); curl_setopt($speafaa9, CURLOPT_POSTFIELDS, $sp94131d); } $sp94131d = curl_exec($speafaa9); if (curl_errno($speafaa9)) { $spbbc15d = sprintf('curl[%s] error[%s]', $sp833b34, curl_errno($speafaa9) . ':' . curl_error($speafaa9)); $this->triggerError($spbbc15d); } curl_close($speafaa9); } else { if ($sp005d4a) { $sp522969 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp94131d) . '
', 'content' => $sp94131d, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $spf1e845 = stream_context_create($sp522969); $sp94131d = file_get_contents($sp833b34, false, $spf1e845); } } return $sp94131d; } private function decode_response($sp70e965, $sp5ebef2) { if (strlen($sp5ebef2) > 100) { return 0; } $sp63ae76 = array(); $sp039b4d = array(); $sp414258 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp93b866 = 0; $sp904799 = 0; $sp2c903c = str_split($sp70e965); $spfa3bfb = str_split($sp5ebef2); for ($spcecaa9 = 0; $spcecaa9 < strlen($sp70e965); $spcecaa9++) { $sp8f5e71 = $sp2c903c[$spcecaa9]; if (in_array($sp8f5e71, $sp039b4d)) { continue; } else { $sp308e09 = $sp414258[$sp93b866 % 5]; array_push($sp039b4d, $sp8f5e71); $sp93b866++; $sp63ae76[$sp8f5e71] = $sp308e09; } } for ($sp0d7cb6 = 0; $sp0d7cb6 < strlen($sp5ebef2); $sp0d7cb6++) { $sp904799 += $sp63ae76[$spfa3bfb[$sp0d7cb6]]; } $sp904799 = $sp904799 - $this->decodeRandBase($sp70e965); return $sp904799; } private function get_x_pos_from_str($sp15f8ec) { if (strlen($sp15f8ec) != 5) { return 0; } $sp9ffeea = 0; $sp430968 = 200; $sp9ffeea = base_convert($sp15f8ec, 16, 10); $sp836ce6 = $sp9ffeea % $sp430968; $sp836ce6 = $sp836ce6 < 40 ? 40 : $sp836ce6; return $sp836ce6; } private function get_failback_pic_ans($sp9c29e3, $spb1543d) { $sp4fdf9a = substr(md5($sp9c29e3), 0, 9); $sp19b42c = substr(md5($spb1543d), 10, 9); $sp52a392 = ''; for ($spcecaa9 = 0; $spcecaa9 < 9; $spcecaa9++) { if ($spcecaa9 % 2 == 0) { $sp52a392 = $sp52a392 . $sp4fdf9a[$spcecaa9]; } elseif ($spcecaa9 % 2 == 1) { $sp52a392 = $sp52a392 . $sp19b42c[$spcecaa9]; } } $spe622ec = substr($sp52a392, 4, 5); $sp9afa39 = $this->get_x_pos_from_str($spe622ec); return $sp9afa39; } private function decodeRandBase($sp70e965) { $sp92826d = substr($sp70e965, 32, 2); $spb29595 = array(); for ($spcecaa9 = 0; $spcecaa9 < strlen($sp92826d); $spcecaa9++) { $sp2f668d = ord($sp92826d[$spcecaa9]); $sp836ce6 = $sp2f668d > 57 ? $sp2f668d - 87 : $sp2f668d - 48; array_push($spb29595, $sp836ce6); } $spcaa507 = $spb29595['0'] * 36 + $spb29595['1']; return $spcaa507; } private function triggerError($spbbc15d) { } }