<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp2c512d, $spd093a2) { $this->captcha_id = $sp2c512d; $this->private_key = $spd093a2; } public function pre_process($spaef809 = null) { $sp11a0e0 = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($spaef809 != null and is_string($spaef809)) { $sp11a0e0 = $sp11a0e0 . '&user_id=' . $spaef809; } $sp7c5bfd = $this->send_request($sp11a0e0); if (strlen($sp7c5bfd) != 32) { $this->failback_process(); return 0; } $this->success_process($sp7c5bfd); return 1; } private function success_process($sp7c5bfd) { $sp7c5bfd = md5($sp7c5bfd . $this->private_key); $sp9610ab = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp7c5bfd); $this->response = $sp9610ab; } private function failback_process() { $sp602e9c = md5(rand(0, 100)); $sp804c1c = md5(rand(0, 100)); $sp7c5bfd = $sp602e9c . substr($sp804c1c, 0, 2); $sp9610ab = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp7c5bfd); $this->response = $sp9610ab; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp7c5bfd, $sp95a5e4, $sp5d276a, $spaef809 = null) { if (!$this->check_validate($sp7c5bfd, $sp95a5e4)) { return 0; } $sp29e0c7 = array('seccode' => $sp5d276a, 'sdk' => self::GT_SDK_VERSION); if ($spaef809 != null and is_string($spaef809)) { $sp29e0c7['user_id'] = $spaef809; } $sp11a0e0 = 'http://api.geetest.com/validate.php'; $spce23f8 = $this->post_request($sp11a0e0, $sp29e0c7); if ($spce23f8 == md5($sp5d276a)) { return 1; } else { if ($spce23f8 == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp7c5bfd, $sp95a5e4, $sp5d276a) { if ($sp95a5e4) { $sp67821d = explode('_', $sp95a5e4); try { $sp4956df = $this->decode_response($sp7c5bfd, $sp67821d['0']); $sp2be6a7 = $this->decode_response($sp7c5bfd, $sp67821d['1']); $sp0344f1 = $this->decode_response($sp7c5bfd, $sp67821d['2']); $sp5dc124 = $this->get_failback_pic_ans($sp2be6a7, $sp0344f1); $sp3deb22 = abs($sp4956df - $sp5dc124); } catch (\Exception $sp1b3a33) { return 1; } if ($sp3deb22 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp7c5bfd, $sp95a5e4) { if (strlen($sp95a5e4) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp7c5bfd) != $sp95a5e4) { return false; } return true; } private function send_request($sp11a0e0) { if (function_exists('curl_exec')) { $sp082589 = curl_init(); curl_setopt($sp082589, CURLOPT_URL, $sp11a0e0); curl_setopt($sp082589, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp082589, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($sp082589, CURLOPT_RETURNTRANSFER, 1); $sp29e0c7 = curl_exec($sp082589); if (curl_errno($sp082589)) { $sp173961 = sprintf('curl[%s] error[%s]', $sp11a0e0, curl_errno($sp082589) . ':' . curl_error($sp082589)); $this->triggerError($sp173961); } curl_close($sp082589); } else { $sp91c0bc = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp665c3e = stream_context_create($sp91c0bc); $sp29e0c7 = file_get_contents($sp11a0e0, false, $sp665c3e); } return $sp29e0c7; } private function post_request($sp11a0e0, $sp3ae18e = '') { if (!$sp3ae18e) { return false; } $sp29e0c7 = http_build_query($sp3ae18e); if (function_exists('curl_exec')) { $sp082589 = curl_init(); curl_setopt($sp082589, CURLOPT_URL, $sp11a0e0); curl_setopt($sp082589, CURLOPT_RETURNTRANSFER, 1); curl_setopt($sp082589, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($sp082589, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp3ae18e) { curl_setopt($sp082589, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($sp082589, CURLOPT_POST, 1); curl_setopt($sp082589, CURLOPT_POSTFIELDS, $sp29e0c7); } $sp29e0c7 = curl_exec($sp082589); if (curl_errno($sp082589)) { $sp173961 = sprintf('curl[%s] error[%s]', $sp11a0e0, curl_errno($sp082589) . ':' . curl_error($sp082589)); $this->triggerError($sp173961); } curl_close($sp082589); } else { if ($sp3ae18e) { $sp91c0bc = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp29e0c7) . '
', 'content' => $sp29e0c7, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp665c3e = stream_context_create($sp91c0bc); $sp29e0c7 = file_get_contents($sp11a0e0, false, $sp665c3e); } } return $sp29e0c7; } private function decode_response($sp7c5bfd, $sp234c2f) { if (strlen($sp234c2f) > 100) { return 0; } $spf74fd0 = array(); $sp9f4504 = array(); $sp7a7109 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp03e375 = 0; $sp3dc071 = 0; $sp18fc10 = str_split($sp7c5bfd); $spa0433b = str_split($sp234c2f); for ($sp747316 = 0; $sp747316 < strlen($sp7c5bfd); $sp747316++) { $sp33ef93 = $sp18fc10[$sp747316]; if (in_array($sp33ef93, $sp9f4504)) { continue; } else { $sp67821d = $sp7a7109[$sp03e375 % 5]; array_push($sp9f4504, $sp33ef93); $sp03e375++; $spf74fd0[$sp33ef93] = $sp67821d; } } for ($sp0c7cb1 = 0; $sp0c7cb1 < strlen($sp234c2f); $sp0c7cb1++) { $sp3dc071 += $spf74fd0[$spa0433b[$sp0c7cb1]]; } $sp3dc071 = $sp3dc071 - $this->decodeRandBase($sp7c5bfd); return $sp3dc071; } private function get_x_pos_from_str($sp437f5e) { if (strlen($sp437f5e) != 5) { return 0; } $sp6b4bd5 = 0; $spc68228 = 200; $sp6b4bd5 = base_convert($sp437f5e, 16, 10); $sp9610ab = $sp6b4bd5 % $spc68228; $sp9610ab = $sp9610ab < 40 ? 40 : $sp9610ab; return $sp9610ab; } private function get_failback_pic_ans($sp46ef38, $sp509861) { $sp16fab0 = substr(md5($sp46ef38), 0, 9); $sp296f3c = substr(md5($sp509861), 10, 9); $spee5b38 = ''; for ($sp747316 = 0; $sp747316 < 9; $sp747316++) { if ($sp747316 % 2 == 0) { $spee5b38 = $spee5b38 . $sp16fab0[$sp747316]; } elseif ($sp747316 % 2 == 1) { $spee5b38 = $spee5b38 . $sp296f3c[$sp747316]; } } $spcc4757 = substr($spee5b38, 4, 5); $sp5dc124 = $this->get_x_pos_from_str($spcc4757); return $sp5dc124; } private function decodeRandBase($sp7c5bfd) { $sp547fe8 = substr($sp7c5bfd, 32, 2); $sp658330 = array(); for ($sp747316 = 0; $sp747316 < strlen($sp547fe8); $sp747316++) { $spee6218 = ord($sp547fe8[$sp747316]); $sp9610ab = $spee6218 > 57 ? $spee6218 - 87 : $spee6218 - 48; array_push($sp658330, $sp9610ab); } $sp1de2d0 = $sp658330['0'] * 36 + $sp658330['1']; return $sp1de2d0; } private function triggerError($sp173961) { } }