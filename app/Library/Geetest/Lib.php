<?php
namespace App\Library\Geetest; class Lib { const GT_SDK_VERSION = 'php_3.2.0'; public static $connectTimeout = 1; public static $socketTimeout = 1; private $response; public $captcha_id; public $private_key; public function __construct($sp946bc7, $spf199df) { $this->captcha_id = $sp946bc7; $this->private_key = $spf199df; } public function pre_process($sp5670aa = null) { $spdfc1ea = 'http://api.geetest.com/register.php?gt=' . $this->captcha_id; if ($sp5670aa != null and is_string($sp5670aa)) { $spdfc1ea = $spdfc1ea . '&user_id=' . $sp5670aa; } $sp770764 = $this->send_request($spdfc1ea); if (strlen($sp770764) != 32) { $this->failback_process(); return 0; } $this->success_process($sp770764); return 1; } private function success_process($sp770764) { $sp770764 = md5($sp770764 . $this->private_key); $spbcb528 = array('success' => 1, 'gt' => $this->captcha_id, 'challenge' => $sp770764); $this->response = $spbcb528; } private function failback_process() { $spa23dc3 = md5(rand(0, 100)); $sp736bd9 = md5(rand(0, 100)); $sp770764 = $spa23dc3 . substr($sp736bd9, 0, 2); $spbcb528 = array('success' => 0, 'gt' => $this->captcha_id, 'challenge' => $sp770764); $this->response = $spbcb528; } public function get_response_str() { return json_encode($this->response); } public function get_response() { return $this->response; } public function success_validate($sp770764, $sp33e2c8, $spfded6d, $sp5670aa = null) { if (!$this->check_validate($sp770764, $sp33e2c8)) { return 0; } $sp1835de = array('seccode' => $spfded6d, 'sdk' => self::GT_SDK_VERSION); if ($sp5670aa != null and is_string($sp5670aa)) { $sp1835de['user_id'] = $sp5670aa; } $spdfc1ea = 'http://api.geetest.com/validate.php'; $sp75200d = $this->post_request($spdfc1ea, $sp1835de); if ($sp75200d == md5($spfded6d)) { return 1; } else { if ($sp75200d == 'false') { return 0; } else { return 0; } } } public function fail_validate($sp770764, $sp33e2c8, $spfded6d) { if ($sp33e2c8) { $spb66e06 = explode('_', $sp33e2c8); try { $spa39590 = $this->decode_response($sp770764, $spb66e06['0']); $sp0365f7 = $this->decode_response($sp770764, $spb66e06['1']); $sp02eb60 = $this->decode_response($sp770764, $spb66e06['2']); $spd9b18b = $this->get_failback_pic_ans($sp0365f7, $sp02eb60); $sp157134 = abs($spa39590 - $spd9b18b); } catch (\Exception $sp2a4a9a) { return 1; } if ($sp157134 < 4) { return 1; } else { return 0; } } else { return 0; } } private function check_validate($sp770764, $sp33e2c8) { if (strlen($sp33e2c8) != 32) { return false; } if (md5($this->private_key . 'geetest' . $sp770764) != $sp33e2c8) { return false; } return true; } private function send_request($spdfc1ea) { if (function_exists('curl_exec')) { $spde874d = curl_init(); curl_setopt($spde874d, CURLOPT_URL, $spdfc1ea); curl_setopt($spde874d, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spde874d, CURLOPT_TIMEOUT, self::$socketTimeout); curl_setopt($spde874d, CURLOPT_RETURNTRANSFER, 1); $sp1835de = curl_exec($spde874d); if (curl_errno($spde874d)) { $sp670748 = sprintf('curl[%s] error[%s]', $spdfc1ea, curl_errno($spde874d) . ':' . curl_error($spde874d)); $this->triggerError($sp670748); } curl_close($spde874d); } else { $sp5c5d08 = array('http' => array('method' => 'GET', 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp64d3e6 = stream_context_create($sp5c5d08); $sp1835de = file_get_contents($spdfc1ea, false, $sp64d3e6); } return $sp1835de; } private function post_request($spdfc1ea, $sp34990f = '') { if (!$sp34990f) { return false; } $sp1835de = http_build_query($sp34990f); if (function_exists('curl_exec')) { $spde874d = curl_init(); curl_setopt($spde874d, CURLOPT_URL, $spdfc1ea); curl_setopt($spde874d, CURLOPT_RETURNTRANSFER, 1); curl_setopt($spde874d, CURLOPT_CONNECTTIMEOUT, self::$connectTimeout); curl_setopt($spde874d, CURLOPT_TIMEOUT, self::$socketTimeout); if (!$sp34990f) { curl_setopt($spde874d, CURLOPT_USERAGENT, $_SERVER['HTTP_USER_AGENT']); } else { curl_setopt($spde874d, CURLOPT_POST, 1); curl_setopt($spde874d, CURLOPT_POSTFIELDS, $sp1835de); } $sp1835de = curl_exec($spde874d); if (curl_errno($spde874d)) { $sp670748 = sprintf('curl[%s] error[%s]', $spdfc1ea, curl_errno($spde874d) . ':' . curl_error($spde874d)); $this->triggerError($sp670748); } curl_close($spde874d); } else { if ($sp34990f) { $sp5c5d08 = array('http' => array('method' => 'POST', 'header' => 'Content-type: application/x-www-form-urlencoded
' . 'Content-Length: ' . strlen($sp1835de) . '
', 'content' => $sp1835de, 'timeout' => self::$connectTimeout + self::$socketTimeout)); $sp64d3e6 = stream_context_create($sp5c5d08); $sp1835de = file_get_contents($spdfc1ea, false, $sp64d3e6); } } return $sp1835de; } private function decode_response($sp770764, $sp43dfb1) { if (strlen($sp43dfb1) > 100) { return 0; } $sp9684a3 = array(); $sp8df399 = array(); $sp4ae6e3 = array('0' => 1, '1' => 2, '2' => 5, '3' => 10, '4' => 50); $sp1f1cf0 = 0; $sp36d3e9 = 0; $sp4e1294 = str_split($sp770764); $spfe8b20 = str_split($sp43dfb1); for ($sp1b7341 = 0; $sp1b7341 < strlen($sp770764); $sp1b7341++) { $spf427c6 = $sp4e1294[$sp1b7341]; if (in_array($spf427c6, $sp8df399)) { continue; } else { $spb66e06 = $sp4ae6e3[$sp1f1cf0 % 5]; array_push($sp8df399, $spf427c6); $sp1f1cf0++; $sp9684a3[$spf427c6] = $spb66e06; } } for ($sp4502fa = 0; $sp4502fa < strlen($sp43dfb1); $sp4502fa++) { $sp36d3e9 += $sp9684a3[$spfe8b20[$sp4502fa]]; } $sp36d3e9 = $sp36d3e9 - $this->decodeRandBase($sp770764); return $sp36d3e9; } private function get_x_pos_from_str($sp4d8658) { if (strlen($sp4d8658) != 5) { return 0; } $sp8708af = 0; $sp0b1d65 = 200; $sp8708af = base_convert($sp4d8658, 16, 10); $spbcb528 = $sp8708af % $sp0b1d65; $spbcb528 = $spbcb528 < 40 ? 40 : $spbcb528; return $spbcb528; } private function get_failback_pic_ans($spe02784, $sp6fe268) { $sp00b82b = substr(md5($spe02784), 0, 9); $speddeab = substr(md5($sp6fe268), 10, 9); $sp227026 = ''; for ($sp1b7341 = 0; $sp1b7341 < 9; $sp1b7341++) { if ($sp1b7341 % 2 == 0) { $sp227026 = $sp227026 . $sp00b82b[$sp1b7341]; } elseif ($sp1b7341 % 2 == 1) { $sp227026 = $sp227026 . $speddeab[$sp1b7341]; } } $spfd5fd4 = substr($sp227026, 4, 5); $spd9b18b = $this->get_x_pos_from_str($spfd5fd4); return $spd9b18b; } private function decodeRandBase($sp770764) { $spae4c39 = substr($sp770764, 32, 2); $sp6070d2 = array(); for ($sp1b7341 = 0; $sp1b7341 < strlen($spae4c39); $sp1b7341++) { $spa82ee3 = ord($spae4c39[$sp1b7341]); $spbcb528 = $spa82ee3 > 57 ? $spa82ee3 - 87 : $spa82ee3 - 48; array_push($sp6070d2, $spbcb528); } $sp84717d = $sp6070d2['0'] * 36 + $sp6070d2['1']; return $sp84717d; } private function triggerError($sp670748) { } }