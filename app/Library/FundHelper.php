<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { public static function orderSuccess($sp804c16, callable $spdaab7a) { $spc7622d = $sp804c16->user_id; $spabbd7c = $sp804c16->income; try { return DB::transaction(function () use($sp804c16, $spc7622d, $spabbd7c, $spdaab7a) { if ($spdaab7a() === Order::STATUS_SUCCESS) { $spa80d08 = User::where('id', $spc7622d)->lockForUpdate()->firstOrFail(); $spa80d08->m_all += $spabbd7c; $spa80d08->saveOrFail(); $spf907f0 = new FundRecord(); $spf907f0->user_id = $spc7622d; $spf907f0->type = FundRecord::TYPE_IN; $spf907f0->amount = $spabbd7c; $spf907f0->balance = $spa80d08->m_balance; $spf907f0->remark = '订单#' . $sp804c16->order_no; $spf907f0->order_id = $sp804c16->id; $spf907f0->saveOrFail(); } return true; }); } catch (\Throwable $sp9e5801) { $sp55c6db = 'FundHelper.orderSuccess error, user_id:' . $spc7622d . ',amount:' . $spabbd7c . ',order_no:' . $sp804c16->order_no; \Illuminate\Support\Facades\Log::error($sp55c6db . ' with exception:', array('Exception' => $sp9e5801)); return false; } } public static function orderFreeze($sp804c16, $sp005364) { if ($sp804c16->status === Order::STATUS_FROZEN || $sp804c16->status === Order::STATUS_REFUND) { return true; } $spc7622d = $sp804c16->user_id; try { return DB::transaction(function () use($sp804c16, $spc7622d, $sp005364) { $sp804c16->status = \App\Order::STATUS_FROZEN; $sp804c16->frozen_reason = $sp005364; $sp804c16->saveOrFail(); $spa80d08 = User::where('id', $spc7622d)->lockForUpdate()->firstOrFail(); if ($sp804c16->cards()->exists()) { $spa80d08->m_frozen += $sp804c16->income; $spa80d08->saveOrFail(); $spf907f0 = new FundRecord(); $spf907f0->user_id = $spc7622d; $spf907f0->type = FundRecord::TYPE_OUT; $spf907f0->amount = -$sp804c16->income; $spf907f0->balance = $spa80d08->m_balance; $spf907f0->remark = $sp005364 . ', 冻结订单#' . $sp804c16->order_no; $spf907f0->order_id = $sp804c16->id; $spf907f0->saveOrFail(); } else { if ($sp804c16->paid_at === NULL) { $spd50979 = '未付款'; } else { $spd50979 = '未发货'; } $spf907f0 = new FundRecord(); $spf907f0->user_id = $spc7622d; $spf907f0->type = FundRecord::TYPE_OUT; $spf907f0->amount = 0; $spf907f0->balance = $spa80d08->m_balance; $spf907f0->remark = $sp005364 . ', 冻结订单(' . $spd50979 . ')#' . $sp804c16->order_no; $spf907f0->order_id = $sp804c16->id; $spf907f0->saveOrFail(); } return true; }); } catch (\Throwable $sp9e5801) { $sp55c6db = 'FundHelper.orderFreeze error, user_id:' . $spc7622d . ',amount:' . $sp804c16->income; if ($sp804c16) { $sp55c6db .= ',order_no:' . $sp804c16->order_no; } else { $sp55c6db .= ',order_no: null'; } \Illuminate\Support\Facades\Log::error($sp55c6db . ' with exception:', array('Exception' => $sp9e5801)); return false; } } public static function orderUnfreeze($sp804c16, $spcaba4a, callable $sp71a730 = null, &$sp195f26 = null) { $spc7622d = $sp804c16->user_id; try { return DB::transaction(function () use($sp804c16, $spc7622d, $spcaba4a, $sp71a730, &$sp195f26) { if ($sp71a730 !== null && $sp71a730() === false) { return false; } if ($sp804c16->status !== Order::STATUS_FROZEN) { $sp195f26 = $sp804c16->status; return true; } $spa80d08 = User::where('id', $spc7622d)->lockForUpdate()->firstOrFail(); if ($sp804c16->cards()->exists()) { $sp804c16->status = \App\Order::STATUS_SUCCESS; $spa80d08->m_frozen -= $sp804c16->income; $spa80d08->saveOrFail(); $spf907f0 = new FundRecord(); $spf907f0->user_id = $spc7622d; $spf907f0->type = FundRecord::TYPE_IN; $spf907f0->amount = $sp804c16->income; $spf907f0->balance = $spa80d08->m_balance; $spf907f0->remark = $spcaba4a . ', 解冻订单#' . $sp804c16->order_no; $spf907f0->order_id = $sp804c16->id; $spf907f0->saveOrFail(); } else { if ($sp804c16->paid_at === NULL) { $sp804c16->status = \App\Order::STATUS_UNPAY; $spd50979 = '未付款'; } else { $sp804c16->status = \App\Order::STATUS_PAID; $spd50979 = '未发货'; } $spf907f0 = new FundRecord(); $spf907f0->user_id = $spc7622d; $spf907f0->type = FundRecord::TYPE_IN; $spf907f0->amount = 0; $spf907f0->balance = $spa80d08->m_balance; $spf907f0->remark = $spcaba4a . ', 解冻订单(' . $spd50979 . ')#' . $sp804c16->order_no; $spf907f0->order_id = $sp804c16->id; $spf907f0->saveOrFail(); } $sp195f26 = $sp804c16->status; $sp804c16->saveOrFail(); return true; }); } catch (\Throwable $sp9e5801) { $sp55c6db = 'FundHelper.orderUnfreeze error, user_id:' . $spc7622d . ',amount:' . $sp804c16->income; if ($sp804c16) { $sp55c6db .= ',order_no:' . $sp804c16->order_no; } else { $sp55c6db .= ',order_no: null'; } \Illuminate\Support\Facades\Log::error($sp55c6db . ' with exception:', array('Exception' => $sp9e5801)); return false; } } }