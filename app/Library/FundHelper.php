<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { const ACTION_CONTINUE = 1001; public static function orderSuccess($sp8bff63, callable $sp72a891) { $sp63564c = null; try { return DB::transaction(function () use($sp8bff63, &$sp63564c, $sp72a891) { $sp63564c = \App\Order::where('id', $sp8bff63)->lockForUpdate()->firstOrFail(); $sp5780b9 = $sp72a891($sp63564c); if ($sp5780b9 !== self::ACTION_CONTINUE) { return $sp5780b9; } $spb66d5f = User::where('id', $sp63564c->user_id)->lockForUpdate()->firstOrFail(); $spb66d5f->m_all += $sp63564c->income; $spb66d5f->saveOrFail(); $spb45f1b = new FundRecord(); $spb45f1b->user_id = $sp63564c->user_id; $spb45f1b->type = FundRecord::TYPE_IN; $spb45f1b->amount = $sp63564c->income; $spb45f1b->all = $spb66d5f->m_all; $spb45f1b->frozen = $spb66d5f->m_frozen; $spb45f1b->paid = $spb66d5f->m_paid; $spb45f1b->balance = $spb66d5f->m_balance; $spb45f1b->remark = '订单#' . $sp63564c->order_no; $spb45f1b->order_id = $sp63564c->id; $spb45f1b->saveOrFail(); return true; }); } catch (\Throwable $sp1b3a33) { $spdfd2b6 = 'FundHelper.orderSuccess error, order_id:' . $sp8bff63; if ($sp63564c) { $spdfd2b6 .= ', user_id:' . $sp63564c->user_id . ',income:' . $sp63564c->income . ',order_no:' . $sp63564c->order_no; } Log::error($spdfd2b6 . ' with exception:', array('Exception' => $sp1b3a33)); return false; } } public static function orderFreeze($sp8bff63, $sp7d3a2d) { $sp63564c = null; try { return DB::transaction(function () use($sp8bff63, &$sp63564c, $sp7d3a2d) { $sp63564c = \App\Order::where('id', $sp8bff63)->lockForUpdate()->firstOrFail(); if ($sp63564c->status === Order::STATUS_REFUND) { return false; } if ($sp63564c->status === Order::STATUS_FROZEN) { return true; } $spbb674c = $sp63564c->status; if ($spbb674c === \App\Order::STATUS_SUCCESS) { $spd2092e = '已发货'; } elseif ($spbb674c === \App\Order::STATUS_UNPAY) { $spd2092e = '未付款'; } elseif ($spbb674c === \App\Order::STATUS_PAID) { $spd2092e = '未发货'; } else { throw new \Exception('unknown'); } $spb66d5f = User::where('id', $sp63564c->user_id)->lockForUpdate()->firstOrFail(); $spb45f1b = new FundRecord(); $spb45f1b->user_id = $sp63564c->user_id; $spb45f1b->type = FundRecord::TYPE_OUT; $spb45f1b->order_id = $sp63564c->id; $spb45f1b->remark = $sp63564c === $sp63564c ? '' : '关联订单#' . $sp63564c->order_no . ': '; if ($spbb674c === \App\Order::STATUS_SUCCESS) { $spb66d5f->m_frozen += $sp63564c->income; $spb66d5f->saveOrFail(); $spb45f1b->amount = -$sp63564c->income; $spb45f1b->remark .= $sp7d3a2d . ', 冻结订单#' . $sp63564c->order_no; } else { $spb45f1b->amount = 0; $spb45f1b->remark .= $sp7d3a2d . ', 冻结订单(' . $spd2092e . ')#' . $sp63564c->order_no; } $spb45f1b->all = $spb66d5f->m_all; $spb45f1b->frozen = $spb66d5f->m_frozen; $spb45f1b->paid = $spb66d5f->m_paid; $spb45f1b->balance = $spb66d5f->m_balance; $spb45f1b->saveOrFail(); $sp63564c->status = \App\Order::STATUS_FROZEN; $sp63564c->frozen_reason = ($sp63564c === $sp63564c ? '' : '关联订单#' . $sp63564c->order_no . ': ') . $sp7d3a2d; $sp63564c->saveOrFail(); return true; }); } catch (\Throwable $sp1b3a33) { $spdfd2b6 = 'FundHelper.orderFreeze error'; if ($sp63564c) { $spdfd2b6 .= ', order_no:' . $sp63564c->order_no . ', user_id:' . $sp63564c->user_id . ', amount:' . $sp63564c->income; } else { $spdfd2b6 .= ', order_no: null'; } Log::error($spdfd2b6 . ' with exception:', array('Exception' => $sp1b3a33)); return false; } } public static function orderUnfreeze($sp8bff63, $spca18f8, callable $sp9c0d41 = null, &$sp5f1718 = null) { $sp63564c = null; try { return DB::transaction(function () use($sp8bff63, &$sp63564c, $spca18f8, $sp9c0d41, &$sp5f1718) { $sp63564c = \App\Order::where('id', $sp8bff63)->lockForUpdate()->firstOrFail(); if ($sp9c0d41 !== null) { $sp5780b9 = $sp9c0d41(); if ($sp5780b9 !== self::ACTION_CONTINUE) { return $sp5780b9; } } if ($sp63564c->status === Order::STATUS_REFUND) { $sp5f1718 = $sp63564c->status; return false; } if ($sp63564c->status !== Order::STATUS_FROZEN) { $sp5f1718 = $sp63564c->status; return true; } $sp6ca6a6 = $sp63564c->card_orders()->exists(); if ($sp6ca6a6) { $sp5f1718 = \App\Order::STATUS_SUCCESS; $spd2092e = '已发货'; } else { if ($sp63564c->paid_at === NULL) { $sp5f1718 = \App\Order::STATUS_UNPAY; $spd2092e = '未付款'; } else { $sp5f1718 = \App\Order::STATUS_PAID; $spd2092e = '未发货'; } } $spb66d5f = User::where('id', $sp63564c->user_id)->lockForUpdate()->firstOrFail(); $spb45f1b = new FundRecord(); $spb45f1b->user_id = $sp63564c->user_id; $spb45f1b->type = FundRecord::TYPE_IN; $spb45f1b->remark = $sp63564c === $sp63564c ? '' : '关联订单#' . $sp63564c->order_no . ': '; $spb45f1b->order_id = $sp63564c->id; if ($sp6ca6a6) { $spb66d5f->m_frozen -= $sp63564c->income; $spb66d5f->saveOrFail(); $spb45f1b->amount = $sp63564c->income; $spb45f1b->remark .= $spca18f8 . ', 解冻订单#' . $sp63564c->order_no; } else { $spb45f1b->amount = 0; $spb45f1b->remark .= $spca18f8 . ', 解冻订单(' . $spd2092e . ')#' . $sp63564c->order_no; } $spb45f1b->all = $spb66d5f->m_all; $spb45f1b->frozen = $spb66d5f->m_frozen; $spb45f1b->paid = $spb66d5f->m_paid; $spb45f1b->balance = $spb66d5f->m_balance; $spb45f1b->saveOrFail(); $sp63564c->status = $sp5f1718; $sp63564c->saveOrFail(); return true; }); } catch (\Throwable $sp1b3a33) { $spdfd2b6 = 'FundHelper.orderUnfreeze error'; if ($sp63564c) { $spdfd2b6 .= ', order_no:' . $sp63564c->order_no . ', user_id:' . $sp63564c->user_id . ',amount:' . $sp63564c->income; } else { $spdfd2b6 .= ', order_no: null'; } Log::error($spdfd2b6 . ' with exception:', array('Exception' => $sp1b3a33)); return false; } } }