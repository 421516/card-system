<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { public static function orderSuccess($sp7fd294, callable $sp32e54c) { $sp5670aa = $sp7fd294->user_id; $sp2b135f = $sp7fd294->income; try { return DB::transaction(function () use($sp7fd294, $sp5670aa, $sp2b135f, $sp32e54c) { if ($sp32e54c() === Order::STATUS_SUCCESS) { $sp3353ce = User::where('id', $sp5670aa)->lockForUpdate()->firstOrFail(); $sp3353ce->m_all += $sp2b135f; $sp3353ce->saveOrFail(); $sp719e5e = new FundRecord(); $sp719e5e->user_id = $sp5670aa; $sp719e5e->type = FundRecord::TYPE_IN; $sp719e5e->amount = $sp2b135f; $sp719e5e->balance = $sp3353ce->m_balance; $sp719e5e->remark = '订单#' . $sp7fd294->order_no; $sp719e5e->order_id = $sp7fd294->id; $sp719e5e->saveOrFail(); } return true; }); } catch (\Throwable $sp2a4a9a) { $spbfa8f4 = 'FundHelper.orderSuccess error, user_id:' . $sp5670aa . ',amount:' . $sp2b135f . ',order_no:' . $sp7fd294->order_no; \Illuminate\Support\Facades\Log::error($spbfa8f4 . ' with exception:', array('Exception' => $sp2a4a9a)); return false; } } public static function orderFreeze($sp7fd294, $spd91176) { if ($sp7fd294->status === Order::STATUS_FROZEN || $sp7fd294->status === Order::STATUS_REFUND) { return true; } $sp5670aa = $sp7fd294->user_id; try { return DB::transaction(function () use($sp7fd294, $sp5670aa, $spd91176) { $sp7fd294->status = \App\Order::STATUS_FROZEN; $sp7fd294->frozen_reason = $spd91176; $sp7fd294->saveOrFail(); $sp3353ce = User::where('id', $sp5670aa)->lockForUpdate()->firstOrFail(); if ($sp7fd294->cards()->exists()) { $sp3353ce->m_frozen += $sp7fd294->income; $sp3353ce->saveOrFail(); $sp719e5e = new FundRecord(); $sp719e5e->user_id = $sp5670aa; $sp719e5e->type = FundRecord::TYPE_OUT; $sp719e5e->amount = -$sp7fd294->income; $sp719e5e->balance = $sp3353ce->m_balance; $sp719e5e->remark = $spd91176 . ', 冻结订单#' . $sp7fd294->order_no; $sp719e5e->order_id = $sp7fd294->id; $sp719e5e->saveOrFail(); } else { if ($sp7fd294->paid_at === NULL) { $spd29364 = '未付款'; } else { $spd29364 = '未发货'; } $sp719e5e = new FundRecord(); $sp719e5e->user_id = $sp5670aa; $sp719e5e->type = FundRecord::TYPE_OUT; $sp719e5e->amount = 0; $sp719e5e->balance = $sp3353ce->m_balance; $sp719e5e->remark = $spd91176 . ', 冻结订单(' . $spd29364 . ')#' . $sp7fd294->order_no; $sp719e5e->order_id = $sp7fd294->id; $sp719e5e->saveOrFail(); } return true; }); } catch (\Throwable $sp2a4a9a) { $spbfa8f4 = 'FundHelper.orderFreeze error, user_id:' . $sp5670aa . ',amount:' . $sp7fd294->income; if ($sp7fd294) { $spbfa8f4 .= ',order_no:' . $sp7fd294->order_no; } else { $spbfa8f4 .= ',order_no: null'; } \Illuminate\Support\Facades\Log::error($spbfa8f4 . ' with exception:', array('Exception' => $sp2a4a9a)); return false; } } public static function orderUnfreeze($sp7fd294, $sp92437c, callable $spa00669 = null, &$sp7bcfe8 = null) { $sp5670aa = $sp7fd294->user_id; try { return DB::transaction(function () use($sp7fd294, $sp5670aa, $sp92437c, $spa00669, &$sp7bcfe8) { if ($spa00669 !== null && $spa00669() === false) { return false; } if ($sp7fd294->status !== Order::STATUS_FROZEN) { $sp7bcfe8 = $sp7fd294->status; return true; } $sp3353ce = User::where('id', $sp5670aa)->lockForUpdate()->firstOrFail(); if ($sp7fd294->cards()->exists()) { $sp7fd294->status = \App\Order::STATUS_SUCCESS; $sp3353ce->m_frozen -= $sp7fd294->income; $sp3353ce->saveOrFail(); $sp719e5e = new FundRecord(); $sp719e5e->user_id = $sp5670aa; $sp719e5e->type = FundRecord::TYPE_IN; $sp719e5e->amount = $sp7fd294->income; $sp719e5e->balance = $sp3353ce->m_balance; $sp719e5e->remark = $sp92437c . ', 解冻订单#' . $sp7fd294->order_no; $sp719e5e->order_id = $sp7fd294->id; $sp719e5e->saveOrFail(); } else { if ($sp7fd294->paid_at === NULL) { $sp7fd294->status = \App\Order::STATUS_UNPAY; $spd29364 = '未付款'; } else { $sp7fd294->status = \App\Order::STATUS_PAID; $spd29364 = '未发货'; } $sp719e5e = new FundRecord(); $sp719e5e->user_id = $sp5670aa; $sp719e5e->type = FundRecord::TYPE_IN; $sp719e5e->amount = 0; $sp719e5e->balance = $sp3353ce->m_balance; $sp719e5e->remark = $sp92437c . ', 解冻订单(' . $spd29364 . ')#' . $sp7fd294->order_no; $sp719e5e->order_id = $sp7fd294->id; $sp719e5e->saveOrFail(); } $sp7bcfe8 = $sp7fd294->status; $sp7fd294->saveOrFail(); return true; }); } catch (\Throwable $sp2a4a9a) { $spbfa8f4 = 'FundHelper.orderUnfreeze error, user_id:' . $sp5670aa . ',amount:' . $sp7fd294->income; if ($sp7fd294) { $spbfa8f4 .= ',order_no:' . $sp7fd294->order_no; } else { $spbfa8f4 .= ',order_no: null'; } \Illuminate\Support\Facades\Log::error($spbfa8f4 . ' with exception:', array('Exception' => $sp2a4a9a)); return false; } } }