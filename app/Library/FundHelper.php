<?php
namespace App\Library; use App\Order; use App\User; use App\FundRecord; use Illuminate\Support\Facades\DB; class FundHelper { public static function orderSuccess($spc9222b, callable $sp088a80) { $spfedf4e = $spc9222b->user_id; $sp64673e = $spc9222b->income; try { return DB::transaction(function () use($spc9222b, $spfedf4e, $sp64673e, $sp088a80) { if ($sp088a80() === Order::STATUS_SUCCESS) { $sp7b4336 = User::where('id', $spfedf4e)->lockForUpdate()->firstOrFail(); $sp7b4336->m_all += $sp64673e; $sp7b4336->saveOrFail(); $sp4f1d42 = new FundRecord(); $sp4f1d42->user_id = $spfedf4e; $sp4f1d42->type = FundRecord::TYPE_IN; $sp4f1d42->amount = $sp64673e; $sp4f1d42->balance = $sp7b4336->m_balance; $sp4f1d42->remark = '订单#' . $spc9222b->order_no; $sp4f1d42->order_id = $spc9222b->id; $sp4f1d42->saveOrFail(); } return true; }); } catch (\Throwable $sp805d3e) { $sp3792af = 'FundHelper.orderSuccess error, user_id:' . $spfedf4e . ',amount:' . $sp64673e . ',order_no:' . $spc9222b->order_no; \Illuminate\Support\Facades\Log::error($sp3792af . ' with exception:', array('Exception' => $sp805d3e)); return false; } } public static function orderFreeze($spc9222b, $sped2b46) { if ($spc9222b->status === Order::STATUS_FROZEN || $spc9222b->status === Order::STATUS_REFUND) { return true; } $spfedf4e = $spc9222b->user_id; try { return DB::transaction(function () use($spc9222b, $spfedf4e, $sped2b46) { $spc9222b->status = \App\Order::STATUS_FROZEN; $spc9222b->frozen_reason = $sped2b46; $spc9222b->saveOrFail(); $sp7b4336 = User::where('id', $spfedf4e)->lockForUpdate()->firstOrFail(); if ($spc9222b->cards()->exists()) { $sp7b4336->m_frozen += $spc9222b->income; $sp7b4336->saveOrFail(); $sp4f1d42 = new FundRecord(); $sp4f1d42->user_id = $spfedf4e; $sp4f1d42->type = FundRecord::TYPE_OUT; $sp4f1d42->amount = -$spc9222b->income; $sp4f1d42->balance = $sp7b4336->m_balance; $sp4f1d42->remark = $sped2b46 . ', 冻结订单#' . $spc9222b->order_no; $sp4f1d42->order_id = $spc9222b->id; $sp4f1d42->saveOrFail(); } else { if ($spc9222b->paid_at === NULL) { $sp20ff14 = '未付款'; } else { $sp20ff14 = '未发货'; } $sp4f1d42 = new FundRecord(); $sp4f1d42->user_id = $spfedf4e; $sp4f1d42->type = FundRecord::TYPE_OUT; $sp4f1d42->amount = 0; $sp4f1d42->balance = $sp7b4336->m_balance; $sp4f1d42->remark = $sped2b46 . ', 冻结订单(' . $sp20ff14 . ')#' . $spc9222b->order_no; $sp4f1d42->order_id = $spc9222b->id; $sp4f1d42->saveOrFail(); } return true; }); } catch (\Throwable $sp805d3e) { $sp3792af = 'FundHelper.orderFreeze error, user_id:' . $spfedf4e . ',amount:' . $spc9222b->income; if ($spc9222b) { $sp3792af .= ',order_no:' . $spc9222b->order_no; } else { $sp3792af .= ',order_no: null'; } \Illuminate\Support\Facades\Log::error($sp3792af . ' with exception:', array('Exception' => $sp805d3e)); return false; } } public static function orderUnfreeze($spc9222b, $spf60343, callable $spbfbccd = null, &$spc30d04 = null) { $spfedf4e = $spc9222b->user_id; try { return DB::transaction(function () use($spc9222b, $spfedf4e, $spf60343, $spbfbccd, &$spc30d04) { if ($spbfbccd !== null && $spbfbccd() === false) { return false; } if ($spc9222b->status !== Order::STATUS_FROZEN) { $spc30d04 = $spc9222b->status; return true; } $sp7b4336 = User::where('id', $spfedf4e)->lockForUpdate()->firstOrFail(); if ($spc9222b->cards()->exists()) { $spc9222b->status = \App\Order::STATUS_SUCCESS; $sp7b4336->m_frozen -= $spc9222b->income; $sp7b4336->saveOrFail(); $sp4f1d42 = new FundRecord(); $sp4f1d42->user_id = $spfedf4e; $sp4f1d42->type = FundRecord::TYPE_IN; $sp4f1d42->amount = $spc9222b->income; $sp4f1d42->balance = $sp7b4336->m_balance; $sp4f1d42->remark = $spf60343 . ', 解冻订单#' . $spc9222b->order_no; $sp4f1d42->order_id = $spc9222b->id; $sp4f1d42->saveOrFail(); } else { if ($spc9222b->paid_at === NULL) { $spc9222b->status = \App\Order::STATUS_UNPAY; $sp20ff14 = '未付款'; } else { $spc9222b->status = \App\Order::STATUS_PAID; $sp20ff14 = '未发货'; } $sp4f1d42 = new FundRecord(); $sp4f1d42->user_id = $spfedf4e; $sp4f1d42->type = FundRecord::TYPE_IN; $sp4f1d42->amount = 0; $sp4f1d42->balance = $sp7b4336->m_balance; $sp4f1d42->remark = $spf60343 . ', 解冻订单(' . $sp20ff14 . ')#' . $spc9222b->order_no; $sp4f1d42->order_id = $spc9222b->id; $sp4f1d42->saveOrFail(); } $spc30d04 = $spc9222b->status; $spc9222b->saveOrFail(); return true; }); } catch (\Throwable $sp805d3e) { $sp3792af = 'FundHelper.orderUnfreeze error, user_id:' . $spfedf4e . ',amount:' . $spc9222b->income; if ($spc9222b) { $sp3792af .= ',order_no:' . $spc9222b->order_no; } else { $sp3792af .= ',order_no: null'; } \Illuminate\Support\Facades\Log::error($sp3792af . ' with exception:', array('Exception' => $sp805d3e)); return false; } } }