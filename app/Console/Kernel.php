<?php
namespace App\Console; use App\System; use Carbon\Carbon; use Illuminate\Console\Scheduling\Schedule; use Illuminate\Foundation\Console\Kernel as ConsoleKernel; use Illuminate\Support\Facades\DB; use Illuminate\Support\Facades\Log; use Illuminate\Support\Facades\Schema; class Kernel extends ConsoleKernel { protected $commands = array(); protected function schedule(Schedule $sp2821a5) { if (!app()->runningInConsole()) { return; } try { DB::connection()->getPdo(); if (Schema::hasTable('migrations')) { if (!Schema::hasTable('systems')) { die(' * No system table, please install your website first.
'); } } else { return; } } catch (\Exception $sp1b3a33) { if (config('database.connections.mysql.host') === '数据库地址') { die(' * Please change your config of database in \'.env\' file 
'); } else { die(' * Database connection error: ' . $sp1b3a33->getMessage() . '
'); } } if (System::_getInt('order_clean_unpay_open') === 1) { $spea7665 = System::_getInt('order_clean_unpay_day', 7); $sp2821a5->call(function () use($spea7665) { echo '[' . date('Y-m-d H:i:s') . "] cleaning unpaid orders({$spea7665} days ago)...\n"; \App\Order::where('status', \App\Order::STATUS_UNPAY)->where('created_at', '<', (new Carbon())->addDays(-$spea7665))->delete(); $sp469aa0 = '[' . date('Y-m-d H:i:s') . '] unpaid-orders cleaned 
'; echo $sp469aa0; })->dailyAt('01:00'); } $sp2821a5->call(function () { $spea7665 = 7; echo '[' . date('Y-m-d H:i:s') . "] cleaning deleted cards({$spea7665} days ago)...\n"; \App\Card::onlyTrashed()->where('deleted_at', '<', (new Carbon())->addDays(-$spea7665))->forceDelete(); $sp469aa0 = '[' . date('Y-m-d H:i:s') . '] deleted-cards cleaned
'; echo $sp469aa0; })->dailyAt('02:00'); } protected function commands() { $this->load(__DIR__ . '/Commands'); require base_path('routes/console.php'); } }