<?php
namespace App\Exceptions; use App\Library\Response; use Exception; use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler; class Handler extends ExceptionHandler { protected $dontReport = array(); protected $dontFlash = array('password', 'password_confirmation'); public function report(Exception $sp7b5ade) { parent::report($sp7b5ade); } public function render($sp2d83a6, Exception $spfda1c7) { if ($spfda1c7 instanceof \Illuminate\Database\Eloquent\ModelNotFoundException) { return $sp2d83a6->expectsJson() ? response()->json(array('message' => '记录未找到'), 404) : response()->view('errors._', array('code' => 404, 'message' => '记录未找到'), 404); } elseif ($spfda1c7 instanceof \Illuminate\Auth\AuthenticationException) { return $sp2d83a6->expectsJson() ? response()->json(array('message' => '请先登录'), 401) : response()->view('errors._', array('code' => 401, 'message' => '请先登录'), 401); } elseif ($spfda1c7 instanceof \Illuminate\Auth\Access\AuthorizationException) { return $sp2d83a6->expectsJson() ? response()->json(array('message' => '未授权的操作'), 403) : response()->view('errors._', array('code' => 403, 'message' => '未授权的操作'), 403); } elseif ($spfda1c7 instanceof \Illuminate\Validation\ValidationException) { return parent::render($sp2d83a6, $spfda1c7); } elseif ($spfda1c7 instanceof \Illuminate\Session\TokenMismatchException) { return $sp2d83a6->expectsJson() ? response()->json(array('message' => '请刷新页面后重试'), 403) : response()->view('errors._', array('code' => 403, 'message' => '请刷新页面后重试'), 403); } elseif ($spfda1c7 instanceof \Symfony\Component\HttpKernel\Exception\NotFoundHttpException) { return $sp2d83a6->expectsJson() ? response()->json(array('message' => '页面未找到'), 404) : response()->view('errors._', array('code' => 404, 'message' => '页面未找到'), 404); } elseif ($spfda1c7 instanceof \Symfony\Component\HttpKernel\Exception\MethodNotAllowedHttpException) { return $sp2d83a6->expectsJson() ? response()->json(array('message' => '请求方法不允许'), 405) : response()->view('errors._', array('code' => 405, 'message' => '请求方法不允许'), 405); } elseif ($spfda1c7 instanceof \Symfony\Component\HttpKernel\Exception\ServiceUnavailableHttpException) { \Log::error('Uncaught a ServiceUnavailableHttpException', array('Exception' => $spfda1c7)); return $sp2d83a6->expectsJson() ? response()->json(array('message' => '当前服务不可用，请稍后重试'), 503) : response()->view('errors._', array('code' => 503, 'message' => '当前服务不可用，请稍后重试'), 503); } \Log::error('Uncaught Exception', array('Exception' => $spfda1c7)); if (config('app.debug')) { return parent::render($sp2d83a6, $spfda1c7); } else { return $sp2d83a6->expectsJson() ? response()->json(array('message' => '未知错误，请联系客服'), 500) : response()->view('errors.500', array(), 500); } } }